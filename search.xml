<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo-theme-matery博客如何添加看板娘</title>
    <url>/2022/08/28/Hexo+next/hexo-theme-matery%E5%8D%9A%E5%AE%A2%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E7%9C%8B%E6%9D%BF%E5%A8%98/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="一-Live2D是什么？"><a href="#一-Live2D是什么？" class="headerlink" title="一,Live2D是什么？"></a>一,Live2D是什么？</h2><blockquote>
<p>2D的素材实现一定程度的3D效果</p>
</blockquote>
<h2 id="二-前期准备"><a href="#二-前期准备" class="headerlink" title="二,前期准备"></a>二,前期准备</h2><blockquote>
<p>检查博客主目录下的package.json是否有”hexo-helper-live2d”: “^3.0.3”,依赖，<br>有的话可以先卸载：npm uninstall hexo-helper-live2d<br><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/20200129105033341.png" alt="这是图片"></p>
</blockquote>
<h2 id="三-安装依赖"><a href="#三-安装依赖" class="headerlink" title="三,安装依赖"></a>三,安装依赖</h2><blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>

<p>成功了之后可以看到当前目录的node_modules&#x2F;下有个live2d-widget目录，这是动画的主配置：<br><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2020012910571945.png" alt="这是图片"></p>
</blockquote>
<h2 id="四-下载model文件"><a href="#四-下载model文件" class="headerlink" title="四,下载model文件"></a>四,下载model文件</h2><blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;npm install live2d-widget-model-shizuku</span><br></pre></td></tr></table></figure>

<p>model名字可在live2d-widget-models中找到，也可点击live2d看板娘模型预览来选择你喜欢的模型进行安装。<br>安装完成可以在node_modules&#x2F;下看到live2d-widget-model-shizuku文件夹<br><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/20200129110058553.png" alt="This is an picture"></p>
</blockquote>
<h2 id="五-添加live2d看板娘到hexo"><a href="#五-添加live2d看板娘到hexo" class="headerlink" title="五,添加live2d看板娘到hexo"></a>五,添加live2d看板娘到hexo</h2><blockquote>
<p>配置Hexo的主_config.yml或者使用的主题的_config.yml<br>添加以下代码到配置文件中：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Live2D看板娘</span></span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  model:</span><br><span class="line">    <span class="comment">#模板目录，在node_modules里</span></span><br><span class="line">    use: live2d-widget-model-shizuku  </span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: <span class="number">300</span> </span><br><span class="line">    height: <span class="number">600</span></span><br><span class="line">  mobile:</span><br><span class="line">    <span class="comment"># 在手机端显示</span></span><br><span class="line">    show: false   </span><br><span class="line">  rect:</span><br><span class="line">    opacity:<span class="number">0.7</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="六-查看效果"><a href="#六-查看效果" class="headerlink" title="六,查看效果"></a>六,查看效果</h2><blockquote>
<p>在git bash上<code>hexo g </code>,<code>hexo s</code>,用浏览器在本地打开即可看到效果。</p>
</blockquote>
<h2 id="七，参考链接"><a href="#七，参考链接" class="headerlink" title="七，参考链接"></a>七，参考链接</h2><p><a href="https://blog.csdn.net/qq_36239569/article/details/104104894?app_version=5.7.2&csdn_share_tail=%7B%22type%22:%22blog%22,%22rType%22:%22article%22,%22rId%22:%22104104894%22,%22source%22:%22qq_53322614%22%7D&utm_source=app">(52条消息) Hexo添加Live2D看板娘最新教程_飞萤乱入帘的博客-CSDN博客_hexo live2d</a></p>
]]></content>
      <categories>
        <category>网站探索</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝牙模块的配置与使用</title>
    <url>/2022/09/04/51/%E8%93%9D%E7%89%99%E6%A8%A1%E5%9D%97%E7%9A%84%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="1-配置"><a href="#1-配置" class="headerlink" title="1.配置"></a>1.配置</h2><p>即用TTL转USB接口和电脑的串口助手调节蓝牙模块的参数</p>
<h3 id="a-配置连线"><a href="#a-配置连线" class="headerlink" title="a.配置连线"></a>a.配置连线</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b7777ba4-24ba-42a1-835f-65312679d816.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5dbacd03-9ada-4839-95e2-34c3c70eb918.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/96eb7cb2-78b4-4219-85e2-d585d3b55b8b.jpg"></th>
</tr>
</thead>
</table>
<h3 id="b-调节蓝牙模块参数"><a href="#b-调节蓝牙模块参数" class="headerlink" title="b.调节蓝牙模块参数"></a>b.调节蓝牙模块参数</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e4ea1729-4781-48ea-a723-456133121c28.png"></p>
<h3 id="进入AT指令模式"><a href="#进入AT指令模式" class="headerlink" title="进入AT指令模式"></a>进入AT指令模式</h3><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b581d138-be86-4ff9-9ad7-50bc047c4fc3.jpg" style="zoom: 150%;" />

<h3 id="确认连接"><a href="#确认连接" class="headerlink" title="确认连接"></a>确认连接</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">发：AT</span><br><span class="line"></span><br><span class="line">收：OK</span><br></pre></td></tr></table></figure>

<h3 id="更改蓝牙名称"><a href="#更改蓝牙名称" class="headerlink" title="更改蓝牙名称"></a>更改蓝牙名称</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">发：AT+NAME?</span><br><span class="line"></span><br><span class="line">收:  ERROR:0</span><br><span class="line"></span><br><span class="line">发：AT+NAME=yang(名字)</span><br><span class="line"></span><br><span class="line">收：OK</span><br><span class="line"></span><br><span class="line">发：AT+NAME?</span><br><span class="line"></span><br><span class="line">收:   yang</span><br></pre></td></tr></table></figure>

<h3 id="更改配对密码"><a href="#更改配对密码" class="headerlink" title="更改配对密码"></a>更改配对密码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">默认为1234，一般不需要改</span><br><span class="line"></span><br><span class="line">发：AT+ PSWD?</span><br><span class="line"></span><br><span class="line">收：+PSWD:1234</span><br></pre></td></tr></table></figure>

<h3 id="更改波特率"><a href="#更改波特率" class="headerlink" title="更改波特率"></a>更改波特率</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">发：AT+ UART=9600,0,0</span><br><span class="line"></span><br><span class="line">收：OK</span><br></pre></td></tr></table></figure>

<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>一般错误加减空格或注意换行就可以解决</p>
<h2 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/682fdaaa-f755-4d3c-bbe7-5c3c743977d9.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/755d5a8f-2398-4bcc-a137-51e5f244db6d.png"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/52cc200a-347e-446e-b54e-117d009e785a.jpg"></th>
</tr>
</thead>
</table>
]]></content>
      <categories>
        <category>嵌入式</category>
      </categories>
      <tags>
        <tag>51</tag>
      </tags>
  </entry>
  <entry>
    <title>next-主题配置</title>
    <url>/2022/09/04/Hexo+next/next-%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="一，基本配置"><a href="#一，基本配置" class="headerlink" title="一，基本配置"></a>一，基本配置</h2><p><a href="http://theme-next.iissnan.com/getting-started.html">http://theme-next.iissnan.com/getting-started.html</a></p>
<p><a href="https://mercer5.github.io/2020/04/08/next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/">https://mercer5.github.io/2020/04/08/next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</a></p>
<h2 id="二，个性化配置"><a href="#二，个性化配置" class="headerlink" title="二，个性化配置"></a>二，个性化配置</h2><p><a href="http://home.ustc.edu.cn/~liujunyan/blog/hexo-next-theme-config/">http://home.ustc.edu.cn/~liujunyan/blog/hexo-next-theme-config/</a></p>
<p><a href="https://uchuhimo.me/2017/04/11/genesis/">https://uchuhimo.me/2017/04/11/genesis/</a></p>
<h3 id="更换网站图标"><a href="#更换网站图标" class="headerlink" title="更换网站图标"></a>更换网站图标</h3><p><a href="https://blog.csdn.net/Calvin_zhou/article/details/110517826">https://blog.csdn.net/Calvin_zhou/article/details/110517826</a></p>
<h3 id="设置圆角"><a href="#设置圆角" class="headerlink" title="设置圆角"></a>设置圆角</h3><p><a href="https://cs-cshi.github.io/hexo-blog/Hexo-NexT%20%E8%AE%BE%E7%BD%AE%E5%9C%86%E8%A7%92/">https://cs-cshi.github.io/hexo-blog/Hexo-NexT%20%E8%AE%BE%E7%BD%AE%E5%9C%86%E8%A7%92/</a></p>
<h3 id="更换背景"><a href="#更换背景" class="headerlink" title="更换背景"></a>更换背景</h3><p><a href="https://sqmwin.github.io/2017/12/31/next-background-image/">https://sqmwin.github.io/2017/12/31/next-background-image/</a></p>
<p><a href="https://blog.csdn.net/weixin_45877759/article/details/107005112">https://blog.csdn.net/weixin_45877759/article/details/107005112</a></p>
<blockquote>
<p>注意真正的位置！</p>
</blockquote>
<img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/屏幕截图 2022-09-30 192414.jpg" style="zoom:80%;" />

<h3 id="更改博客透明度"><a href="#更改博客透明度" class="headerlink" title="更改博客透明度"></a>更改博客透明度</h3><p><a href="https://tding.top/archives/761b6f4d.html">https://tding.top/archives/761b6f4d.html</a></p>
<h3 id="开启动画"><a href="#开启动画" class="headerlink" title="开启动画"></a>开启动画</h3><p><a href="https://tding.top/archives/dfac1e9c.html">https://tding.top/archives/dfac1e9c.html</a></p>
<h3 id="折叠代码"><a href="#折叠代码" class="headerlink" title="折叠代码"></a>折叠代码</h3><p><a href="http://tksy_1_xfgao.gitee.io/xfgblog/2022/07/02/20220702%E6%8A%98%E5%8F%A0%E4%BB%A3%E7%A0%81hexo/">http://tksy_1_xfgao.gitee.io/xfgblog/2022/07/02/20220702%E6%8A%98%E5%8F%A0%E4%BB%A3%E7%A0%81hexo/</a></p>
<p><a href="https://www.toimc.com/hexo-usage-2/">https://www.toimc.com/hexo-usage-2/</a></p>
<h3 id="给文章设置密码"><a href="#给文章设置密码" class="headerlink" title="给文章设置密码"></a>给文章设置密码</h3><p><a href="https://mrlichangming.github.io/2018/10/05/hexo-Next%E4%B8%BB%E9%A1%8C%E7%BB%99%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/">https://mrlichangming.github.io/2018/10/05/hexo-Next%E4%B8%BB%E9%A1%8C%E7%BB%99%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/</a></p>
<h3 id="点击鼠标出现爱心"><a href="#点击鼠标出现爱心" class="headerlink" title="点击鼠标出现爱心"></a>点击鼠标出现爱心</h3><p><a href="https://guanqr.com/tech/website/hexo-theme-next-customization/#%E6%B7%BB%E5%8A%A0%E7%82%B9%E5%87%BB%E7%88%B1%E5%BF%83%E7%89%B9%E6%95%88">https://guanqr.com/tech/website/hexo-theme-next-customization/#%E6%B7%BB%E5%8A%A0%E7%82%B9%E5%87%BB%E7%88%B1%E5%BF%83%E7%89%B9%E6%95%88</a></p>
<h3 id="配置友链格式1"><a href="#配置友链格式1" class="headerlink" title="配置友链格式1"></a>配置友链格式1</h3><p><a href="https://guanqr.com/tech/website/hexo-theme-next-customization/#%E6%B7%BB%E5%8A%A0%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5%E9%A1%B5%E9%9D%A2">https://guanqr.com/tech/website/hexo-theme-next-customization/#%E6%B7%BB%E5%8A%A0%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5%E9%A1%B5%E9%9D%A2</a></p>
<h3 id="配置友链格式2"><a href="#配置友链格式2" class="headerlink" title="配置友链格式2"></a>配置友链格式2</h3><p>\1.   使用 <code>hexo new page links</code> 建立一个页面。这将会创建 <code>source/links/index.md</code></p>
<p>\2.   打开 <code>source/links</code> 目录，把 index.md 文件替换成我这个（在附件中），可以按你的喜好修改。</p>
<p>\3.   接下来把附件中剩余三个文件也复制进这个 links 文件夹。其中，link.js.txt 要重命名去掉 .txt 后缀（邮件不让传js格式的附件）。其中 linklist.json 是友链的数据库</p>
<p>\4.   修改主题配置文件，在 sidebar 里面把 links 那一行前面的注释去掉（为了侧边栏显示友链按钮）</p>
<p>\5.   现在重新生成一下博客应该就能看到效果了。注：有些样式依赖于 NexT 主题，所以这个配置方法在不同博客上可能有差异，并不通用。比如，主题配置文件中 note – style 也会影响样式（我选的 flat）</p>
<p>文件一：linklist.json</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;name&quot;: &quot;flamiec&quot;,</span><br><span class="line">    &quot;site&quot;: &quot;https://www.flamiec.cn/&quot;,</span><br><span class="line">    &quot;avatar&quot;: &quot;https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/微信截图_20230114224609.png&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;name&quot;: &quot;小丁的个人博客&quot;,</span><br><span class="line">    &quot;site&quot;: &quot;https://tding.top/&quot;,</span><br><span class="line">    &quot;avatar&quot;: &quot;https://tding.top/images/avatar.webp&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">	&quot;name&quot;: &quot;Kevin&#x27;s Blog&quot;,</span><br><span class="line">	&quot;site&quot;: &quot;https://www.kevinly.com.cn/&quot;,</span><br><span class="line">	&quot;avatar&quot;: &quot;https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/微信截图_20230114224540.png&quot;,</span><br><span class="line">	&quot;desc&quot;: &quot;just so so&quot;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>文件二：link.js</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 随机排列</span><br><span class="line">function shuffle(arr) &#123;</span><br><span class="line">  let i = arr.length;</span><br><span class="line">  while (i) &#123;</span><br><span class="line">    let j = Math.floor(Math.random() * i--);</span><br><span class="line">    [arr[j], arr[i]] = [arr[i], arr[j]];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 渲染数据</span><br><span class="line">function renderlink(data) &#123;</span><br><span class="line">  var name, avatar, site, li = &quot;&quot;;</span><br><span class="line">  shuffle(data);</span><br><span class="line">  for (var i = 0; i &lt; data.length; i++) &#123;</span><br><span class="line">    name = data[i].name;</span><br><span class="line">    avatar = data[i].avatar;</span><br><span class="line">    site = data[i].site;</span><br><span class="line">    li += &#x27;&lt;div class=&quot;card&quot;&gt;&#x27; + &#x27;&lt;a href=&quot;&#x27; + site + &#x27;&quot; target=&quot;_blank&quot;&gt;&#x27; + &#x27;&lt;div class=&quot;thumb&quot; style=&quot;background: url( &#x27; + avatar + &#x27;);&quot;&gt;&#x27; + &#x27;&lt;/div&gt;&#x27; + &#x27;&lt;/a&gt;&#x27; + &#x27;&lt;div class=&quot;card-header&quot;&gt;&#x27; + &#x27;&lt;div&gt;&lt;a href=&quot;&#x27; + site + &#x27;&quot; target=&quot;_blank&quot;&gt;&#x27; + name + &#x27;&lt;/a&gt;&lt;/div&gt;&#x27; + &#x27;&lt;/div&gt;&#x27; + &#x27;&lt;/div&gt;&#x27;;</span><br><span class="line">  &#125;</span><br><span class="line">  document.querySelector(&quot;.link-navigation&quot;).innerHTML = li;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 获取 json 文件</span><br><span class="line">fetch(&#x27;/links/linklist.json&#x27;)</span><br><span class="line">  .then(response =&gt; response.json())</span><br><span class="line">  .then(res =&gt; renderlink(res));</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>文件三：link.css</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.links-content &#123;</span><br><span class="line">    margin-top: 1rem</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.link-navigation::after &#123;</span><br><span class="line">    content: &quot; &quot;;</span><br><span class="line">    display: block;</span><br><span class="line">    clear: both</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.card &#123;</span><br><span class="line">    width: 130px;</span><br><span class="line">    font-size: 1rem;</span><br><span class="line">    padding: 0;</span><br><span class="line">    border-radius: 4px;</span><br><span class="line">    transition-duration: .15s;</span><br><span class="line">    margin-bottom: 1rem;</span><br><span class="line">    display: block;</span><br><span class="line">    float: left;</span><br><span class="line">    box-shadow: 0 2px 6px 0 rgba(0,0,0,.12);</span><br><span class="line">    background: #f5f5f5</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.card &#123;</span><br><span class="line">    margin-left: 16px</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@media(max-width:567px) &#123;</span><br><span class="line">    .card &#123;</span><br><span class="line">        margin-left: 16px;</span><br><span class="line">        width: calc((100% - 16px)/2)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .card:nth-child(2n+1) &#123;</span><br><span class="line">        margin-left: 0</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .card:not(:nth-child(2n+1)) &#123;</span><br><span class="line">        margin-left: 16px</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@media(min-width:567px) &#123;</span><br><span class="line">    .card &#123;</span><br><span class="line">        margin-left: 16px;</span><br><span class="line">        width: calc((100% - 32px)/3)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .card:nth-child(3n+1) &#123;</span><br><span class="line">        margin-left: 0</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .card:not(:nth-child(3n+1)) &#123;</span><br><span class="line">        margin-left: 16px</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@media(min-width:768px) &#123;</span><br><span class="line">    .card &#123;</span><br><span class="line">        margin-left: 16px;</span><br><span class="line">        width: calc((100% - 48px)/4)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .card:nth-child(4n+1) &#123;</span><br><span class="line">        margin-left: 0</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .card:not(:nth-child(4n+1)) &#123;</span><br><span class="line">        margin-left: 16px</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@media(min-width:1200px) &#123;</span><br><span class="line">    .card &#123;</span><br><span class="line">        margin-left: 16px;</span><br><span class="line">        width: calc((100% - 64px)/5)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .card:nth-child(5n+1) &#123;</span><br><span class="line">        margin-left: 0</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .card:not(:nth-child(5n+1)) &#123;</span><br><span class="line">        margin-left: 16px</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.card:hover &#123;</span><br><span class="line">    transform: scale(1.1);</span><br><span class="line">    box-shadow: 0 2px 6px 0 rgba(0,0,0,.12),0 0 6px 0 rgba(0,0,0,.04)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.card .thumb &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 0;</span><br><span class="line">    padding-bottom: 100%;</span><br><span class="line">    background-size: 100% 100%!important</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.posts-expand .post-body img &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">    border: 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.card .card-header &#123;</span><br><span class="line">    display: block;</span><br><span class="line">    text-align: center;</span><br><span class="line">    padding: 1rem .25rem;</span><br><span class="line">    font-weight: 500;</span><br><span class="line">    color: #333;</span><br><span class="line">    white-space: normal</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.card .card-header a &#123;</span><br><span class="line">    font-style: normal;</span><br><span class="line">    color: #2bbc8a;</span><br><span class="line">    font-weight: 700;</span><br><span class="line">	font-size: 95%;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">    border: 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.card .card-header a:hover &#123;</span><br><span class="line">    color: #d480aa;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">    border: 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>文件四：index.md</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">type: links</span><br><span class="line">toc:</span><br><span class="line">  enable: false</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;/links/link.css&quot;&gt;</span><br><span class="line">&lt;script data-pjax src=&quot;./link.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% note default %&#125;</span><br><span class="line"></span><br><span class="line">排名不分先后，每次刷新会随机排列。</span><br><span class="line"></span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;div class=&quot;links-content&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;link-navigation&quot; id=&quot;links1&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">&lt;div style=&quot;text-align:center;&quot;&gt;</span><br><span class="line">  &lt;span class=&quot;with-love&quot; id=&quot;animate1&quot;&gt;&lt;i class=&quot;fa fa-heart&quot;&gt;&lt;/i&gt;&lt;/span&gt;</span><br><span class="line">  留言互换友链 ヽ(￣ω￣(￣ω￣〃)ゝ</span><br><span class="line">  &lt;span class=&quot;with-love&quot; id=&quot;animate2&quot;&gt;&lt;i class=&quot;fa fa-heart&quot;&gt;&lt;/i&gt;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">## 申请要求</span><br><span class="line">1. 内容持续更新且可以稳定访问</span><br><span class="line">2. 页面整洁无繁杂广告推广</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">## 友链格式</span><br><span class="line"></span><br><span class="line">- 名称：Hui-Shao&#x27;s Blog</span><br><span class="line">- 网址：[https://hui-shao.cn](https://hui-shao.cn)</span><br><span class="line">- 头像：[https://hui-shao.cn/images/avatar.jpg](https://hui-shao.cn/images/avatar.jpg)</span><br><span class="line">- 简介：Just do it.</span><br><span class="line"></span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="可以下现成的styles-styl文件，且很干净的博客"><a href="#可以下现成的styles-styl文件，且很干净的博客" class="headerlink" title="可以下现成的styles.styl文件，且很干净的博客"></a>可以下现成的styles.styl文件，且很干净的博客</h3><p><a href="https://blog.shipengx.com/">https://blog.shipengx.com</a></p>
<h3 id="设置下雪花背景"><a href="#设置下雪花背景" class="headerlink" title="设置下雪花背景"></a>设置下雪花背景</h3><p><a href="https://hui-shao.cn/tags/Hexo/">https://hui-shao.cn/tags/Hexo/</a></p>
<h2 id="设置支持数学公式："><a href="#设置支持数学公式：" class="headerlink" title="设置支持数学公式："></a>设置支持数学公式：</h2><p><a href="https://blog.csdn.net/ssjdoudou/article/details/103318019?spm=1001.2101.3001.6650.7&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7-103318019-blog-115798563.pc_relevant_multi_platform_whitelistv3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7-103318019-blog-115798563.pc_relevant_multi_platform_whitelistv3&utm_relevant_index=12">https://blog.csdn.net/ssjdoudou/article/details/103318019?spm=1001.2101.3001.6650.7&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-7-103318019-blog-115798563.pc_relevant_multi_platform_whitelistv3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-7-103318019-blog-115798563.pc_relevant_multi_platform_whitelistv3&amp;utm_relevant_index=12</a></p>
<h2 id="next-mist主题快捷配置："><a href="#next-mist主题快捷配置：" class="headerlink" title="next-mist主题快捷配置："></a>next-mist主题快捷配置：</h2><p>修改目录  <strong>D:\系统基本存储1\myblog\themes\next\source\css_schemes\Muse</strong>  里面的**_layout.styl**文件，在最后面加：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">////////////</span><br><span class="line">////////////</span><br><span class="line">////////////</span><br><span class="line">// 设置外链：鼠标划过时改变字体及下划线（若有的话）颜色</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">span</span><span class="selector-class">.exturl</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 侧边栏按钮样式</span><br><span class="line"><span class="selector-class">.sidebar-toggle</span> &#123;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">30px</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">left</span>: auto <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>, <span class="number">0.75</span>);  // SteelBlue3，可以在https://tool.oschina.net/commons?type=<span class="number">3</span>选取自己喜欢的颜色</span><br><span class="line">    border-radius: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">9001</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.page-post-detail</span> <span class="selector-class">.sidebar-toggle-line</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">9001</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 返回顶部按钮样式</span><br><span class="line"><span class="selector-class">.back-to-top</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: none;</span><br><span class="line">    <span class="attribute">bottom</span>: -<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>, <span class="number">0.75</span>);</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">30px</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">left</span>: auto <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">transition-property</span>: bottom;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1300</span>;</span><br><span class="line">    <span class="attribute">transition-delay</span>: <span class="number">0s</span>;</span><br><span class="line">    <span class="attribute">transition-duration</span>: <span class="number">0.2s</span>;</span><br><span class="line">    <span class="attribute">transition-timing-function</span>: ease-in-out;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.back-to-top</span><span class="selector-class">.back-to-top-on</span> &#123;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置滚动条样式</span><br><span class="line">// 参考https://segmentfault.com/a/<span class="number">1190000003708894</span></span><br><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 滚动槽</span><br><span class="line">::-webkit-scrollbar-track &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">220</span>,<span class="number">220</span>,<span class="number">220</span>);</span><br><span class="line">&#125;</span><br><span class="line">// 滚动条滑块</span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line">::-webkit-scrollbar-thumb:hover &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 以下为页面主体设置</span><br><span class="line">// 页面背景色</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">	<span class="attribute">background-color</span>: <span class="number">#eeeff0</span></span><br><span class="line">&#125;</span><br><span class="line">// 页面圆角阴影背景色</span><br><span class="line"><span class="selector-class">.post-block</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">	<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0.5rem</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 调整页面上端间距</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 文章标题</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title</span> &#123;</span><br><span class="line">	<span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.7</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">45px</span> <span class="number">20px</span> <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line">// 文章信息</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-meta</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line">// 文章主体</span><br><span class="line"><span class="selector-class">.post-body</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">64px</span> <span class="number">20px</span> <span class="number">64px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 版权声明</span><br><span class="line"><span class="selector-class">.post-copyright</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">24px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 推荐文章</span><br><span class="line"><span class="selector-class">.popular-posts-header</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">40px</span> <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 文章底部tags</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-tags</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-tags</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">transition-duration</span>: <span class="number">0.2s</span>;</span><br><span class="line">    <span class="attribute">transition-timing-function</span>: ease-in-out;</span><br><span class="line">    <span class="attribute">transition-delay</span>: <span class="number">0s</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line">// 页面下端页面跳转</span><br><span class="line"><span class="selector-class">.post-nav</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 主页分割线</span><br><span class="line"><span class="selector-class">.post-eof</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 主页文章标题</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title-link</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title-link</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.home</span> <span class="selector-class">.post-title</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line">// 主页标题下划线</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title-link</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>);</span><br><span class="line">&#125;</span><br><span class="line">// 主页信息</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.home</span> <span class="selector-class">.post-meta</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line">// 主页文章间距</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-block</span><span class="selector-pseudo">:not</span>(<span class="selector-pseudo">:first</span>-child) &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 修复推荐文章标题显示</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-class">.note</span><span class="selector-class">.primary</span> <span class="selector-tag">h4</span> &#123;</span><br><span class="line">    <span class="attribute">border-left</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">//// readmore按钮</span><br><span class="line"><span class="selector-class">.post-button</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line">//<span class="selector-class">.post-button</span> <span class="selector-class">.btn</span> &#123;</span><br><span class="line">//    <span class="attribute">color</span>: <span class="number">#555</span> <span class="meta">!important</span>;</span><br><span class="line">//    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">//    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">//    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">//    <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">//    <span class="attribute">border</span>: none <span class="meta">!important</span>;</span><br><span class="line">//    <span class="attribute">transition-property</span>: unset;</span><br><span class="line">//    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">15px</span>;</span><br><span class="line">//&#125;</span><br><span class="line">//<span class="selector-class">.post-button</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">//    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="meta">!important</span>;</span><br><span class="line">//    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>);</span><br><span class="line">//    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">//    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">//    <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">//    <span class="attribute">background-image</span>: none;</span><br><span class="line">//&#125;</span><br><span class="line"></span><br><span class="line">// <span class="selector-attr">[Read More]</span>按钮样式</span><br><span class="line"><span class="selector-class">.post-button</span> <span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#555</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    <span class="attribute">border</span>: none <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">transition-property</span>: unset;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post-button</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, <span class="number">#a166ab</span> <span class="number">0%</span>, <span class="number">#ef4e7b</span> <span class="number">25%</span>, <span class="number">#f37055</span> <span class="number">50%</span>, <span class="number">#ef4e7b</span> <span class="number">75%</span>, <span class="number">#a166ab</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 文章底部页面跳转</span><br><span class="line"><span class="selector-class">.post-nav-item</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-nav-item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>);</span><br><span class="line">&#125;</span><br><span class="line">// 分割线样式</span><br><span class="line"><span class="selector-class">.post-body</span> hr &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">	<span class="attribute">background-image</span>: none;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line">// 文章```代码块顶部样式</span><br><span class="line"><span class="selector-class">.highlight</span> <span class="selector-tag">figcaption</span> &#123;</span><br><span class="line">	<span class="attribute">font-family</span>: Source Code Pro, consolas, EB Garamond, Noto Serif SC, sans-serif;</span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">	<span class="attribute">text-align</span>: left;</span><br><span class="line">&#125;</span><br><span class="line">// 文章``代码块的自定义样式</span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">4px</span>;</span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">80%</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 文章```代码块diff样式</span><br><span class="line">pre <span class="selector-class">.addition</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#dfd</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line">pre <span class="selector-class">.deletion</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fdd</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 页面底部页码</span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background</span>: none <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pagination</span> <span class="selector-class">.prev</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.pagination</span> <span class="selector-class">.next</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.pagination</span> <span class="selector-class">.page-number</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.pagination</span> <span class="selector-class">.page-number</span><span class="selector-class">.current</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>);</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pagination</span> <span class="selector-class">.prev</span>, <span class="selector-class">.pagination</span> <span class="selector-class">.next</span>, <span class="selector-class">.pagination</span> <span class="selector-class">.page-number</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">2.5</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">transition-property</span>: background;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pagination</span> <span class="selector-class">.space</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#222</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 标签页设定</span><br><span class="line"><span class="selector-class">.tag-cloud</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 归档页设定</span><br><span class="line"><span class="selector-class">.posts-collapse</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>);</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">0.5rem</span>;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">48px</span> <span class="number">64px</span> <span class="number">32px</span> <span class="number">64px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 去除小圆点</span><br><span class="line"><span class="selector-class">.posts-collapse</span> &#123;</span><br><span class="line">    <span class="selector-class">.collection-year</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="selector-class">.collection-title</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">	    <span class="attribute">display</span>: none;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">// 消除左侧竖线</span><br><span class="line"><span class="selector-class">.posts-collapse</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">// 时间轴写作时间</span><br><span class="line"><span class="selector-class">.posts-collapse</span> <span class="selector-class">.post-meta</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.collection-year</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;</span><br><span class="line">	<span class="selector-class">.collection-header</span> &#123;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">text-align</span>: left <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 时间轴文章标题左边圆点颜色</span><br><span class="line"><span class="selector-class">.posts-collapse</span> <span class="selector-class">.post-header</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>);</span><br><span class="line">&#125;</span><br><span class="line">// 时间轴文章标题</span><br><span class="line"><span class="selector-class">.posts-collapse</span> <span class="selector-class">.post-title</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">1em</span>;</span><br><span class="line">	<span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-collapse</span> <span class="selector-class">.post-title</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>);</span><br><span class="line">&#125;</span><br><span class="line">// 时间轴文章标题底部虚线</span><br><span class="line"><span class="selector-class">.posts-collapse</span> <span class="selector-class">.post-header</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>);</span><br><span class="line">&#125;</span><br><span class="line">// 年份</span><br><span class="line"><span class="selector-class">.posts-collapse</span> <span class="selector-class">.collection-year</span> &#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0px</span>;</span><br><span class="line">	<span class="attribute">margin-top</span>: <span class="number">32px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// tags 页面分类</span><br><span class="line"><span class="selector-class">.posts-collapse</span> <span class="selector-class">.collection-header</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 本地搜索框</span><br><span class="line"><span class="selector-class">.search-popup</span> <span class="selector-class">.search-icon</span>, <span class="selector-class">.search-popup</span> <span class="selector-class">.popup-btn-close</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>,<span class="number">148</span>,<span class="number">255</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 调整最大字体</span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">1200px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.post-body</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">1em</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//选中文字样式</span><br><span class="line"><span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span> *<span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 字体修改</span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;Cinzel Decorative&#x27;</span>,<span class="string">&#x27;EB Garamond&#x27;</span>, <span class="string">&quot;Noto Serif SC&quot;</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;EB Garamond&#x27;</span>, <span class="string">&quot;Noto Serif SC&quot;</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;EB Garamond&#x27;</span>, <span class="string">&quot;Noto Serif SC&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;  // 页面字体加粗</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-meta</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;EB Garamond&#x27;</span>, <span class="string">&quot;Noto Serif SC&quot;</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line">pre, <span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;Source Code Pro&#x27;</span>, consolas, Menlo, monospace;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;Ma Shan Zheng&#x27;</span>, <span class="string">&#x27;Cinzel Decorative&#x27;</span>, <span class="string">&#x27;EB Garamond&#x27;</span>, <span class="string">&quot;Noto Serif SC&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;EB Garamond&#x27;</span>, <span class="string">&#x27;STKaiti&#x27;</span>, <span class="string">&#x27;KaiTi&#x27;</span>, <span class="string">&#x27;SimKai&#x27;</span>, <span class="string">&#x27;Noto Serif SC&#x27;</span>, <span class="string">&#x27;sans-serif&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 站顶设置</span><br><span class="line">// 注意，这里webkit-backdrop-<span class="attribute">filter</span>前有一条横线，不同的浏览器将选择性地使用-webkit-backdrop-<span class="attribute">filter</span>属性或backdrop-<span class="attribute">filter</span></span><br><span class="line">// 背景模糊效果移动端支持似乎不好，需要将背景透明度关掉</span><br><span class="line">// 背景模糊效果对搜索功能有影响</span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    -webkit-backdrop-<span class="attribute">filter</span>: <span class="built_in">saturate</span>(<span class="number">180%</span>) <span class="built_in">blur</span>(<span class="number">1em</span>);</span><br><span class="line">    //backdrop-<span class="attribute">filter</span>: <span class="built_in">saturate</span>(<span class="number">180%</span>) <span class="built_in">blur</span>(<span class="number">1em</span>);</span><br><span class="line">    //<span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, <span class="built_in">rgba</span>(<span class="number">247</span>,<span class="number">149</span>,<span class="number">51</span>,<span class="number">0.101961</span>) <span class="number">0</span>, <span class="built_in">rgba</span>(<span class="number">243</span>,<span class="number">112</span>,<span class="number">85</span>,<span class="number">0.101961</span>) <span class="number">15%</span>, <span class="built_in">rgba</span>(<span class="number">239</span>,<span class="number">78</span>,<span class="number">123</span>,<span class="number">0.101961</span>) <span class="number">30%</span>, <span class="built_in">rgba</span>(<span class="number">161</span>,<span class="number">102</span>,<span class="number">171</span>,<span class="number">0.101961</span>) <span class="number">44%</span>, <span class="built_in">rgba</span>(<span class="number">80</span>,<span class="number">115</span>,<span class="number">184</span>,<span class="number">0.101961</span>) <span class="number">58%</span>, <span class="built_in">rgba</span>(<span class="number">16</span>,<span class="number">152</span>,<span class="number">173</span>,<span class="number">0.101961</span>) <span class="number">72%</span>, <span class="built_in">rgba</span>(<span class="number">7</span>,<span class="number">179</span>,<span class="number">155</span>,<span class="number">0.101961</span>) <span class="number">86%</span>, <span class="built_in">rgba</span>(<span class="number">109</span>,<span class="number">186</span>,<span class="number">130</span>,<span class="number">0.101961</span>) <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">position</span>:fixed;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">120px</span> <span class="number">24px</span> <span class="number">0</span> <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 进度条</span><br><span class="line"><span class="selector-class">.reading-progress-bar</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>:fixed;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">9001</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 站点名横线设置</span><br><span class="line"><span class="selector-class">.brand</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="selector-class">.logo-line-before</span> <span class="selector-tag">i</span>, <span class="selector-class">.logo-line-after</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>) <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置<span class="selector-tag">menu</span></span><br><span class="line"><span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.menu-item-active</span> <span class="selector-tag">a</span>, <span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">span</span><span class="selector-class">.exturl</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ddd</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">148</span>, <span class="number">205</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-class">.badge</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 设置图片阴影</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">iframe</span>, <span class="selector-class">.post-body</span> <span class="selector-tag">img</span>, <span class="selector-class">.post-body</span> <span class="selector-tag">video</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 以下为移动端样式</span><br><span class="line">// 移动端左上角菜单按钮</span><br><span class="line"><span class="selector-class">.site-nav-toggle</span> &#123;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-bar</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">767px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.menu</span> &#123;</span><br><span class="line">        <span class="attribute">text-align</span>: center;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">5px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.site-nav</span> &#123;</span><br><span class="line">        <span class="attribute">top</span>: initial;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.75</span>);</span><br><span class="line">        <span class="attribute">border-top</span>: none;</span><br><span class="line">        <span class="attribute">border-bottom</span>: none;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">1024</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">// 移动端顶部</span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">767px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.site-subtitle</span>&#123;</span><br><span class="line">        <span class="attribute">letter-spacing</span>: <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line">        <span class="attribute">padding-bottom</span>: <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> &#123;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">10px</span> <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.header</span> &#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, <span class="built_in">rgba</span>(<span class="number">247</span>,<span class="number">149</span>,<span class="number">51</span>,<span class="number">1</span>) <span class="number">0</span>, <span class="built_in">rgba</span>(<span class="number">243</span>,<span class="number">112</span>,<span class="number">85</span>,<span class="number">1</span>) <span class="number">15%</span>, <span class="built_in">rgba</span>(<span class="number">239</span>,<span class="number">78</span>,<span class="number">123</span>,<span class="number">1</span>) <span class="number">30%</span>, <span class="built_in">rgba</span>(<span class="number">161</span>,<span class="number">102</span>,<span class="number">171</span>,<span class="number">1</span>) <span class="number">44%</span>, <span class="built_in">rgba</span>(<span class="number">80</span>,<span class="number">115</span>,<span class="number">184</span>,<span class="number">1</span>) <span class="number">58%</span>, <span class="built_in">rgba</span>(<span class="number">16</span>,<span class="number">152</span>,<span class="number">173</span>,<span class="number">1</span>) <span class="number">72%</span>, <span class="built_in">rgba</span>(<span class="number">7</span>,<span class="number">179</span>,<span class="number">155</span>,<span class="number">1</span>) <span class="number">86%</span>, <span class="built_in">rgba</span>(<span class="number">109</span>,<span class="number">186</span>,<span class="number">130</span>,<span class="number">1</span>) <span class="number">100%</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 移动端样式</span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">767px</span>) &#123;</span><br><span class="line">    // 归档页</span><br><span class="line">    <span class="selector-class">.posts-collapse</span> &#123;</span><br><span class="line">		<span class="attribute">padding</span>: <span class="number">16px</span> <span class="number">15px</span> <span class="number">8px</span> <span class="number">15px</span>;</span><br><span class="line">		<span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">		<span class="selector-class">.post-title</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">		    <span class="attribute">font-size</span>: <span class="number">1em</span>;</span><br><span class="line">            <span class="attribute">text-align</span>: center <span class="meta">!important</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="selector-class">.post-meta</span> &#123;</span><br><span class="line">		    <span class="attribute">font-size</span>: <span class="number">1em</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	// 消除页边空白</span><br><span class="line">	<span class="selector-class">.posts-expand</span> &#123;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="selector-class">.post-body</span> &#123;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">15px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title</span> &#123;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">45px</span> <span class="number">15px</span> <span class="number">12px</span>;</span><br><span class="line">        <span class="attribute">text-align</span>: center <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.content</span>&#123;</span><br><span class="line">        <span class="attribute">padding-top</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">padding-left</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">padding-right</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	// 页面下部空白</span><br><span class="line">	<span class="selector-class">.main-inner</span> &#123;</span><br><span class="line">        <span class="attribute">padding-bottom</span>: <span class="number">35px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	// 页码</span><br><span class="line">	<span class="selector-class">.pagination</span> &#123;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">48px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	// 文章标题</span><br><span class="line">	<span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">        <span class="attribute">text-align</span>: center <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	// 字体大小</span><br><span class="line">	<span class="selector-class">.post-body</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">16px</span> <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="selector-class">.post-copyright</span> &#123;</span><br><span class="line">	    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如何让next主题的mist风格的主页显示的文章块里的[阅读全文]按钮居中对齐：</p>
<p>选择themes\next\source\css_schemes\Mist_posts-expand.styl，</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230703100314.png"></p>
<h1 id="解决next主题mist文本不居中"><a href="#解决next主题mist文本不居中" class="headerlink" title="解决next主题mist文本不居中"></a>解决next主题mist文本不居中</h1><p><a href="https://blog.csdn.net/weixin_42631693/article/details/105092942">https://blog.csdn.net/weixin_42631693/article/details/105092942</a></p>
]]></content>
      <categories>
        <category>网站探索</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>个人图床搭建</title>
    <url>/2022/09/04/Hexo+next/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="Typora-PicGo-阿里云OSS搭建博客图床"><a href="#Typora-PicGo-阿里云OSS搭建博客图床" class="headerlink" title="Typora+PicGo+阿里云OSS搭建博客图床"></a>Typora+PicGo+阿里云OSS搭建博客图床</h2><p>参考链接：<a href="https://blog.csdn.net/muxuen/article/details/122441469">https://blog.csdn.net/muxuen/article/details/122441469</a></p>
]]></content>
      <categories>
        <category>网站探索</category>
      </categories>
      <tags>
        <tag>软件使用</tag>
      </tags>
  </entry>
  <entry>
    <title>基于GitHub和hexo建站</title>
    <url>/2022/08/28/Hexo+next/%E5%9F%BA%E4%BA%8EGitHub%E5%92%8Chexo%E5%BB%BA%E7%AB%99/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<p>关于个人博客的一些认识：<a href="https://www.sulvblog.cn/posts/blog/how_to_write_a_blog/">https://www.sulvblog.cn/posts/blog/how_to_write_a_blog/</a></p>
<h2 id="一-思路："><a href="#一-思路：" class="headerlink" title="一,思路："></a>一,思路：</h2><blockquote>
<p>先在电脑本地建一个网站文件夹搭建好网站，再利用github的服务器托管自己的网站，让自己的网站出现在互联网里，<br>至于编辑和管理网站内容，则是先在本地网站文件夹完成，再通过git远程同步到github的个人存储库里，github就会自动同步到网页了。</p>
</blockquote>
<h2 id="二-环境准备"><a href="#二-环境准备" class="headerlink" title="二,环境准备"></a>二,环境准备</h2><p>注册GitHub账号；</p>
<h3 id="下载git；"><a href="#下载git；" class="headerlink" title="下载git；"></a>下载git；</h3><p>官网下载页面：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br>1.双击安装包开始安装，一路点击 <code>Next</code> 即可，安装完成后鼠标右键会有 <code>Git Bash Here</code>，这是Git的命令行，说明安装成功<br>2.在命令行中输入如下命令，配置Git用户名和邮箱地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;Your Name&quot;</span><br><span class="line">git config --global user.email &quot;email@example.com&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="下载node-js；"><a href="#下载node-js；" class="headerlink" title="下载node.js；"></a>下载node.js；</h3><p>官网下载地址：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a><br>1.选择64位的msi版本进行下载，下载得到安装包 <code>node-v14.17.3-x64.msi</code><br>2.双击安装包开始安装，一路点击<code>Next</code>即可，安装完成后，msi格式的安装包会自动添加环境变量。<br>3.打开cmd窗口，执行命令 <code>node -v</code> 查看<a href="https://so.csdn.net/so/search?q=node&spm=1001.2101.3001.7020">node</a>版本<br>在安装node的同时也安装了npm，执行 <code>npm -v</code> 查看npm版本<br>注意：node.js下载完成后，要把它的安装路径加到电脑的系统变量或用户变量里的path里。（注意不是新建，而是添加）<br>添加步骤：</p>
<ul>
<li><p>搜索环境变量</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f286a8fe99a42ade88c305599d8ee65.png"></p>
</li>
<li><p>在这里点环境变量</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6af25af3a9b2e5af108d680469d203e.png"></p>
</li>
<li><p>下面的环境变量找到path</p>
</li>
</ul>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e5e34bdeb88213e4bd368c706efb66d.png"></p>
<ul>
<li><p>将文件目录添加进Path里即可</p>
<p>![](<a href="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE">https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/屏幕截图</a> 2022-10-09 165923.jpg)</p>
</li>
</ul>
<blockquote>
<ul>
<li>你要加用户变量也行，只要你电脑不是多用户。</li>
<li>path的作用就是不管你的指令台在什么路径打开，你都可以调用path路径里的程序</li>
<li>如果你没设置过的话，你下的东西可能在C:\Users\用户名\AppData\Roaming\npm   （appdate是隐藏文件，你直接复制到地址栏回车）</li>
<li>你能直接用npm的指令说明nodejs已经在path里面了.</li>
<li>都完成后，你在git bash里输入hexo,就可以看到下面界面了。<br><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/228675681f0066c607e1340db56bf1d.jpg" alt="这是界面"></li>
</ul>
</blockquote>
<h2 id="三-本地hexo初始博客搭建"><a href="#三-本地hexo初始博客搭建" class="headerlink" title="三,本地hexo初始博客搭建"></a>三,本地hexo初始博客搭建</h2><p>1.安装hexo，（Hexo 是一个基于NodeJS的静态博客网站生成器），打开cmd 然后在cmd中输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>2.创建一个项目 hexo-blog 并初始化</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init hexo-blog</span><br><span class="line">cd hexo-blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>3.安装过程中，他会自动生成一个文件夹，这个文件夹就是Hexo的配置文件，hexo-blog是你要生成博客的文件夹名称，可以自定义,<br>后面的终端(cmd或bush)在这个文件夹下进行；<br>4.本地启动，预览；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p>打开给出链接就能访问到网站，按<code>Ctrl+C</code>可以关闭网站，到这hexo就部署完毕了~</p>
<h2 id="四，GitHub远端托管本地hexo博客"><a href="#四，GitHub远端托管本地hexo博客" class="headerlink" title="四，GitHub远端托管本地hexo博客"></a>四，GitHub远端托管本地hexo博客</h2><h3 id="1-GitHub创建个人仓库；"><a href="#1-GitHub创建个人仓库；" class="headerlink" title="1.GitHub创建个人仓库；"></a>1.GitHub创建个人仓库；</h3><p>新建一个 你的用户名.github.io的仓库，比如说你的GitHub用户名是abc,<a href="http://那么你新建仓库名叫abc.github.io/">那么你新建仓库名叫abc.github.io</a>,你的博客搭建好之后访问的网站也就是 <a href="https://abc.github.io了/">https://abc.github.io了</a>。注意是公共库，要勾上read.me文件。</p>
<h3 id="2-生成SSH添加到GitHub；"><a href="#2-生成SSH添加到GitHub；" class="headerlink" title="2.生成SSH添加到GitHub；"></a>2.生成SSH添加到GitHub；</h3><p>全局规定一下，这样github才能检查到这个用户属于你：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config  --global  user.name &quot;cunko&quot;</span><br><span class="line">git config  --global user.email &quot;liu003251@gmail.com&quot;</span><br></pre></td></tr></table></figure>
<p>桌面右键打开git bash here,输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/. ssh // 检查本机已存在的 ssh 密钥</span><br></pre></td></tr></table></figure>
<p>本地创建公私钥：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C “你的邮件地址”</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>
<p>然后连续按三次回车，会生成id_rsa.pub文件，用记事本打开它，然后全部复制即可，这个文件的地址：C:\Users\Administrator.ssh，并把公钥添加到github中（在 GitHub的 Setting里面，找到 SSH keys，<strong>把 id_rsa.pub 里面的内容全部复制到 key 进去</strong>，title随便写一个就行），以后提交博客可以免密登陆。<br>我们回来测试下是否把SSH配置成功了，继续在bash里输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>如果提示 Are you sure you want to continue connecting (yes&#x2F;no)? ，输入yes，然后会看到 successfully authenticated,but github…<br>看到这个意味着已成功！</p>
<h3 id="3-将hexo部署到GitHub；"><a href="#3-将hexo部署到GitHub；" class="headerlink" title="3.将hexo部署到GitHub；"></a>3.将hexo部署到GitHub；</h3><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。<br>找到 站点配置文件第16行（或者直接搜索 url）修改url 为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://username.github.io</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>同样username是你的GitHub的用户名。<br>找到站点配置文件末尾修改deploy:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:cunko/cunko.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>完成后，保存文件并且退出，在 git bash中输入以下命令：<br>安装 git部署命令工具（方便以后更新）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>初始化本地仓库或进入分支：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
<p>然后开始部署：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>
<p>其中 <code>hexo clean</code>清除缓存文件 (db.json) 和已生成的静态文件 (public)，也可以不加；<br><code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写；<br><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写；<br> hexo s        启动服务器；</p>
<h2 id="其它："><a href="#其它：" class="headerlink" title="其它："></a>其它：</h2><h3 id="关于GitHub-Pages"><a href="#关于GitHub-Pages" class="headerlink" title="关于GitHub Pages"></a>关于GitHub Pages</h3><blockquote>
<p>GitHub Pages是GitHub提供的一个网页寄存服务，于2008年推出。可以用于存放静态网页，包括博客、项目文档甚至整本书。Jekyll软体可以用于将文档转换成静态网页，<br>该软件提供了将网页上传到GitHub Pages的功能。一般GitHub Pages的网站使用github.io的子域名，但是用户也可以使用第三方域名。<br>github pages官方文档：<a href="https://docs.github.com/cn/pages/quickstart">https://docs.github.com/cn/pages/quickstart</a></p>
</blockquote>
<h3 id="git过程中的错误解决"><a href="#git过程中的错误解决" class="headerlink" title="git过程中的错误解决"></a>git过程中的错误解决</h3><blockquote>
<p><a href="https://hexo.io/docs/troubleshooting.html#Git-Deployment-Problems">https://hexo.io/docs/troubleshooting.html#Git-Deployment-Problems</a></p>
<p><a href="https://blog.csdn.net/weixin_41256398/article/details/117994899">https://blog.csdn.net/weixin_41256398/article/details/117994899</a></p>
<p><a href="https://blog.csdn.net/weixin_48927364/article/details/123405585">https://blog.csdn.net/weixin_48927364/article/details/123405585</a></p>
<p><a href="https://blog.csdn.net/qq_21808961/article/details/84476504">https://blog.csdn.net/qq_21808961/article/details/84476504</a></p>
<p><a href="https://www.codegrepper.com/search.php?q=remote%20error:%20%20%20%20is%20not%20a%20valid%20repository%20name">https://www.codegrepper.com/search.php?q=remote%20error:%20%20%20%20is%20not%20a%20valid%20repository%20name</a></p>
</blockquote>
<h3 id="markdown语法"><a href="#markdown语法" class="headerlink" title="markdown语法"></a>markdown语法</h3><blockquote>
<p>注意用hexo网站后台后，以后编写文章都要有markdown语法了。<br>官方文档：<a href="https://docs.github.com/cn/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax">https://docs.github.com/cn/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax</a><br>网络文档：<a href="https://www.cnblogs.com/tocy/p/github-flavored-markdown.html#:~:text=GitHub%E6%94%AF%E6%8C%81,%E6%B3%95%EF%BC%8C%E7%AE%80%E7%A7%B0GFM%E3%80%82">https://www.cnblogs.com/tocy/p/github-flavored-markdown.html#:~:text=GitHub支持,法，简称GFM%E3%80%82</a></p>
</blockquote>
<h3 id="git常用命令："><a href="#git常用命令：" class="headerlink" title="git常用命令："></a>git常用命令：</h3><blockquote>
<p>本地部署三连<br>hexo clean   清除缓存文件 (db.json) 和已生成的静态文件 (public)<br>hexo g       生成静态文件<br>hexo s        启动服务器</p>
</blockquote>
<blockquote>
<p>上传三连<br>hexo clean   清理缓存<br>hexo g<br>hexo d       部署网站</p>
</blockquote>
<blockquote>
<p>hexo new page “页面名”  新建页面<br>post 文章   draft  草稿</p>
</blockquote>
<p>如何用阿里云买的服务器搭建hexo网站<br><a href="https://developer.aliyun.com/article/775175">https://developer.aliyun.com/article/775175</a></p>
<p>如何用腾讯云搭</p>
<p><a href="https://www.flamiec.cn/2022/07/11/hexo-%E6%9C%8D%E5%8A%A1%E5%99%A8/">https://www.flamiec.cn/2022/07/11/hexo-%E6%9C%8D%E5%8A%A1%E5%99%A8/</a></p>
]]></content>
      <categories>
        <category>网站探索</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>对hexo的探索</title>
    <url>/2022/09/04/Hexo+next/%E5%AF%B9hexo%E7%9A%84%E6%8E%A2%E7%B4%A2/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="一-hexo常用快捷键"><a href="#一-hexo常用快捷键" class="headerlink" title="一,hexo常用快捷键"></a>一,hexo常用快捷键</h2><p>hexo clean   清除缓存文件 (db.json) 和已生成的静态文件 (public)<br>hexo g       生成静态文件<br>hexo s        启动服务器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<p>hexo clean   清理缓存<br>hexo g<br>hexo d       部署网站</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>

<p>  新建页面<br>post 文章   draft  草稿</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;页面名&quot;</span><br></pre></td></tr></table></figure>

<p>git config  –global  user.name “cunko”<br>git config  –global user.email “<a href="mailto:&#x6c;&#105;&#117;&#48;&#x30;&#x33;&#x32;&#x35;&#49;&#64;&#103;&#109;&#x61;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;">&#x6c;&#105;&#117;&#48;&#x30;&#x33;&#x32;&#x35;&#49;&#64;&#103;&#109;&#x61;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a>“</p>
<p> 初始化一个Git仓库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init </span><br></pre></td></tr></table></figure>

<h2 id="常见错误解决办法："><a href="#常见错误解决办法：" class="headerlink" title="常见错误解决办法："></a>常见错误解决办法：</h2><p><a href="https://blog.csdn.net/HTL2018/article/details/106876940">https://blog.csdn.net/HTL2018/article/details/106876940</a></p>
]]></content>
      <categories>
        <category>网站探索</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>人像换脸</title>
    <url>/2023/04/10/PS%E6%95%99%E7%A8%8B/%E4%BA%BA%E5%83%8F%E6%8D%A2%E8%84%B8/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="1-扣脸"><a href="#1-扣脸" class="headerlink" title="1.扣脸"></a>1.扣脸</h2><p>a.解锁图层（双击）<br>b.选取路径（套索工具）<br>c.路径变选区（ctrl+enter)<br>d.复制选区(ctrl+j)<br>e.将外来图片拉到宿主</p>
<h2 id="2-调整"><a href="#2-调整" class="headerlink" title="2.调整"></a>2.调整</h2><p>a.将外来图片与宿主中的脸位置对齐（ctrl+t，自由变换，透明度调节）<br>b.载入外来图片的选区（ctrl+点外来图片）<br>c.收缩像素（点宿主，任务栏【选择】&#x2F;选取修改&#x2F;收缩，收缩5个像素）<br>d.删除宿主与外来图片的对应区域</p>
<h2 id="3-混合图层"><a href="#3-混合图层" class="headerlink" title="3.混合图层"></a>3.混合图层</h2><p>a.选中俩图层（按shift同时选择俩图层）<br>b.混合（任务栏【编辑】&#x2F;自动混合图层）</p>
<hr>
<p>注：1.宿主：需要换脸的图片<br>2.外来图片：扣好的脸<br>3.自动混合图层时保持原设置不变</p>
<h2 id="让图片上多余的东西消失"><a href="#让图片上多余的东西消失" class="headerlink" title="让图片上多余的东西消失"></a>让图片上多余的东西消失</h2><p>1、污点修复工具</p>
<p>2、仿制图章工具</p>
<p>3、套锁工具填充</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>PS</tag>
      </tags>
  </entry>
  <entry>
    <title>更换证件照图片</title>
    <url>/2022/12/07/PS%E6%95%99%E7%A8%8B/%E6%9B%B4%E6%8D%A2%E8%AF%81%E4%BB%B6%E7%85%A7%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="准备："><a href="#准备：" class="headerlink" title="准备："></a>准备：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/84bf412217a1a987c04c4947789047f.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e85c3eca7351a89b03cc54a11136d20.jpg"></th>
</tr>
</thead>
</table>
<h2 id="开始："><a href="#开始：" class="headerlink" title="开始："></a>开始：</h2><p>法一：</p>
<p>1.图片解锁<br>2.找到属性栏<br>3.点击 快速操作&#x2F;删除背景</p>
<p>法二：</p>
<p>1.用魔棒工具或快速选择工具选择主体<br>2.反选为背景，删除</p>
<p>法三：</p>
<p>1.选择&#x2F;选择并遮住<br>2.用画笔涂抹掉边缘残留色，勾选净化颜色，确定<br>3.新增图层<br>4.填充图层（alt+delete）</p>
<p>法四：</p>
<p>1.直接在微信支付宝里搜证件照</p>
<p>如何用PS消除被抠出的证件照人物边缘的残留颜色</p>
<p><a href="https://www.bilibili.com/video/BV1GP41147h4/?spm_id_from=333.788.recommend_more_video.2&vd_source=e00c0b5d2c82bed880dcc8032afcaed4">https://www.bilibili.com/video/BV1GP41147h4/?spm_id_from=333.788.recommend_more_video.2&amp;vd_source=e00c0b5d2c82bed880dcc8032afcaed4</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>PS</tag>
      </tags>
  </entry>
  <entry>
    <title>python-猜数小游戏</title>
    <url>/2022/09/24/python%E5%AE%9E%E7%8E%B0/2022-09-24-python-%E7%8C%9C%E6%95%B0%E5%B0%8F%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/aedbc32f-9a7c-42d2-9dba-a7119302eb18.jpg"></p>
<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">a = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> a &lt;= <span class="number">5</span>:</span><br><span class="line">    h = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入1~9的数字:&#x27;</span>))</span><br><span class="line">    r = random.randint(<span class="number">1</span>, <span class="number">9</span>)</span><br><span class="line">    <span class="keyword">if</span> r == h:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;系统产生的数是&#x27;</span>, r)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;猜对啦,\^o^/宝宝真棒！&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;系统产生的数是&#x27;</span>, r)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;猜错啦&#x27;</span>)</span><br><span class="line">        a = a + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> a &gt; <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;o(*￣▽￣*)o小笨蛋，没机会了呀&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<h2 id="效果如下："><a href="#效果如下：" class="headerlink" title="效果如下："></a>效果如下：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/34cbce1a-b616-45e5-9d4c-f6bd636acf04.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/eaf4062f-0eef-42c0-b055-8ac995f0bb16.jpg"></th>
</tr>
</thead>
</table>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python实现</tag>
      </tags>
  </entry>
  <entry>
    <title>python-移除列表重复元素</title>
    <url>/2022/09/24/python%E5%AE%9E%E7%8E%B0/2022-09-24-python-%E7%A7%BB%E9%99%A4%E5%88%97%E8%A1%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/119399f0-a98e-4f54-8acd-c85888cdb027.jpg"></p>
<h2 id="题一代码如下："><a href="#题一代码如下：" class="headerlink" title="题一代码如下："></a>题一代码如下：</h2><p>法一：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">li = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">4</span>]</span><br><span class="line">li.reverse()</span><br><span class="line"><span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure>

<p>法二：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">li = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">4</span>]</span><br><span class="line">li.clear()</span><br><span class="line">li.extend([<span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;1&quot;</span>])</span><br><span class="line">li.extend([<span class="number">4</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure>

<h2 id="题二代码如下："><a href="#题二代码如下：" class="headerlink" title="题二代码如下："></a>题二代码如下：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">li = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>]</span><br><span class="line">li0 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> li:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> i <span class="keyword">in</span> li0:</span><br><span class="line">        li0.append(i)</span><br><span class="line"><span class="built_in">print</span>(li0)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python实现</tag>
      </tags>
  </entry>
  <entry>
    <title>关键帧的俩个应用</title>
    <url>/2023/05/25/Pr%E6%95%99%E7%A8%8B/%E5%85%B3%E9%94%AE%E5%B8%A7%E7%9A%84%E4%BF%A9%E4%B8%AA%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<p><strong>关键帧</strong>：关键帧（Keyframe）是指动画序列中的特殊帧，它定义了动画中的重要时刻或关键状态。关键帧用于确定动画的起始点、结束点和重要的转折点，它们描述了对象或角色在特定时间点上的位置、姿态、表情或其他属性。 通过插入关键帧，剪辑软件可以自动计算对象在不同时间点上的变化，并创建出流畅的动画效果。</p>
<span id="more"></span>

<h2 id="名字跟着人物的视频效果："><a href="#名字跟着人物的视频效果：" class="headerlink" title="名字跟着人物的视频效果："></a>名字跟着人物的视频效果：</h2><p><strong>基本思路</strong>：将一个个文字图层放在对于人物上面，以一俩秒的视频间隔添加关键帧，并在添加关键帧的同时矫正文字图层的位置，以保持文字图层始终在对应人物头上。</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/abfde256581fff3c44a6077e260d317.jpg"></p>
<h2 id="电脑画中画效果："><a href="#电脑画中画效果：" class="headerlink" title="电脑画中画效果："></a>电脑画中画效果：</h2><p><strong>基本思路</strong>：将一段小姐姐跳舞视频变成一个蒙版，蒙在一张图片上电脑屏幕上，通过关键帧不断拉大图片中的电脑屏幕和跳舞视频，直到跳舞视频完全占据全屏幕。</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230525022526.png"></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Pr</tag>
      </tags>
  </entry>
  <entry>
    <title>python—求圆的面积和周长</title>
    <url>/2022/09/24/python%E5%AE%9E%E7%8E%B0/2022-09-24-python%E2%80%94%E6%B1%82%E5%9C%86%E7%9A%84%E9%9D%A2%E7%A7%AF%E5%92%8C%E5%91%A8%E9%95%BF/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/93dc4c11-76f0-4304-b118-d4346cea12cb.jpg"></p>
<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line">h=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入圆的半径:&#x27;</span>))</span><br><span class="line">l=<span class="number">2</span>*math.pi*h</span><br><span class="line">s=math.pi*h*h</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;圆的周长：&#x27;</span>,<span class="string">&#x27;%05.2f&#x27;</span>%l)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;圆的面积：&#x27;</span>,<span class="string">&#x27;%05.2f&#x27;</span>%s)</span><br></pre></td></tr></table></figure>

<h2 id="效果如下："><a href="#效果如下：" class="headerlink" title="效果如下："></a>效果如下：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7d027f36-2856-44c8-9bad-a9f5723b985f.jpg"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python实现</tag>
      </tags>
  </entry>
  <entry>
    <title>函数的简单实现</title>
    <url>/2022/09/24/python%E5%AE%9E%E7%8E%B0/2022-09-24-%E5%87%BD%E6%95%B0%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5cdde8ef-7099-4781-a4c3-cabc05b71636.jpg"></p>
<h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">isPrime</span>(<span class="params">n</span>):</span><br><span class="line">  <span class="keyword">if</span> n &gt; <span class="number">1</span>:</span><br><span class="line">     <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,num):</span><br><span class="line">        <span class="keyword">if</span> (num % i) == <span class="number">0</span>:</span><br><span class="line">           <span class="built_in">print</span>(<span class="string">&quot;False&quot;</span>)</span><br><span class="line">           <span class="keyword">break</span></span><br><span class="line">     <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Ture&quot;</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;False&quot;</span>)</span><br><span class="line">num=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数：&quot;</span>))</span><br><span class="line">isPrime(num)</span><br></pre></td></tr></table></figure>

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2f733888-d56f-4602-baa9-62dcfd450382.jpg"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python实现</tag>
      </tags>
  </entry>
  <entry>
    <title>字符串和散列类型训练题</title>
    <url>/2022/09/24/python%E5%AE%9E%E7%8E%B0/2022-09-24-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%95%A3%E5%88%97%E7%B1%BB%E5%9E%8B%E8%AE%AD%E7%BB%83%E9%A2%98/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/88167a62-1e6e-491f-9ed8-92ec43b71646.jpg"></p>
<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><p>题一：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">li = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">li0 = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]</span><br><span class="line">li1 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> li:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">in</span> li0:</span><br><span class="line">        li1.append(i)</span><br><span class="line"><span class="built_in">print</span>(li1)</span><br></pre></td></tr></table></figure>

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2f825578-4d5e-4b31-99ed-93d4373e7316.jpg"></p>
<p>题二：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">li = <span class="built_in">input</span>(<span class="string">&#x27;\n请输入任意字母：&#x27;</span>)   <span class="comment">#输入要统计的字符串</span></span><br><span class="line">li = li.lower()   <span class="comment">#可将字符串全部转小写</span></span><br><span class="line">zd = &#123;&#125;  <span class="comment">#创造空字典</span></span><br><span class="line"><span class="comment">#循环追加</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> li:</span><br><span class="line">   zd.update(&#123;x:li.count(x)&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;频率：<span class="subst">&#123;zd&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/098db8d3-0e9f-4c43-a2dd-f53a86706d63.jpg"></p>
<p>题三：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="built_in">str</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入号码：&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> a[<span class="number">0</span>] == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(a) == <span class="number">11</span>:</span><br><span class="line">        <span class="keyword">if</span> a.isdigit() == <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;是号码&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不是号码&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/bfbff083-670d-4014-9650-1ecc8fbfc110.jpg"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python实现</tag>
      </tags>
  </entry>
  <entry>
    <title>百度首页爬虫</title>
    <url>/2022/09/24/python%E5%AE%9E%E7%8E%B0/2022-09-24-%E7%99%BE%E5%BA%A6%E9%A6%96%E9%A1%B5%E7%88%AC%E8%99%AB/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><blockquote>
<p>效果：会在桌面生成一个html文件，打开即为百度首页。</p>
</blockquote>
<h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line"><span class="comment">#  第一步 确认爬取内容的网址</span></span><br><span class="line">url = <span class="string">&quot;http://www.baidu.com/&quot;</span></span><br><span class="line"><span class="comment"># headers = &#123;</span></span><br><span class="line"><span class="comment">#   &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362&#x27;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="comment">#  第二步  向网站发出http请求</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#  第三步  获取网站响应的数据</span></span><br><span class="line">content = response.content.decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#  第四步 对响应数据持久化</span></span><br><span class="line"><span class="built_in">print</span>(content)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;baibu.html&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    fp.write(content)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python实现</tag>
      </tags>
  </entry>
  <entry>
    <title>酷我音乐爬虫</title>
    <url>/2022/09/24/python%E5%AE%9E%E7%8E%B0/2022-09-24-%E9%85%B7%E6%88%91%E9%9F%B3%E4%B9%90%E7%88%AC%E8%99%AB/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pprint</span><br><span class="line"><span class="comment"># 生成表格的模块</span></span><br><span class="line"><span class="keyword">import</span> prettytable <span class="keyword">as</span> pt</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;kuwo&#x27;</span>):</span><br><span class="line">    os.mkdir(<span class="string">&#x27;kuwo&#x27;</span>)</span><br><span class="line">key=<span class="built_in">input</span>(<span class="string">&quot;请输入你想查找的歌手or歌曲:&quot;</span>)</span><br><span class="line"></span><br><span class="line">url=<span class="string">f&quot;https://www.kuwo.cn/api/www/search/searchMusicBykeyWord?key=<span class="subst">&#123;key&#125;</span>&amp;pn=1&amp;rn=30&quot;</span></span><br><span class="line"><span class="comment"># 伪装请求头</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&#x27;Accept&#x27;</span>:<span class="string">&#x27;application/json, text/plain, */*&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Encoding&#x27;</span>:<span class="string">&#x27;gzip, deflate&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Language&#x27;</span>:<span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Connection&#x27;</span>:<span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cookie&#x27;</span>:<span class="string">&#x27;Hm_lvt_cdb524f42f0ce19b169a8071123a4797=1663154581; _ga=GA1.2.567394232.1663154581; _gid=GA1.2.2123499681.1663154581; _gat=1; Hm_lpvt_cdb524f42f0ce19b169a8071123a4797=1663156972; kw_token=XATF666NGJP&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;csrf&#x27;</span>:<span class="string">&#x27;XATF666NGJP&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Host&#x27;</span>:<span class="string">&#x27;www.kuwo.cn&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>:<span class="string">&#x27;http://www.kuwo.cn/search/list?key=%E5%91%A8%E6%9D%B0%E4%BC%A6&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">response=requests.get(url=url,headers=headers)</span><br><span class="line"><span class="comment"># .JSON打印字典数值</span></span><br><span class="line"><span class="comment"># pprint.pprint(response.json())</span></span><br><span class="line"><span class="comment"># 获取到的歌曲数据源</span></span><br><span class="line">json=response.json()</span><br><span class="line"><span class="comment"># 提取到对应的内容</span></span><br><span class="line">json_data=json[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>]</span><br><span class="line"><span class="comment"># pprint.pprint(json_data)</span></span><br><span class="line">count=<span class="number">0</span></span><br><span class="line">table=pt.PrettyTable()</span><br><span class="line"><span class="comment"># 设置表头</span></span><br><span class="line">table.field_names=[<span class="string">&#x27;专辑&#x27;</span>,<span class="string">&#x27;歌手&#x27;</span>,<span class="string">&#x27;歌曲&#x27;</span>,<span class="string">&#x27;rid&#x27;</span>]</span><br><span class="line"><span class="comment"># 创建一个列表，用来存放歌曲rid</span></span><br><span class="line">info_list=[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">list</span> <span class="keyword">in</span> json_data:</span><br><span class="line">    <span class="comment"># 专辑</span></span><br><span class="line">    album=<span class="built_in">list</span>[<span class="string">&#x27;album&#x27;</span>]</span><br><span class="line">    <span class="comment"># 歌手</span></span><br><span class="line">    artist=<span class="built_in">list</span>[<span class="string">&#x27;artist&#x27;</span>]</span><br><span class="line">    <span class="comment"># 歌曲</span></span><br><span class="line">    name=<span class="built_in">list</span>[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    <span class="comment"># rid</span></span><br><span class="line">    rid=<span class="built_in">list</span>[<span class="string">&#x27;rid&#x27;</span>]</span><br><span class="line">    <span class="comment"># print(album,artist,name,rid)</span></span><br><span class="line">    table.add_row([album,artist,name,count])</span><br><span class="line">    info_list.append([album,artist,name,rid])</span><br><span class="line">    count+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(table)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置死循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    index=<span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你想要下载的歌曲rid:&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> index == -<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 下载的歌曲信息</span></span><br><span class="line">    download_info=info_list[index]</span><br><span class="line">    <span class="comment"># print(download_info[3])</span></span><br><span class="line">    rid=download_info[<span class="number">3</span>]</span><br><span class="line">    <span class="comment"># song_url=f&quot;https://www.kuwo.cn/api/v1/www/music/playUrl?mid=&#123;rid&#125;&amp;type=convert_url3&amp;br=320kmp3&quot;</span></span><br><span class="line">    song_url=<span class="string">f&quot;https://www.kuwo.cn/api/v1/www/music/playUrl?mid=<span class="subst">&#123;rid&#125;</span>&amp;type=convert_url&amp;httpsStatus=1&quot;</span></span><br><span class="line">    <span class="comment"># https://www.kuwo.cn/api/v1/www/music/playUrl?mid=&#123;rid&#125;&amp;type=convert_url&amp;httpsStatus=1</span></span><br><span class="line">    <span class="comment"># print(song_url)</span></span><br><span class="line">    <span class="comment"># 找到他的mp3链接  用字典取值的方法 拿到付费歌曲的MP3链接</span></span><br><span class="line">    song_info=requests.get(url=song_url).json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;url&#x27;</span>]</span><br><span class="line">    <span class="comment"># print(song_info)</span></span><br><span class="line">    <span class="comment"># 转换二进制格式便于保存数据</span></span><br><span class="line">    music=requests.get(url=song_info).content</span><br><span class="line">    title=re.sub(<span class="string">r&#x27;[\\/:*?&quot;&lt;&gt;|]&#x27;</span>,<span class="string">&#x27;&#x27;</span>,download_info[<span class="number">2</span>])</span><br><span class="line">    <span class="comment">#歌曲保存</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&quot;kuwo/<span class="subst">&#123;title&#125;</span>-<span class="subst">&#123;download_info[<span class="number">1</span>]&#125;</span>.mp3&quot;</span>,<span class="string">&#x27;wb&#x27;</span>)<span class="keyword">as</span> f:</span><br><span class="line">        f.write(music)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;title&#125;</span>,下载成功&quot;</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>cookie的获取需要在自己电脑浏览器打开酷我首页，进入该网页源码获取</p>
</blockquote>
<img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/屏幕截图 2022-09-14 200226.jpg" style="zoom:150%;" />

<blockquote>
<p>cookie获取完成后，还要更改里面kw_token为下面’csrf包含的 XATF666NGJP</p>
</blockquote>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python实现</tag>
      </tags>
  </entry>
  <entry>
    <title>用python 控制鼠标</title>
    <url>/2022/12/02/python%E5%AE%9E%E7%8E%B0/2022-12-02-%E7%94%A8python-%E6%8E%A7%E5%88%B6%E9%BC%A0%E6%A0%87/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<p><a href="https://cloud.tencent.com/developer/article/1741066">https://cloud.tencent.com/developer/article/1741066</a><br><a href="https://www.df100.ltd/164.asp">https://www.df100.ltd/164.asp</a></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python实现</tag>
      </tags>
  </entry>
  <entry>
    <title>乐摄网图片爬虫</title>
    <url>/2023/03/12/python%E5%AE%9E%E7%8E%B0/2023-03-12-%E4%B9%90%E6%91%84%E7%BD%91%E5%9B%BE%E7%89%87%E7%88%AC%E8%99%AB/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> parsel</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;===========正在抓取第<span class="subst">&#123;page&#125;</span>页数据==============&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    base_url = <span class="string">f&#x27;https://www.leshetu.top/xz/twyh/page/<span class="subst">&#123;page&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line">    headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">    response = requests.get(url=base_url, headers=headers)</span><br><span class="line">    html = response.text</span><br><span class="line">    <span class="comment"># print(html)</span></span><br><span class="line"></span><br><span class="line">    selector = parsel.Selector(html)</span><br><span class="line"></span><br><span class="line">    divs = selector.xpath(<span class="string">&#x27;//div[@class=&quot;row posts-wrapper&quot;]/div&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> div <span class="keyword">in</span> divs:</span><br><span class="line">        pic_title = div.xpath(<span class="string">&#x27;.//h2/a/text()&#x27;</span>).get()</span><br><span class="line">        pic_url = div.xpath(<span class="string">&#x27;.//h2/a/@href&#x27;</span>).get()</span><br><span class="line">        <span class="comment"># print(pic_title, pic_url)</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;正在下载相册：&#x27;</span>, pic_title)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;C:/Users/13089/Desktop/images/&#x27;</span> + pic_title):</span><br><span class="line">            os.mkdir(<span class="string">&#x27;C:/Users/13089/Desktop/images//&#x27;</span> + pic_title)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">            html_2 = requests.get(url=pic_url, headers=headers).text</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        selector_2 = parsel.Selector(html_2)</span><br><span class="line">        img_url_list = selector_2.xpath(<span class="string">&#x27;//div[@class=&quot;entry-content u-text-format u-clearfix&quot;]//img/@data-srcset&#x27;</span>).getall()</span><br><span class="line">        <span class="comment"># print(img_url_list)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> img_url <span class="keyword">in</span> img_url_list:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                img_data = requests.get(url=img_url, headers=headers).content</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            file_name = img_url.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&#x27;C:/Users/13089/Desktop\images//<span class="subst">&#123;pic_title&#125;</span>//<span class="subst">&#123;file_name&#125;</span>&#x27;</span> + file_name, mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(img_data)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;下载完成：&#x27;</span>, file_name)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>更新</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> parsel</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;===========正在抓取第<span class="subst">&#123;page&#125;</span>页数据==============&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    base_url = <span class="string">f&#x27;https://www.leshetu.top/xz/slct/page/<span class="subst">&#123;page&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>:<span class="string">&#x27;https://www.leshetu.me/xz/slct&#x27;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    response = requests.get(url=base_url, headers=headers)</span><br><span class="line">    html = response.text</span><br><span class="line">    <span class="comment"># print(html)</span></span><br><span class="line"></span><br><span class="line">    selector = parsel.Selector(html)</span><br><span class="line"></span><br><span class="line">    divs = selector.xpath(<span class="string">&#x27;//div[@class=&quot;row posts-wrapper&quot;]/div&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> div <span class="keyword">in</span> divs:</span><br><span class="line">        pic_title = div.xpath(<span class="string">&#x27;.//h2/a/text()&#x27;</span>).get()</span><br><span class="line">        pic_url = div.xpath(<span class="string">&#x27;.//h2/a/@href&#x27;</span>).get()</span><br><span class="line">        <span class="comment"># print(pic_title, pic_url)</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;正在下载相册：&#x27;</span>, pic_title)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;C:/Users/13089/Desktop/images\\&#x27;</span> + pic_title):</span><br><span class="line">            os.mkdir(<span class="string">&#x27;C:/Users/13089/Desktop/images\\&#x27;</span> + pic_title)</span><br><span class="line"><span class="comment">#发送相册地址的请求，解析图片地址</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">            html_2 = requests.get(url=pic_url, headers=headers).text</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        selector_2 = parsel.Selector(html_2)</span><br><span class="line">        img_url_list = selector_2.xpath(<span class="string">&#x27;//div[@class=&quot;entry-content u-text-format u-clearfix&quot;]/p//img/@src&#x27;</span>).getall()</span><br><span class="line">        <span class="comment"># print(img_url_list)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#请求图片数据</span></span><br><span class="line">        <span class="keyword">for</span> img_url <span class="keyword">in</span> img_url_list:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                img_data = requests.get(url=img_url, headers=headers).content<span class="comment">#content 提取对象的二进制数据</span></span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"><span class="comment">#准备文件名</span></span><br><span class="line">            file_name = img_url.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line"><span class="comment"># 数据保存</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&#x27;C:/Users/13089/Desktop\images//<span class="subst">&#123;pic_title&#125;</span>//<span class="subst">&#123;file_name&#125;</span>&#x27;</span> + file_name, mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(img_data)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;下载完成：&#x27;</span>, file_name)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python实现</tag>
      </tags>
  </entry>
  <entry>
    <title>python-文件操作</title>
    <url>/2023/05/06/python%E5%AE%9E%E7%8E%B0/2023-05-06-python-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>python的课后作业</p>
<span id="more"></span>

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230506111508.png"></p>
<p>题一：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f =  <span class="built_in">open</span>(<span class="string">&quot;python.txt&quot;</span>,<span class="string">&quot;a&quot;</span>)</span><br><span class="line">f.write(<span class="string">&quot;python&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>题二：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">f =  <span class="built_in">open</span>(<span class="string">&quot;python.txt&quot;</span>,<span class="string">&quot;a&quot;</span>)</span><br><span class="line">f.write(<span class="string">&quot;python&quot;</span>)</span><br><span class="line">f.close()</span><br><span class="line">os.rename(<span class="string">&quot;python.txt&quot;</span>,<span class="string">&quot;python_NEW.txt&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>题三：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f =  <span class="built_in">open</span>(<span class="string">&quot;python.txt&quot;</span>,<span class="string">&quot;a&quot;</span>)</span><br><span class="line">f.write(<span class="string">&quot;python&quot;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;python.txt&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    file = f.readline()</span><br><span class="line">    <span class="built_in">print</span>(file)</span><br><span class="line">    file1 = file.swapcase()</span><br><span class="line">    <span class="built_in">print</span>(file1)</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f =  <span class="built_in">open</span>(<span class="string">&quot;python.txt&quot;</span>,<span class="string">&quot;a+&quot;</span>)</span><br><span class="line">f.write(<span class="string">&quot;python&quot;</span>)</span><br><span class="line">f.seek(<span class="number">0</span>)  <span class="comment">#将指针归0，也就是复原到第一位，读取是从指针往后读，指针在最后，他后面就没有东西了</span></span><br><span class="line">file = f.readline()</span><br><span class="line"><span class="built_in">print</span>(file)</span><br><span class="line">file1 = file.swapcase()</span><br><span class="line"><span class="built_in">print</span>(file1)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python实现</tag>
      </tags>
  </entry>
  <entry>
    <title>python-买菜</title>
    <url>/2023/05/30/python%E5%AE%9E%E7%8E%B0/2023-05-30-python-%E4%B9%B0%E8%8F%9C/</url>
    <content><![CDATA[<p>利用python代码，通过输入的物品单价和数量计算出最终的价钱</p>
<span id="more"></span>



<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230530185059.png"></p>
<p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">zhur = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入猪肉的价格：&quot;</span>))</span><br><span class="line">kg0 = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入要买的数量(kg)：&quot;</span>))</span><br><span class="line">xilanhua = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入西兰花的价格：&quot;</span>))</span><br><span class="line">kg1 = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入要买的数量(kg)：&quot;</span>))</span><br><span class="line">lajiao = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入辣椒的价格：&quot;</span>))</span><br><span class="line">kg2 = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入要买的数量(kg)：&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;猪肉的总价为：&quot;</span>, zhur*kg0+xilanhua*kg1+lajiao*kg2 , <span class="string">&quot;元&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>运行结果如下：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230530190126.png"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python实现</tag>
      </tags>
  </entry>
  <entry>
    <title>自动化文件操作</title>
    <url>/2023/05/06/python%E5%AE%9E%E7%8E%B0/2023-05-06-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>python的尝试</p>
<span id="more"></span>


<p>在日常生活中，人们最常用的自动化文件操作包括以下几个方面：</p>
<ol>
<li>文件备份：定期自动备份重要文件，以防止数据丢失或损坏。可以使用Python编写脚本，通过复制、压缩或上传文件到云存储等方式进行文件备份。</li>
<li>批量文件重命名：当需要对大量文件进行重命名时，可以使用Python编写脚本来自动批量修改文件名。通过遍历文件夹，对文件进行重命名操作，可以根据规则或特定条件对文件进行重命名。</li>
<li>文件搜索和整理：通过编写脚本，可以自动搜索指定文件类型或文件名中包含特定关键字的文件，并将它们整理到指定的文件夹中。这样可以节省时间和精力，同时保持文件的整洁和组织性。</li>
<li>文件格式转换：如果需要将一种文件格式批量转换为另一种格式，可以使用Python来实现自动化的文件格式转换操作。例如，将多个图片文件批量转换为另一种图片格式，或将多个文档文件批量转换为PDF格式等。</li>
<li>文件合并和拆分：当需要合并多个文件为一个文件或将一个大文件拆分成多个小文件时，可以使用Python编写脚本来实现自动化的文件合并和拆分操作。这对于处理大量数据或文件非常有用。</li>
<li>文件压缩和解压缩：如果需要对多个文件或文件夹进行压缩或解压缩操作，可以使用Python编写脚本来自动进行文件压缩和解压缩。通过使用Python的压缩库（如zipfile）可以方便地实现自动化的压缩和解压缩功能。</li>
</ol>
<p>以上是生活中常见的自动化文件操作示例，你可以根据具体的需求和情况，使用Python编写脚本来实现更多的自动化文件操作。</p>
<h2 id="需求：复制一串姓名，批量生成文件夹"><a href="#需求：复制一串姓名，批量生成文件夹" class="headerlink" title="需求：复制一串姓名，批量生成文件夹"></a>需求：复制一串姓名，批量生成文件夹</h2><p>代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取用户输入的一串名字，以逗号分隔</span></span><br><span class="line">names_input = <span class="built_in">input</span>(<span class="string">&quot;请输入一串名字（以逗号分隔）：&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将用户输入的名字分割成列表</span></span><br><span class="line">names = names_input.split(<span class="string">&quot;,&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定文件夹路径</span></span><br><span class="line">folder_path = <span class="string">&quot;D:/Python project/test&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历姓名列表，创建文件夹</span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    <span class="comment"># 去除名字前后的空格</span></span><br><span class="line">    name = name.strip()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 组合文件夹路径和姓名</span></span><br><span class="line">    folder_name = os.path.join(folder_path, name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查文件夹是否存在，如果不存在则创建</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(folder_name):</span><br><span class="line">        os.makedirs(folder_name)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Created folder: <span class="subst">&#123;folder_name&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Folder already exists: <span class="subst">&#123;folder_name&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>说明：</p>
<p>在这个示例中，我们使用 <code>input()</code> 函数获取用户输入的一串名字，用户输入的名字之间以逗号分隔。然后，我们使用 <code>split()</code> 方法将输入的名字分割成列表。接下来，我们遍历名字列表，去除名字前后的空格，并使用 <code>os.path.join()</code> 函数将文件夹路径和每个姓名组合起来，得到完整的文件夹路径。然后，通过检查文件夹是否存在来判断是否需要创建文件夹，如果文件夹不存在，则使用 <code>os.makedirs()</code> 函数创建文件夹。</p>
<p>你可以运行代码并输入一串名字，代码将根据输入的名字创建对应的文件夹，并输出相应的提示信息。请注意，确保你有足够的权限在指定的文件夹路径下创建文件夹</p>
<h2 id="需求：批量更改文件夹里面的文件名称"><a href="#需求：批量更改文件夹里面的文件名称" class="headerlink" title="需求：批量更改文件夹里面的文件名称"></a>需求：批量更改文件夹里面的文件名称</h2><p>代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定文件夹路径</span></span><br><span class="line">folder_path = <span class="string">&quot;D:/系统基本存储&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件夹中的文件列表</span></span><br><span class="line">file_list = os.listdir(folder_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历文件列表，重命名文件</span></span><br><span class="line"><span class="keyword">for</span> i, file_name <span class="keyword">in</span> <span class="built_in">enumerate</span>(file_list):</span><br><span class="line">    <span class="comment"># 获取文件的完整路径</span></span><br><span class="line">    file_old_path = os.path.join(folder_path, file_name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查是否为文件</span></span><br><span class="line">    <span class="keyword">if</span> os.path.isfile(file_old_path):</span><br><span class="line">        <span class="comment"># 构建新的文件名</span></span><br><span class="line">        new_file_name = <span class="string">f&quot;<span class="subst">&#123;i + <span class="number">1</span>&#125;</span><span class="subst">&#123;os.path.splitext(file_name)[<span class="number">1</span>]&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 构建新的文件路径</span></span><br><span class="line">        file_new_path = os.path.join(folder_path, new_file_name)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 重命名文件</span></span><br><span class="line">        os.rename(file_old_path, file_new_path)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Renamed file: <span class="subst">&#123;file_name&#125;</span> -&gt; <span class="subst">&#123;new_file_name&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>说明：</p>
<p>​	在这个示例中，我们首先指定了要重命名的文件夹路径 <code>folder_path</code>。然后，使用 <code>os.listdir()</code> 函数获取文件夹中的文件列表。接下来，我们使用 <code>enumerate()</code> 函数遍历文件列表，同时获取每个文件的索引和名称。然后，通过检查是否为文件类型，我们可以排除文件夹和其他非文件的项。接下来，根据索引构建新的文件名，（将索引加1并在前面添加 “1”），同时保留原文件的扩展名。最后，使用 <code>os.rename()</code> 函数将原文件重命名为新的文件名。</p>
<p>你可以根据实际需求修改文件夹路径 <code>folder_path</code>，然后运行代码。代码将遍历指定文件夹中的文件，并将它们按照指定的规则进行重命名。输出信息将显示每个文件的原文件名和新文件名。请注意，执行文件重命名操作时要谨慎，确保对文件进行备份或确保操作安全性。</p>
<h2 id="需求：批量更改文件夹里面的文件夹名称"><a href="#需求：批量更改文件夹里面的文件夹名称" class="headerlink" title="需求：批量更改文件夹里面的文件夹名称"></a>需求：批量更改文件夹里面的文件夹名称</h2><p>代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定文件夹路径</span></span><br><span class="line">folder_path = <span class="string">&quot;D:/Python project/test&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件夹中的文件列表</span></span><br><span class="line">file_list = os.listdir(folder_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历文件列表，重命名文件夹</span></span><br><span class="line"><span class="keyword">for</span> i, file_name <span class="keyword">in</span> <span class="built_in">enumerate</span>(file_list):</span><br><span class="line">    <span class="comment"># 获取文件夹的完整路径</span></span><br><span class="line">    folder_old_path = os.path.join(folder_path, file_name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查是否为文件夹</span></span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(folder_old_path):</span><br><span class="line">        <span class="comment"># 构建新的文件夹名</span></span><br><span class="line">        new_folder_name = <span class="string">f&quot;<span class="subst">&#123;i + <span class="number">1</span>&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 构建新的文件夹路径</span></span><br><span class="line">        folder_new_path = os.path.join(folder_path, new_folder_name)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 重命名文件夹</span></span><br><span class="line">        os.rename(folder_old_path, folder_new_path)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Renamed folder: <span class="subst">&#123;file_name&#125;</span> -&gt; <span class="subst">&#123;new_folder_name&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>说明：</p>
<p>在这个示例中，我们首先指定了要重命名的文件夹路径 <code>folder_path</code>。然后，使用 <code>os.listdir()</code> 函数获取文件夹中的文件列表。接下来，我们使用 <code>enumerate()</code> 函数遍历文件列表，同时获取每个文件夹的索引和名称。然后，通过检查是否为文件夹类型，我们可以排除文件和其他非文件夹的项。接下来，根据索引构建新的文件夹名，（将索引加1并在前面添加 “1”）。最后，使用 <code>os.rename()</code> 函数将原文件夹重命名为新的文件夹名。</p>
<p>你可以根据实际需求修改文件夹路径 <code>folder_path</code>，然后运行代码。代码将遍历指定文件夹中的文件夹，并将它们按照指定的规则进行重命名。输出信息将显示每个文件夹的原文件夹名和新文件夹名。请注意，执行文件夹重命名操作时要谨慎，确保对文件夹进行备份或确保操作安全性。</p>
<h2 id="需求：将图片文件按照文件格式分别保存到不同的文件夹中"><a href="#需求：将图片文件按照文件格式分别保存到不同的文件夹中" class="headerlink" title="需求：将图片文件按照文件格式分别保存到不同的文件夹中"></a>需求：将图片文件按照文件格式分别保存到不同的文件夹中</h2><p>代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定源文件夹路径</span></span><br><span class="line">source_folder = <span class="string">&quot;D:/系统基本存储&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历源文件夹中的文件</span></span><br><span class="line"><span class="keyword">for</span> file_name <span class="keyword">in</span> os.listdir(source_folder):</span><br><span class="line">    <span class="comment"># 构建源文件的完整路径</span></span><br><span class="line">    file_path = os.path.join(source_folder, file_name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查是否为文件</span></span><br><span class="line">    <span class="keyword">if</span> os.path.isfile(file_path):</span><br><span class="line">        <span class="comment"># 获取文件的扩展名</span></span><br><span class="line">        extension = os.path.splitext(file_name)[<span class="number">1</span>].lower()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 创建目标文件夹路径</span></span><br><span class="line">        destination_folder = os.path.join(source_folder, extension[<span class="number">1</span>:])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果目标文件夹不存在，则创建它</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(destination_folder):</span><br><span class="line">            os.makedirs(destination_folder)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 构建目标文件的完整路径</span></span><br><span class="line">        destination_file_path = os.path.join(destination_folder, file_name)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 移动文件到目标文件夹中</span></span><br><span class="line">        shutil.move(file_path, destination_file_path)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Moved file: <span class="subst">&#123;file_name&#125;</span> to <span class="subst">&#123;destination_folder&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>说明：</p>
<p>在这个示例中，我们首先指定了源文件夹的路径 <code>source_folder</code>。然后，使用 <code>os.listdir()</code> 函数遍历源文件夹中的文件。接下来，通过检查是否为文件类型，我们可以排除文件夹和其他非文件的项。然后，使用 <code>os.path.splitext()</code> 函数获取文件的扩展名，并将其转换为小写。接着，我们根据扩展名构建目标文件夹的路径，将扩展名中的点去除。如果目标文件夹不存在，则使用 <code>os.makedirs()</code> 函数创建它。最后，使用 <code>shutil.move()</code> 函数将文件移动到目标文件夹中。</p>
<p>你可以根据实际需求修改源文件夹路径 <code>source_folder</code>，然后运行代码。代码将遍历源文件夹中的图片文件，并将它们按照文件格式分别保存到对应的文件夹中。输出信息将显示每个文件被移动到的目标文件夹。请确保源文件夹中只包含图片文件，并注意在执行文件移动操作时要谨慎，确保对文件进行备份或确保操作安全性。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python实现</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫基础</title>
    <url>/2022/09/24/python%E7%90%86%E8%AE%BA/2022-09-24-%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="python本质："><a href="#python本质：" class="headerlink" title="python本质："></a>python本质：</h2><blockquote>
<p>一个自动化的程序</p>
</blockquote>
<h2 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h2><blockquote>
<p>爬虫一般是通用爬取和聚焦爬取，而新手都是从通用爬取开始，就相当于对整个页面爬取。</p>
</blockquote>
<h2 id="工作过程："><a href="#工作过程：" class="headerlink" title="工作过程："></a>工作过程：</h2><ul>
<li>抓取</li>
<li>分析</li>
<li>存储</li>
</ul>
<h2 id="一、网络爬虫是什么意思"><a href="#一、网络爬虫是什么意思" class="headerlink" title="一、网络爬虫是什么意思"></a><strong>一、<a href="https://www.youhuaxing.cn/seojianzhan/17484.html">网络爬虫</a>是什么意思</strong></h2><p>网络爬虫（英文：Web Crawler或Spider）又称为网络蜘蛛、网页蜘蛛或网络机器人，是一种按照一定的规则，自动地抓取互联网信息的程序或者脚本。网络爬虫是为搜索引擎从万维网上下载网页的程序，是搜索引擎的重要组成。传统爬虫从一个或若干初始网页的URL开始，获得初始网页上的URL，在抓取网页的过程中，不断从当前页面上抽取新的URL放入队列，直到满足系统的一定停止条件。</p>
<h2 id="二、网络爬虫的分类"><a href="#二、网络爬虫的分类" class="headerlink" title="二、网络爬虫的分类"></a><strong>二、网络爬虫的分类</strong></h2><p>网络爬虫按照系统结构和实现技术，大致可以分为以下几种类型：通用网络爬虫(General <a href="https://www.youhuaxing.cn/seojianzhan/17514.html">PUR</a>pose Web Crawler)、聚焦网络爬虫(Focused Web Crawler)、增量式网络爬虫(Incremental Web Crawler)、深层网络爬虫(Deep Web Crawler)。 实际的网络爬虫系统通常是几种爬虫技术相结合实现的。</p>
<h4 id="1、通用网络爬虫"><a href="#1、通用网络爬虫" class="headerlink" title="1、通用网络爬虫"></a><strong>1、通用网络爬虫</strong></h4><p>通用网络爬虫又称全网爬虫(Scalable Web Crawler)，爬行对象从一些种子 URL 扩充到整个 Web，主要为门户站点搜索引擎和大型 Web 服务提供商采集数据。 由于商业原因，它们的技术细节很少公布出来。 这类网络爬虫的爬行范围和数量巨大，对于爬行速度和存储空间要求较高，对于爬行页面的顺序要求相对较低，同时由于待刷新的页面太多，通常采用并行工作方式，但需要较长时间才能刷新一次页面。 虽然存在一定缺陷，通用网络爬虫适用于为搜索引擎搜索广泛的主题，有较强的应用价值。</p>
<p>通用网络爬虫的结构大致可以分为页面爬行模块、页面分析模块、链接过滤模块、页面数据库、URL 队列、初始 URL 集合几个部分。为提高工作效率，通用网络爬虫会采取一定的爬行策略。 常用的爬行策略有：深度优先策略、广度优先策略。</p>
<p><strong>(1)、深度优先策略：</strong>其基本方法是按照深度由低到高的顺序，依次访问下一级网页链接，直到不能再深入为止。 爬虫在完成一个爬行分支后返回到上一链接节点进一步搜索其它链接。 当所有链接遍历完后，爬行任务结束。 这种策略比较适合垂直搜索或站内搜索，但爬行页面内容层次较深的站点时会造成资源的巨大浪费。</p>
<p><strong>(2)、广度优先策略：</strong>此策略按照网页内容目录层次深浅来爬行页面，处于较浅目录层次的页面首先被爬行。 当同一层次中的页面爬行完毕后，爬虫再深入下一层继续爬行。 这种策略能够有效控制页面的爬行深度，避免遇到一个无穷深层分支时无法结束爬行的问题，实现方便，无需存储大量中间节点，不足之处在于需较长时间才能爬行到目录层次较深的页面。</p>
<h4 id="2、聚焦网络爬虫"><a href="#2、聚焦网络爬虫" class="headerlink" title="2、聚焦网络爬虫"></a><strong>2、聚焦网络爬虫</strong></h4><p>聚焦网络爬虫(Focused Crawler)，又称主题网络爬虫(Topical Crawler)，是指选择性地爬行那些与预先定义好的主题相关页面的网络爬虫。 和通用网络爬虫相比，聚焦爬虫只需要爬行与主题相关的页面，极大地节省了硬件和网络资源，保存的页面也由于数量少而更新快，还可以很好地满足一些特定人群对特定领域信息的需求。</p>
<p>聚焦网络爬虫和通用网络爬虫相比，增加了链接评价模块以及内容评价模块。聚焦爬虫爬行策略实现的关键是评价页面内容和链接的重要性，不同的方法计算出的重要性不同，由此导致链接的访问顺序也不同。</p>
<h4 id="3、增量式网络爬虫"><a href="#3、增量式网络爬虫" class="headerlink" title="3、增量式网络爬虫"></a><strong>3、增量式网络爬虫</strong></h4><p>增量式网络爬虫(Incremental Web Crawler)是指对已下载网页采取增量式更新和只爬行新产生的或者已经发生变化网页的爬虫，它能够在一定程度上保证所爬行的页面是尽可能新的页面。 和周期性爬行和刷新页面的网络爬虫相比，增量式爬虫只会在需要的时候爬行新产生或发生更新的页面，并不重新下载没有发生变化的页面，可有效减少数据下载量，及时更新已爬行的网页，减小时间和空间上的耗费，但是增加了爬行算法的复杂度和实现难度。增量式网络爬虫的体系结构[包含爬行模块、排序模块、更新模块、本地页面集、待爬行 URL 集以及本地页面URL 集]。</p>
<p>增量式爬虫有两个目标：保持本地页面集中存储的页面为最新页面和提高本地页面集中页面的质量。 为实现第一个目标，增量式爬虫需要通过重新访问网页来更新本地页面集中页面内容，常用的方法有：</p>
<p>(1)、统一更新法：爬虫以相同的频率访问所有网页，不考虑网页的改变频率；</p>
<p>(2)、个体更新法：爬虫根据个体网页的改变频率来重新访问各页面；</p>
<p>(3)、基于分类的更新法：爬虫根据网页改变频率将其分为更新较快网页子集和更新较慢网页子集两类，然后以不同的频率访问这两类网页。</p>
<h4 id="4、Deep-Web-爬虫"><a href="#4、Deep-Web-爬虫" class="headerlink" title="4、Deep Web 爬虫"></a><strong>4、Deep Web 爬虫</strong></h4><p>Web 页面按存在方式可以分为表层网页(Surface Web)和深层网页(Deep Web，也称 Invisible Web Pages 或 Hidden Web)。 表层网页是指传统搜索引擎可以索引的页面，以超链接可以到达的<a href="https://www.youhuaxing.cn/seojianzhan/17509.html">静态网页</a>为主构成的 Web 页面。Deep Web 是那些大部分内容不能通过静态链接获取的、隐藏在搜索表单后的，只有用户提交一些关键词才能获得的 Web 页面。例如那些用户注册后内容才可见的网页就属于 Deep Web。 2000 年 Bright Planet 指出：Deep Web 中可访问信息容量是 Surface Web 的几百倍，是互联网上最大、发展最快的新型信息资源。</p>
<p>Deep Web 爬虫体系结构包含六个基本功能模块 (爬行控制器、解析器、表单分析器、表单处理器、响应分析器、LVS 控制器)和两个爬虫内部数据结构(URL 列表、LVS 表)。 其中 LVS(Label Value Set)表示标签&#x2F;数值集合，用来表示填充表单的数据源。</p>
<h2 id="三、网络爬虫的组成"><a href="#三、网络爬虫的组成" class="headerlink" title="三、网络爬虫的组成"></a><strong>三、网络爬虫的组成</strong></h2><p>在网络爬虫的系统框架中，主过程由控制器，解析器，资源库三部分组成。控制器的主要工作是负责给多线程中的各个爬虫线程分配工作任务。解析器的主要工作是下载网页，进行页面的处理，主要是将一些JS脚本标签、<a href="https://www.youhuaxing.cn/seojianzhan/17781.html">CSS</a>代码内容、空格字符、<a href="https://www.youhuaxing.cn/seojianzhan/17775.html">Html</a>标签等内容处理掉，爬虫的基本工作是由解析器完成。资源库是用来存放下载到的网页资源，一般都采用大型的数据库存储，并对其建立索引。</p>
<p><strong>1、控制器</strong></p>
<p>控制器是网络爬虫的中央控制器，它主要是负责根据系统传过来的URL链接，分配一线程，然后启动线程调用爬虫爬取网页的过程。</p>
<p><strong>2、解析器</strong></p>
<p>解析器是负责网络爬虫的主要部分，其负责的工作主要有：下载网页的功能，对网页的文本进行处理，如过滤功能，抽取特殊HTML标签的功能，分析数据功能。</p>
<p><strong>3、资源库</strong></p>
<p>主要是用来存储网页中下载下来的数据记录的容器，并提供生成索引的目标源。中大型的数据库产品有：Oracle、Sql Server等。</p>
<h2 id="四、网络爬虫的基本步骤"><a href="#四、网络爬虫的基本步骤" class="headerlink" title="四、网络爬虫的基本步骤"></a><strong>四、网络爬虫的基本步骤</strong></h2><p>1、首先选取一部分种子URL；</p>
<p>2、将这些URL放入待抓取URL队列；</p>
<p>3、从待抓取URL队列中取出待抓取的URL,解析DNS，得到主机的IP，并将URL对应的网页下载下来，存储到已下载网页库中，此外，将这些URL放入已抓取URL队列；</p>
<p>4、分析已抓取到的网页内容中的其他URL,并将URL放入待抓取URL队列，从而进入下一个循环。</p>
<h2 id="五、网络爬虫的应用场景"><a href="#五、网络爬虫的应用场景" class="headerlink" title="五、网络爬虫的应用场景"></a><strong>五、网络爬虫的应用场景</strong></h2><p><strong>1、搜索引擎抓取网页信息。</strong></p>
<p>大家常用的搜索引擎的首要工作流程就是利用网络爬虫去爬取各个网站的页面。以<a href="https://www.youhuaxing.cn/seojianzhan/17312.html">百度蜘蛛</a>为例，一旦有网站的页面更新了，百度蜘蛛就会出动，然后把爬取的页面信息搬回百度，再进行多次的筛选和整理。最终在大家搜索相关信息的时候，通过排名呈现给大家。可以说，没有网络爬虫，我们使用搜索引擎查询资料的时候，就不会那么便捷、全面和高效。</p>
<p><strong>2、爬取需要数据进行统计。</strong></p>
<p>冷数据启动时丰富数据的主要工具，新业务开始时，由于刚起步，所以没有多少数据，此时就需要爬取其他平台的数据来填充我们的业务数据。比如说，如果我们想做一个类似大众点评这样的平台，一开始没有商户等信息，就需要去爬取大众，美团等商家的信息来填充数据，比如天眼查，企查查，西瓜数据等等。</p>
<p><strong>3、出行类软件通过爬虫抢票。</strong></p>
<p>如果问网络爬虫技术应用最多的领域是什么？那一定是出行行业。相信每逢春运或是节假日，大家都用过一些抢票的软件，就为了获得一张机票或者是一张火车票，而这种出行类软件正是运用网络爬虫技术来达到抢票的目的。像抢票软件这样的网络爬虫，会不停地爬取交通出行的售票网站，一旦有票就会点击拍下来，放到自己的网站售卖。如果一定时间内没有人购买，就又会自动退票。然后又通过网站爬虫把票拍下来，到时间又继续退票，如此反复循环。</p>
<p><strong>4、聚合平台整合信息进行比较。</strong></p>
<p>如今，出现了很多比价平台、聚合电商还有返利平台等等给，这类聚合平台的本质都是提供横向数据比较，聚合服。比如说电商中经常需要有一种比价系统，从各大电商平台，如拼多多，淘宝，京东等抓取同一个商品的价格信息，以给用户提供最实惠的商品价格，这样就需要利用网络爬虫从各大电商平台爬取信息。</p>
<h2 id="六、搜索引擎蜘蛛介绍"><a href="#六、搜索引擎蜘蛛介绍" class="headerlink" title="六、搜索引擎蜘蛛介绍"></a><strong>六、搜索引擎蜘蛛介绍</strong></h2><p><strong>1、BaiduSpider（百度蜘蛛）</strong></p>
<p>常见的百度蜘蛛有：Baiduspider 和 Baiduspider-image（抓取图片）。国内网站大多数流量都来自百度，所以推荐放行。</p>
<p>百度还有其它几个蜘蛛：</p>
<p>Baiduspider-video（抓取视频）</p>
<p>Baiduspider-news（抓取新闻）</p>
<p>Baiduspider-mobile（抓取wap）</p>
<p>百度蜘蛛介绍：<a href="http://www.baidu.com/search/spider.html">http://www.baidu.com/search/spider.html</a></p>
<p><strong>2、Googlebot（谷歌蜘蛛）</strong></p>
<p>常见的谷歌蜘蛛有：Googlebot，还一个 Googlebot-Mobile ，不是很常见，看名字是应该是抓取 wap 页面的。世界第一大搜索引擎，推荐放行。</p>
<p>谷歌蜘蛛链接：<a href="http://www.google.com/bot.html">http://www.google.com/bot.html</a></p>
<p><strong>3、360Spider（360蜘蛛）</strong></p>
<p>一个十分”勤奋抓爬”的蜘蛛。</p>
<p>360蜘蛛IP：<a href="https://www.so.com/help/spider_ip.html">https://www.so.com/help/spider_ip.html</a></p>
<p><strong>4、Sogou web spider（搜狗蜘蛛）</strong></p>
<p>搜狗公司还有其它几个蜘蛛：Sogou News Spider、Sogou inst spider、Sogou spider2、Sogou blog、Sogou Orion spider、Sogou web spider。</p>
<p>搜狗蜘蛛爬虫：<a href="http://www.sogou.com/docs/help/webmasters.htm">http://www.sogou.com/docs/help/webmasters.htm</a></p>
<p><strong>5、Bingbot（必应蜘蛛）</strong></p>
<p>必应是微软的搜索引擎，微软的IE浏览器和Edge浏览器会默认使用该搜索引擎，而且占有率也还可以，不建议屏蔽。</p>
<p>必应蜘蛛爬虫：<a href="http://www.bing.com/bingbot.htm">http://www.bing.com/bingbot.htm</a></p>
<p><strong>6、Sosospider（SOSO蜘蛛）</strong></p>
<p>腾讯soso，目前搜狗公司管理。</p>
<p>soso蜘蛛爬虫：<a href="http://help.soso.com/webspider.htm">http://help.soso.com/webspider.htm</a></p>
<p><strong>7、Yahoo! Slurp China（雅虎中国）或 Yahoo! Slurp（雅虎英文）</strong></p>
<p>雅虎蜘蛛爬虫：</p>
<p>雅虎中国：<a href="http://misc.yahoo.com.cn/help.html">http://misc.yahoo.com.cn/help.html</a></p>
<p>雅虎英文：<a href="http://help.yahoo.com/help/us/ysearch/slurp">http://help.yahoo.com/help/us/ysearch/slurp</a></p>
<p><strong>8、MSNBot，MSNot-media（MSN蜘蛛）</strong></p>
<p>MSNBOT应该是 bing 搜索的蜘蛛，MSN和bing是一家的，可以只保留 Bingbot。</p>
<p>MSN蜘蛛爬虫：<a href="http://search.msn.com/msnbot.htm">http://search.msn.com/msnbot.htm</a></p>
<p><strong>9、YisouSpider（一搜蜘蛛&#x2F;神马搜索）</strong></p>
<p>神马搜索是UC和阿里2013年已经成立合资公司推出的移动搜索引擎。</p>
<p>该蜘蛛抓取频率还是很高的，很多人并不看好，不过如果屏蔽的话，会损失 UC浏览器 的流量来源。自己斟酌吧！</p>
<p><strong>10、还有一些蜘蛛，不会给网站带来什么流量，站长看是否屏蔽。</strong></p>
<p><strong>YoudaoBot（有道蜘蛛）：</strong>网易有道的蜘蛛，并不会带来流量。</p>
<p><strong>JikeSpider（即刻蜘蛛）：</strong>“即刻搜索”是由人民搜索网络股份公司于2011年6月20日推出的通用搜索引擎平台。</p>
<p>即刻蜘蛛：<a href="http://shoulu.jike.com/spider.html">http://shoulu.jike.com/spider.html</a></p>
<p><strong>ToutiaoSpider（头条号）：</strong>今日头条的头条号蜘蛛，不能带来流量，屏蔽好啦。</p>
<p>来源：http &#x2F;&#x2F;web toutiao com&#x2F;media_cooperation</p>
<p><em>除了上述的爬虫，其他的就直接毫不犹豫的禁掉。</em></p>
<h4 id="最后总结"><a href="#最后总结" class="headerlink" title="最后总结"></a><strong>最后总结</strong></h4><p>在信息大爆炸的时代，网络爬虫可以代替手工做很多事情，比如可以用于做搜索引擎，也可以爬取网站上面的图片等，网络爬虫可以更高效率地利用好互联网中的有效信息。</p>
<p>本文来源：<a href="https://www.youhuaxing.cn/seojianzhan/17484.html">https://www.youhuaxing.cn/seojianzhan/17484.html</a></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python理论</tag>
      </tags>
  </entry>
  <entry>
    <title>对编程的理解</title>
    <url>/2023/05/15/python%E7%90%86%E8%AE%BA/2023-05-15-%E5%AF%B9%E7%BC%96%E7%A8%8B%E7%9A%84%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<p>从总体上理解编程</p>
<span id="more"></span>

<p>编程：编写程序，也就是写代码，程序就是<strong>数据和函数</strong>，故本质就是<strong>编写不同的函数去处理数据</strong>，其难度由数据量大小和函数处理逻辑的复杂程度决定，而函数本身其实代表的就是一个<strong>过程</strong>，函数的调用就是对函数的<strong>呼唤</strong>。</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230515104348.png"></p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/da49fae671b25d52bbb88f6115df5ef.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4ee5c550229ba140a7b1a34570a6b00.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/beb0b753fe68d29d15608a610287b9e.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/189b2f8b088a624d52d42cd844412e0.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d9486a5d7cf970528ca4f6de6835a01.jpg"></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python理论</tag>
      </tags>
  </entry>
  <entry>
    <title>python-账户类</title>
    <url>/2023/05/30/python%E5%AE%9E%E7%8E%B0/2023-05-30-python-%E8%B4%A6%E6%88%B7%E7%B1%BB/</url>
    <content><![CDATA[<p>定义一个账户类，可以创建账户、存款、取款 、查询余额、以及销户等操作</p>
<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">定义一个账户类，可以创建账户、存款、取款 、查询余额、以及销户等操作</span><br><span class="line">类</span><br><span class="line">    类名: Bank()</span><br><span class="line">    属性: 姓名、密码、钱</span><br><span class="line">    方法: </span><br><span class="line">        创建账户：</span><br><span class="line">            输入姓名</span><br><span class="line">            输入密码</span><br><span class="line">            确认密码</span><br><span class="line">            用户存在：</span><br><span class="line">                提示，并重新创建一个</span><br><span class="line">            密码不一致：</span><br><span class="line">                提示，重来</span><br><span class="line">            否则：</span><br><span class="line">                成功，将用户信息添加到字典里面</span><br><span class="line">        存款</span><br><span class="line">            输入姓名</span><br><span class="line">            输入密码</span><br><span class="line">            用户不存在：  </span><br><span class="line">                提示，重来</span><br><span class="line">            密码不正确：</span><br><span class="line">                提示，重来</span><br><span class="line">            否则：</span><br><span class="line">                输入存款金额</span><br><span class="line">                现在的钱 = 原来的钱 + 存钱</span><br><span class="line">        取款</span><br><span class="line">            输入姓名</span><br><span class="line">            输入密码</span><br><span class="line">            用户不存在：  </span><br><span class="line">                提示，重来</span><br><span class="line">            密码不正确：</span><br><span class="line">                提示，重来</span><br><span class="line">            否则：</span><br><span class="line">                输入取款金额</span><br><span class="line">                取款 &gt; 原来的钱：</span><br><span class="line">                    提示余额不足</span><br><span class="line">                取款的钱 &lt;= 余额</span><br><span class="line">                    现在的钱 = 原来的钱 - 取的钱</span><br><span class="line">        查询余额:</span><br><span class="line">            输入姓名</span><br><span class="line">            输入密码</span><br><span class="line">            用户不存在：  </span><br><span class="line">                提示，重来</span><br><span class="line">            密码不正确：</span><br><span class="line">                提示，重来</span><br><span class="line">            否则：</span><br><span class="line">                根据姓名打印对应的键值对</span><br><span class="line">        </span><br><span class="line">            </span><br><span class="line">        以及销户</span><br><span class="line">对象=类名()</span><br><span class="line"></span><br><span class="line">思考：如何获取用户所需的操作？---&gt; input()</span><br><span class="line">尽可能的吧代码放到类里面封装起来</span><br></pre></td></tr></table></figure>

<p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Bank</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name=<span class="literal">None</span>, password=<span class="literal">None</span>, money=<span class="number">0</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        当对象被创建的时候，init里面的代码会自动执行</span></span><br><span class="line"><span class="string">        :param name:</span></span><br><span class="line"><span class="string">        :param password:</span></span><br><span class="line"><span class="string">        :param money:</span></span><br><span class="line"><span class="string">        思考：如何保存用户信息---&gt;字典</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 刚开始什么都没有，所以设置初始化值为空 None</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.password = password</span><br><span class="line">        self.money = money</span><br><span class="line">        <span class="comment"># &#123;name1:[password1, money1], name2:[password2, money2]&#125;</span></span><br><span class="line">        self.user_dicts = &#123;&#125;</span><br><span class="line">        <span class="built_in">print</span>(self.user_dicts)</span><br><span class="line">        <span class="comment"># 调用选择的方法</span></span><br><span class="line">        self.choose()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">choose</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 选择的方法</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            a = <span class="built_in">input</span>(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1、创建账户  2、存款    3、取款</span></span><br><span class="line"><span class="string">4、查询    5、销户    6、退出   </span></span><br><span class="line"><span class="string">请输入对应的数字，选择你想要的服务：&quot;&quot;&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> a == <span class="string">&quot;1&quot;</span>:</span><br><span class="line">                self.create_user()</span><br><span class="line">            <span class="keyword">elif</span> a == <span class="string">&quot;2&quot;</span>:</span><br><span class="line">                self.save()</span><br><span class="line">            <span class="keyword">elif</span> a == <span class="string">&quot;3&quot;</span>:</span><br><span class="line">                self.get_money()</span><br><span class="line">            <span class="keyword">elif</span> a == <span class="string">&quot;4&quot;</span>:</span><br><span class="line">                self.ask()</span><br><span class="line">            <span class="keyword">elif</span> a == <span class="string">&quot;5&quot;</span>:</span><br><span class="line">                self.del_user()</span><br><span class="line">            <span class="keyword">elif</span> a == <span class="string">&quot;6&quot;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;输入有误请重试&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">create_user</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        输入名字</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># print(&quot;创建用户的方法&quot;)</span></span><br><span class="line">        self.name = <span class="built_in">input</span>(<span class="string">&quot;请输入你的姓名：&quot;</span>)</span><br><span class="line">        self.passwd1 = <span class="built_in">input</span>(<span class="string">&quot;请输入你的密码：&quot;</span>)</span><br><span class="line">        passwd2 = <span class="built_in">input</span>(<span class="string">&quot;请再次输入确认你的密码：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> self.name <span class="keyword">in</span> self.user_dicts:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;用户已存在，请重试&quot;</span>)  <span class="comment"># 请重试---重新创建账户</span></span><br><span class="line">            self.create_user()  <span class="comment"># 重新调用创建用户的方法</span></span><br><span class="line">        <span class="keyword">if</span> self.passwd1 != passwd2:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;两次密码不一致，请重试！&quot;</span>)</span><br><span class="line">            self.create_user()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 将用户信息构造成一个字典，添加到包存用户的字典里面</span></span><br><span class="line">            user = &#123;self.name:[self.passwd1, self.money]&#125;</span><br><span class="line">            <span class="comment"># update() 如果健名不存在则新增键值对</span></span><br><span class="line">            self.user_dicts.update(user)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;用户创建成功&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(self.user_dicts)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">save</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># print(&quot;存款的方法&quot;)</span></span><br><span class="line">        name = <span class="built_in">input</span>(<span class="string">&quot;请输入你的姓名：&quot;</span>)</span><br><span class="line">        passwd = <span class="built_in">input</span>(<span class="string">&quot;请输入你的密码：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> name <span class="keyword">not</span> <span class="keyword">in</span> self.user_dicts:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;用户不存在，请重试！&quot;</span>)  <span class="comment"># 重试 --- 重新存款</span></span><br><span class="line">            self.save()</span><br><span class="line">        <span class="keyword">if</span> self.user_dicts[name][<span class="number">0</span>] != passwd:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;密码不正确，请重试&quot;</span>)</span><br><span class="line">            self.save()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            money = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入要存的金额: &quot;</span>))</span><br><span class="line">            self.money = self.user_dicts[name][<span class="number">1</span>] + money</span><br><span class="line">            <span class="comment"># 注意：需要更改字典里面的值</span></span><br><span class="line">            <span class="comment"># dict[name] = [passwd,money]</span></span><br><span class="line">            self.user_dicts.update(&#123;name:[passwd,self.money]&#125;)</span><br><span class="line">            <span class="built_in">print</span>(self.user_dicts)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_money</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># print(&quot;取款的方法&quot;)</span></span><br><span class="line">        name = <span class="built_in">input</span>(<span class="string">&quot;请输入你的姓名：&quot;</span>)</span><br><span class="line">        passwd = <span class="built_in">input</span>(<span class="string">&quot;请输入你的密码：&quot;</span>)</span><br><span class="line">        money = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入要取的金额: &quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> name <span class="keyword">not</span> <span class="keyword">in</span> self.user_dicts:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;用户不存在，请重试！&quot;</span>)  <span class="comment"># 重试 --- 重新存款</span></span><br><span class="line">            self.get_money()</span><br><span class="line">        <span class="keyword">elif</span> self.user_dicts[name][<span class="number">0</span>] != passwd:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;密码不正确，请重试&quot;</span>)</span><br><span class="line">            self.get_money()</span><br><span class="line">        <span class="keyword">elif</span> money &gt; self.user_dicts[name][<span class="number">1</span>]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;抱歉，余额不足，请重试&quot;</span>)</span><br><span class="line">            self.get_money()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.money = self.user_dicts[name][<span class="number">1</span>] - money</span><br><span class="line">            <span class="comment"># 注意：需要更改字典里面的值</span></span><br><span class="line">            <span class="comment"># dict[name] = [passwd,money]</span></span><br><span class="line">            self.user_dicts.update(&#123;name: [passwd, self.money]&#125;)</span><br><span class="line">            <span class="built_in">print</span>(self.user_dicts)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ask</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># print(&quot;查询的方法&quot;)</span></span><br><span class="line">        name = <span class="built_in">input</span>(<span class="string">&quot;请输入你的姓名：&quot;</span>)</span><br><span class="line">        passwd = <span class="built_in">input</span>(<span class="string">&quot;请输入你的密码：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> name <span class="keyword">not</span> <span class="keyword">in</span> self.user_dicts:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;用户不存在，请重试！&quot;</span>)  <span class="comment"># 重试 --- 重新存款</span></span><br><span class="line">            self.ask()</span><br><span class="line">        <span class="keyword">if</span> self.user_dicts[name][<span class="number">0</span>] != passwd:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;密码不正确，请重试&quot;</span>)</span><br><span class="line">            self.ask()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            money = self.user_dicts[name][<span class="number">1</span>]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;您当前余额为<span class="subst">&#123;money&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">del_user</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># print(&quot;销户的方法&quot;)</span></span><br><span class="line">        name = <span class="built_in">input</span>(<span class="string">&quot;请输入你的姓名：&quot;</span>)</span><br><span class="line">        passwd = <span class="built_in">input</span>(<span class="string">&quot;请输入你的密码：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> name <span class="keyword">not</span> <span class="keyword">in</span> self.user_dicts:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;用户不存在，请重试！&quot;</span>)  <span class="comment"># 重试 --- 重新存款</span></span><br><span class="line">            self.del_user()</span><br><span class="line">        <span class="keyword">if</span> self.user_dicts[name][<span class="number">0</span>] != passwd:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;密码不正确，请重试&quot;</span>)</span><br><span class="line">            self.del_user()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">del</span> self.user_dicts[name]</span><br><span class="line">            <span class="built_in">print</span>(self.user_dicts)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 实例化一个对象</span></span><br><span class="line">    lm = Bank()</span><br></pre></td></tr></table></figure>

<p>运行结果如下：</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python实现</tag>
      </tags>
  </entry>
  <entry>
    <title>if条件语句和while循环</title>
    <url>/2023/05/03/python%E7%90%86%E8%AE%BA/if%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5%E5%92%8Cwhile%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<p>python的第三节课笔记（基础入门）</p>
<span id="more"></span>

<h2 id="if-条件语句："><a href="#if-条件语句：" class="headerlink" title="if 条件语句："></a>if 条件语句：</h2><table><tr><td bgcolor="#ADD8E6">缩进（ 快捷键：tab）：在Python中一般使用四个空格表示一个缩进，表示层级关系。</td></tr></table>

<h3 id="单项选择："><a href="#单项选择：" class="headerlink" title="单项选择："></a>单项选择：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if  后面接的是判断条件:</span><br><span class="line">    满足条件的时候执行的代码</span><br><span class="line">else:</span><br><span class="line">    不满足条件的时候执行的代码</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">deng = <span class="string">&quot;yellow&quot;</span>  <span class="comment"># 设置灯的状态为黄色</span></span><br><span class="line"><span class="keyword">if</span> deng == <span class="string">&quot;red&quot;</span>:  <span class="comment"># 判断灯是不是红色</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请停止&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请通过&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="多项选择："><a href="#多项选择：" class="headerlink" title="多项选择："></a>多项选择：</h3><table>
<thead>
<tr>
<th>以上代码的问题</th>
<th>黄灯和绿灯界限不够明显</th>
</tr>
</thead>
<tbody><tr>
<td>原因</td>
<td>只有两种判断（红灯和其他）</td>
</tr>
<tr>
<td>解决</td>
<td>增加判断（红灯、绿、黄）</td>
</tr>
</tbody></table>
<table><tr><td bgcolor="#ADD8E6">多中情况判断可以使用 if - elif - else</td></tr></table>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if 条件1：</span><br><span class="line">    满足条件1执行</span><br><span class="line">elif 条件2：</span><br><span class="line">    满足条件2执行</span><br><span class="line">………………</span><br><span class="line">elif 条件n:</span><br><span class="line">    满足条件n执行</span><br><span class="line">else:</span><br><span class="line">    以上条件全部不满足时执行</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li>if elif else 语句后面必须有冒号</li>
<li>里面的代码必须缩进</li>
<li>if 建议只有一个 ，elif 不限制个数</li>
<li>else只能有一个,并且不需要写判断条件</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">light = <span class="built_in">input</span>(<span class="string">&quot;请输入一个灯的状态：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> light == <span class="string">&quot;red&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;红灯,请稍等&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> light == <span class="string">&quot;yellow&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;黄灯,请减速慢行&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> light == <span class="string">&quot;green&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请快速通过&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;交通灯故障&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="三目运算"><a href="#三目运算" class="headerlink" title="三目运算:"></a>三目运算:</h3><table><tr><td bgcolor="#ADD8E6">语法形式:条件成立执行的代码 if 判断条件 else 条件不成立执行的代码</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">lm = <span class="number">31</span></span><br><span class="line"><span class="keyword">if</span> lm &lt;= <span class="number">30</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;小于&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;大于&quot;</span>)  <span class="comment"># lm &gt; 30</span></span><br></pre></td></tr></table></figure>

<p>可以等同于：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">lm = <span class="number">31</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;小于&quot;</span> <span class="keyword">if</span> lm &lt;= <span class="number">30</span> <span class="keyword">else</span> <span class="string">&quot;大于&quot;</span> )</span><br></pre></td></tr></table></figure>

<h3 id="if-嵌套"><a href="#if-嵌套" class="headerlink" title="if 嵌套:"></a>if 嵌套:</h3><table><tr><td bgcolor="#ADD8E6">if 判断里面还有一个if 判断</td></tr></table>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if 条件1：</span><br><span class="line">    满足条件1执行</span><br><span class="line">    if 条件：</span><br><span class="line">        条件满足执行</span><br><span class="line">    else:</span><br><span class="line">        条件不满足执行</span><br><span class="line">else:</span><br><span class="line">    以上条件全部不满足时执行</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li>input不管输入什么返回的都是字符串， 字符串和数值不能比较</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ticket = <span class="built_in">input</span>(<span class="string">&quot;请输入是否有票（1表示有，0表示没有）&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> ticket == <span class="string">&#x27;1&#x27;</span>:  <span class="comment"># 将判断条件给为字符串，与输入的类型一致</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;有票&quot;</span>)</span><br><span class="line">    <span class="comment"># 将输入转为数值，与判断条件数据一致</span></span><br><span class="line">    dao_len = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入道具长度：&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> dao_len &lt;= <span class="number">30</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;符合标准&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;不符合安检标准！！！&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;没有票&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符:"></a>逻辑运算符:</h3><table>
<thead>
<tr>
<th>and</th>
<th>与</th>
<th>两者为真,结果为真, 只要有一个False就为假</th>
</tr>
</thead>
<tbody><tr>
<td>or</td>
<td>或</td>
<td>两者有一个为真，结果为真</td>
</tr>
<tr>
<td>not</td>
<td>取反</td>
<td>True  –&gt;  False       False  —&gt;  True</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="literal">True</span> <span class="keyword">and</span> <span class="literal">False</span>)   <span class="comment">#False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="literal">True</span> <span class="keyword">and</span> <span class="literal">True</span>)     <span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="literal">False</span> <span class="keyword">and</span> <span class="literal">False</span>)   <span class="comment">#False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="literal">True</span> <span class="keyword">or</span> <span class="literal">False</span>)   <span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="literal">True</span> <span class="keyword">or</span> <span class="literal">True</span>)    <span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="literal">False</span> <span class="keyword">or</span> <span class="literal">False</span>)    <span class="comment">#False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> <span class="literal">False</span>)    <span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> <span class="literal">True</span>)     <span class="comment">#False</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 案例：相亲要求，又有房又帅（and）</span></span><br><span class="line">car = <span class="built_in">input</span>(<span class="string">&quot;请输入是否有房（T表示有，F表示没有）&quot;</span>)  <span class="comment"># 将输入全部转化为答谢</span></span><br><span class="line">cool = <span class="built_in">input</span>(<span class="string">&quot;请输入是否帅气（T表示有，F表示没有）&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(car, cool)</span><br><span class="line"><span class="keyword">if</span> car == <span class="string">&quot;T&quot;</span> <span class="keyword">and</span> cool == <span class="string">&quot;T&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;相亲成功！&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;相亲失败！&quot;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 案例：相亲要求，有房或者帅（or）</span></span><br><span class="line">car = <span class="built_in">input</span>(<span class="string">&quot;请输入是否有房（T表示有，F表示没有）&quot;</span>)  <span class="comment"># 将输入全部转化为答谢</span></span><br><span class="line">cool = <span class="built_in">input</span>(<span class="string">&quot;请输入是否帅气（T表示有，F表示没有）&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(car, cool)</span><br><span class="line"><span class="keyword">if</span> car == <span class="string">&quot;T&quot;</span> <span class="keyword">or</span> cool == <span class="string">&quot;T&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;相亲成功！&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;相亲失败！&quot;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#案例：相亲要求，没房或者不帅（not）</span></span><br><span class="line">car = <span class="built_in">input</span>(<span class="string">&quot;请输入是否有房（T表示有，F表示没有）&quot;</span>)  <span class="comment"># 将输入全部转化为答谢</span></span><br><span class="line">cool = <span class="built_in">input</span>(<span class="string">&quot;请输入是否帅气（T表示有，F表示没有）&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(car, cool)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> car == <span class="string">&quot;T&quot;</span> <span class="keyword">or</span> <span class="keyword">not</span> cool == <span class="string">&quot;T&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;相亲成功！&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;相亲失败！&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="优先级："><a href="#优先级：" class="headerlink" title="优先级："></a>优先级：</h3><table><tr><td bgcolor="#ADD8E6">not > and > or </td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="literal">True</span> <span class="keyword">or</span> <span class="literal">False</span> <span class="keyword">and</span> <span class="literal">False</span>)  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> <span class="literal">False</span> <span class="keyword">and</span> <span class="literal">False</span>)  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> <span class="literal">False</span> <span class="keyword">or</span> <span class="literal">False</span>)  <span class="comment"># True</span></span><br></pre></td></tr></table></figure>

<h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环:"></a>while循环:</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">初始化条件值</span><br><span class="line">while 条件：</span><br><span class="line">    满足条件要执行的代码</span><br><span class="line">    自增条件</span><br><span class="line"></span><br><span class="line">不满足条件的时候，结束循环</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#打印10次苏</span></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">11</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;苏&quot;</span>)</span><br><span class="line">    i = i + <span class="number">1</span>  </span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li>自增条件的目的是为了让代码有结束循环的可能</li>
<li>如果条件恒为真，则此循环为死循环</li>
</ul>
<h3 id="跳出循环"><a href="#跳出循环" class="headerlink" title="跳出循环"></a>跳出循环</h3><table>
<thead>
<tr>
<th>break</th>
<th>手动提前跳出循环</th>
</tr>
</thead>
<tbody><tr>
<td>continue</td>
<td>跳过当前循环，其他循环按要求执行</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 案例：假如每天学习，周1~周7</span></span><br><span class="line">day = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> day &lt;= <span class="number">7</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;今天是周<span class="subst">&#123;day&#125;</span>,好好学习&quot;</span>)</span><br><span class="line">    <span class="comment"># day = day + 1</span></span><br><span class="line">    day += <span class="number">1</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;死循环&quot;</span>)</span><br><span class="line">    <span class="keyword">break</span>  <span class="comment"># 主动结束循环</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#案例：学到周5，周末开摆不学了</span></span><br><span class="line">day = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> day &lt;= <span class="number">7</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;今天是周<span class="subst">&#123;day&#125;</span>,好好学习&quot;</span>)</span><br><span class="line">    <span class="comment"># day = day + 1</span></span><br><span class="line">    day += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> day == <span class="number">6</span>:  <span class="comment"># 增加判断条件，由于周五学习之后，day加到了6，所以判断条件时6</span></span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#案例：学到周4想休息一天，周五周六还是继续学习</span></span><br><span class="line">day = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> day &lt;= <span class="number">7</span>:</span><br><span class="line">    <span class="comment"># day = day + 1</span></span><br><span class="line">    day += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> day == <span class="number">4</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;休息啦！！！&quot;</span>)</span><br><span class="line">        <span class="keyword">continue</span>  <span class="comment"># 跳过的是剩余代码</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;今天是周<span class="subst">&#123;day&#125;</span>,好好学习&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li>当循环正常结束的时候会执行else里面的代码</li>
<li>break是强制退出，不执行else的代码</li>
<li>continue是正常结束，执行else</li>
<li>只要是循环，不管是while还是for，都可以和continue以及break</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> a &lt; <span class="number">4</span>:</span><br><span class="line">    <span class="built_in">print</span>(a)</span><br><span class="line">    a += <span class="number">1</span>  <span class="comment"># a = a + 1  给a 加1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;循环结束啦！！！&quot;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> a &lt; <span class="number">4</span>:</span><br><span class="line">    a += <span class="number">1</span>  <span class="comment"># a = a + 1  给a 加1</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">break</span>  <span class="comment"># 强制退出循环</span></span><br><span class="line">    <span class="built_in">print</span>(a)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;循环结束啦！！！&quot;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):  <span class="comment"># 从0~4</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">2</span>:</span><br><span class="line">        <span class="comment"># break  # 强制退出，不执行</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;劳动结束！！！&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a>嵌套循环</h3><p>注意：</p>
<ul>
<li>先判断外层循环</li>
<li>外层条件满足，判断内层循环</li>
<li>内层循环结束，回到下一次外层循环</li>
</ul>
<table><tr><td bgcolor="#ADD8E6">按每月4周，每周7天打印日历表 </td></tr></table>

<p>第1周，第1天<br>……<br>第1周，第7天<br>第2周，第1天<br>……<br>第4周，第7天</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">week = <span class="number">1</span>  <span class="comment"># 初始化周数</span></span><br><span class="line"><span class="keyword">while</span> week &lt;= <span class="number">4</span>:</span><br><span class="line">    day = <span class="number">1</span>  <span class="comment"># 初始化天数</span></span><br><span class="line">    <span class="keyword">while</span> day &lt;= <span class="number">7</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;第<span class="subst">&#123;week&#125;</span>周,第<span class="subst">&#123;day&#125;</span>天&quot;</span>)</span><br><span class="line">        day += <span class="number">1</span>  <span class="comment"># 自增条件</span></span><br><span class="line">    week += <span class="number">1</span>  <span class="comment"># week = week + 1</span></span><br></pre></td></tr></table></figure>

<p>反面教材：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">week = <span class="number">1</span>  <span class="comment"># 初始化周数</span></span><br><span class="line">day = <span class="number">1</span>  <span class="comment"># 初始化天数</span></span><br><span class="line"><span class="keyword">while</span> week &lt;= <span class="number">4</span>  <span class="keyword">or</span> day &lt;= <span class="number">7</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;第<span class="subst">&#123;week&#125;</span>周,第<span class="subst">&#123;day&#125;</span>天&quot;</span>)</span><br><span class="line">    day += <span class="number">1</span>  <span class="comment"># 自增条件</span></span><br><span class="line">    week += <span class="number">1</span>  <span class="comment"># week = week + 1</span></span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601175216.png"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python理论</tag>
      </tags>
  </entry>
  <entry>
    <title>for循环与序列结构</title>
    <url>/2023/05/04/python%E7%90%86%E8%AE%BA/for%E5%BE%AA%E7%8E%AF%EF%BC%8C%E5%88%97%E8%A1%A8%E4%B8%8E%E5%85%83%E7%BB%84/</url>
    <content><![CDATA[<p>python的第四节课笔记（基础入门）</p>
<span id="more"></span>

<h2 id="for循环："><a href="#for循环：" class="headerlink" title="for循环："></a>for循环：</h2><h3 id="for循环语法结构："><a href="#for循环语法结构：" class="headerlink" title="for循环语法结构："></a>for循环语法结构：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for 循环变量 in 序列:</span><br><span class="line">    循环体里面要执行的代码块</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li>循环次数：由序列长度决定</li>
<li>循环内容：由循环体里面的具体代码决定</li>
</ul>
<p>查看序列长度的函数：</p>
<table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>len(序列)</td>
<td>查看序列长度</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str2 = <span class="string">&quot;xieqian cecb470&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(str2))   <span class="comment">#15</span></span><br></pre></td></tr></table></figure>

<h3 id="当循环序列为字符串时："><a href="#当循环序列为字符串时：" class="headerlink" title="当循环序列为字符串时："></a>当循环序列为字符串时：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&quot;hi class15&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> str1:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;KaiChao&quot;</span>)  <span class="comment"># 打印了10遍KaiChao</span></span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li>KaiChao被打印了10遍—-str1的长度刚好为10</li>
<li>循环次数与序列（可迭代对象)长度一致</li>
<li>i 是循环变量（既然是变量，只要符合命名规则可以随意更改）</li>
</ul>
<h3 id="当循环序列为可迭代对象时："><a href="#当循环序列为可迭代对象时：" class="headerlink" title="当循环序列为可迭代对象时："></a>当循环序列为可迭代对象时：</h3><table><tr><td bgcolor="#ADD8E6">for 循环 遍历的必须是一个可迭代对象，在Python的六大基础数据类型当中，表现为序列结构
字符串 ，列表， 元组。</td></tr></table>

<blockquote>
<p>数值？—&gt;不是序列结构,不是可迭代对象<br>解决：有没有数值的可迭代对象？—–&gt; range()函数</p>
</blockquote>
<p>注意：</p>
<ul>
<li>range()函数   左闭右开区间，结束位要+1</li>
<li>range(n,m) 就可以生成 n ~ m 之间的正数可迭代对象</li>
<li>range(起始,结束,步长)</li>
</ul>
<table><tr><td bgcolor="#FFC0CB">需求：打印1 ~10， 不用while循环</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num = <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> num:</span><br><span class="line">    <span class="built_in">print</span>(i)  <span class="comment"># 能够取到10</span></span><br></pre></td></tr></table></figure>

<table><tr><td bgcolor="#FFC0CB">需求：生成 1~100的偶数---->2的倍数--->能够被2整除</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#法一</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">101</span>):</span><br><span class="line">    <span class="comment"># 判断是否为偶数，判断余数是否为0</span></span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:   <span class="comment"># i % 2 取余，如果余数是0，就说明能够整除</span></span><br><span class="line">        <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#法二</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,<span class="number">101</span>, <span class="number">2</span>):</span><br><span class="line">    <span class="comment">#如果从1开始，则生成 1~100的奇数</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure>

<h3 id="for-嵌套："><a href="#for-嵌套：" class="headerlink" title="for 嵌套："></a>for 嵌套：</h3><table><tr><td bgcolor="#ADD8E6">首先执行外层循环第一遍，内层循环结束，开始外层循环第二遍。</td></tr></table>

<table><tr><td bgcolor="#FFC0CB">需求：按每月4周，每周7天打印日历表 </td></tr></table>

<p>用while循环实现：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">week = <span class="number">1</span>  <span class="comment"># 初始化周数</span></span><br><span class="line"><span class="keyword">while</span> week &lt;= <span class="number">4</span>:</span><br><span class="line">    day = <span class="number">1</span>  <span class="comment"># 初始化天数</span></span><br><span class="line">    <span class="keyword">while</span> day &lt;= <span class="number">7</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;第<span class="subst">&#123;week&#125;</span>周,第<span class="subst">&#123;day&#125;</span>天&quot;</span>)</span><br><span class="line">        day += <span class="number">1</span>  <span class="comment"># 自增条件</span></span><br><span class="line">    week += <span class="number">1</span>  <span class="comment"># week = week + 1</span></span><br></pre></td></tr></table></figure>

<p>用for循环实现：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> week <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">5</span>):  <span class="comment"># 确定week的循环范围---外层</span></span><br><span class="line">    <span class="keyword">for</span> day <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">8</span>):  <span class="comment"># 确定day的范围---内层</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;第<span class="subst">&#123;week&#125;</span>周,第<span class="subst">&#123;day&#125;</span>天&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="列表-："><a href="#列表-：" class="headerlink" title="列表 ："></a>列表 ：</h2><h3 id="语法结构："><a href="#语法结构：" class="headerlink" title="语法结构："></a>语法结构：</h3><table><tr><td bgcolor="#ADD8E6">变量名 = [值一，值二，.....]</td></tr></table>

<p>cls15 &#x3D; [“Guf”, “dy”, “sj”, [“lh”, “Gaof”], 18]</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = [<span class="string">&quot;lh&quot;</span>, <span class="string">&quot;Gaof&quot;</span>]  <span class="comment"># 一个整体</span></span><br><span class="line">cls14 = [<span class="string">&quot;Guf&quot;</span>, <span class="string">&quot;dy&quot;</span>, <span class="string">&quot;sj&quot;</span>, a, <span class="number">18</span>]</span><br><span class="line">cls15 = [<span class="string">&quot;Guf&quot;</span>, <span class="string">&quot;dy&quot;</span>, <span class="string">&quot;sj&quot;</span>, [<span class="string">&quot;lh&quot;</span>, <span class="string">&quot;Gaof&quot;</span>], <span class="number">18</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(cls15))  <span class="comment"># list</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(cls14))  <span class="comment"># 5</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(cls15))  <span class="comment"># 5</span></span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li>列表也叫 list</li>
<li>使用中括号进行包裹，元素与元素之间使用逗号进行隔开</li>
<li>列表里面的值（元素）,可以是任意的数据类型</li>
<li>列表里面的列表或者元组、字典、集合，都要看成一个整体</li>
</ul>
<p>强制转换：字符串—&gt;列表</p>
<table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>list(序列)</td>
<td>会将序列里面的每一个元素都进行拆分</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list2 = <span class="built_in">list</span>(<span class="string">&quot;suntao&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(list2))</span><br><span class="line"><span class="built_in">print</span>(list2)</span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601184342.png"></p>
<h3 id="列表索引-："><a href="#列表索引-：" class="headerlink" title="列表索引  ："></a>列表索引  ：</h3><table><tr><td bgcolor="#ADD8E6">与字符串规则一致</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cls15 = [<span class="string">&quot;Guf&quot;</span>, <span class="string">&quot;dy&quot;</span>, <span class="string">&quot;sj&quot;</span>, [<span class="string">&quot;lh&quot;</span>, <span class="string">&quot;Gaof&quot;</span>], <span class="number">18</span>]</span><br><span class="line"><span class="built_in">print</span>(cls15[<span class="number">0</span>])    <span class="comment">#Guf</span></span><br><span class="line"><span class="built_in">print</span>(cls15[-<span class="number">1</span>])    <span class="comment">#18</span></span><br><span class="line"><span class="built_in">print</span>(cls15[<span class="number">2</span>: <span class="number">5</span>])    <span class="comment">#[&#x27;sj&#x27;, [&#x27;lh&#x27;, &#x27;Gaof&#x27;], 18]</span></span><br><span class="line">li = cls15[<span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(li[<span class="number">1</span>])      <span class="comment">#Gaof</span></span><br><span class="line"><span class="built_in">print</span>(cls15[<span class="number">3</span>][<span class="number">0</span>])  <span class="comment"># 首先取出列表组合，然后再从列表组合里面用索引取值,lh</span></span><br></pre></td></tr></table></figure>



<h3 id="列表的增加："><a href="#列表的增加：" class="headerlink" title="列表的增加："></a>列表的增加：</h3><table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>list.append(元素)</td>
<td>在列表末尾添加元素</td>
</tr>
<tr>
<td>list.insert(索引,元素)</td>
<td>指定位置添加</td>
</tr>
<tr>
<td>list.extent(序列)</td>
<td>添加多个</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cls15 = [<span class="string">&quot;晓军董事&quot;</span>, <span class="string">&quot;落落经理&quot;</span>, <span class="string">&quot;大侠人事&quot;</span>, <span class="string">&quot;达龙搬砖人&quot;</span>]</span><br><span class="line">cls15.append(<span class="string">&quot;韩摸鱼&quot;</span>)</span><br><span class="line">cls15.append(<span class="string">&quot;咯摸鱼&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(cls15)     <span class="comment">#[&#x27;晓军董事&#x27;, &#x27;落落经理&#x27;, &#x27;大侠人事&#x27;, &#x27;达龙搬砖人&#x27;, &#x27;韩摸鱼&#x27;, &#x27;咯摸鱼&#x27;]</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cls15 = [<span class="string">&quot;晓军董事&quot;</span>, <span class="string">&quot;落落经理&quot;</span>, <span class="string">&quot;大侠人事&quot;</span>, <span class="string">&quot;达龙搬砖人&quot;</span>]</span><br><span class="line"><span class="comment"># 董事长后面加一个秘书</span></span><br><span class="line">cls15.insert(<span class="number">1</span>, <span class="string">&quot;搞钱小秘书&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(cls15)       <span class="comment">#[&#x27;晓军董事&#x27;, &#x27;搞钱小秘书&#x27;, &#x27;落落经理&#x27;, &#x27;大侠人事&#x27;, &#x27;达龙搬砖人&#x27;]</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cls15 = [<span class="string">&quot;晓军董事&quot;</span>, <span class="string">&quot;落落经理&quot;</span>, <span class="string">&quot;大侠人事&quot;</span>, <span class="string">&quot;达龙搬砖人&quot;</span>]</span><br><span class="line"><span class="comment"># 招进来一批员工</span></span><br><span class="line">li2 = [<span class="string">&quot;周密&quot;</span>, <span class="string">&quot;永强&quot;</span>, <span class="string">&quot;熠钟&quot;</span>, <span class="string">&quot;文豪&quot;</span>]</span><br><span class="line">cls15.extend(li2)  <span class="comment"># 可以添加多个，熠个体形式加人</span></span><br><span class="line">cls15.append(li2)  <span class="comment"># 只能添加一个，所以是整个列表</span></span><br><span class="line"><span class="built_in">print</span>(cls15)</span><br><span class="line"><span class="comment">#[&#x27;晓军董事&#x27;, &#x27;落落经理&#x27;, &#x27;大侠人事&#x27;, &#x27;达龙搬砖人&#x27;, &#x27;周密&#x27;, &#x27;永强&#x27;, &#x27;熠钟&#x27;, &#x27;文豪&#x27;, [&#x27;周密&#x27;, &#x27;永强&#x27;, &#x27;熠钟&#x27;, &#x27;文豪&#x27;]]</span></span><br></pre></td></tr></table></figure>

<h3 id="列表查找："><a href="#列表查找：" class="headerlink" title="列表查找："></a>列表查找：</h3><table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>”元素1“ in 列表名</td>
<td>判断是否在序列里面</td>
</tr>
<tr>
<td>”元素1“ not in 列表名</td>
<td>判断是否不在序列里面</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">big_cls15 =[<span class="string">&#x27;晓军董事&#x27;</span>, <span class="string">&#x27;搞钱小秘书&#x27;</span>, <span class="string">&#x27;落落经理&#x27;</span>, <span class="string">&#x27;大侠人事&#x27;</span>, <span class="string">&#x27;达龙搬砖人&#x27;</span>, <span class="string">&#x27;韩摸鱼&#x27;</span>, <span class="string">&#x27;咯摸鱼&#x27;</span>, <span class="string">&#x27;周密&#x27;</span>, <span class="string">&#x27;永强&#x27;</span>, <span class="string">&#x27;熠钟&#x27;</span>, <span class="string">&#x27;文豪&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;晓军&quot;</span> <span class="keyword">in</span> big_cls15)  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;晓军董事&quot;</span> <span class="keyword">in</span> big_cls15)  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;王老五&quot;</span> <span class="keyword">in</span> big_cls15)  <span class="comment"># False</span></span><br></pre></td></tr></table></figure>

<h3 id="列表的修改："><a href="#列表的修改：" class="headerlink" title="列表的修改："></a>列表的修改：</h3><table><tr><td bgcolor="#ADD8E6">思路：修改需要先找到再修改，查找这个动作通过索引，修改这个动作通过变量名重复，新值覆盖旧值</td></tr></table>

<table><tr><td bgcolor="#FFC0CB">语法： list[索引] = 新值 </td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">big_cls15 =[<span class="string">&#x27;晓军董事&#x27;</span>, <span class="string">&#x27;搞钱小秘书&#x27;</span>, <span class="string">&#x27;落落经理&#x27;</span>, <span class="string">&#x27;大侠人事&#x27;</span>, <span class="string">&#x27;达龙搬砖人&#x27;</span>, <span class="string">&#x27;韩摸鱼&#x27;</span>, <span class="string">&#x27;咯摸鱼&#x27;</span>, <span class="string">&#x27;周密&#x27;</span>, <span class="string">&#x27;永强&#x27;</span>, <span class="string">&#x27;熠钟&#x27;</span>, <span class="string">&#x27;文豪&#x27;</span>]</span><br><span class="line"><span class="comment">#将晓军董事更换为 晓军董事长</span></span><br><span class="line">xj = big_cls15[<span class="number">0</span>]</span><br><span class="line">xj = <span class="string">&quot;晓军董事长&quot;</span></span><br><span class="line"><span class="built_in">print</span>(xj)</span><br></pre></td></tr></table></figure>

<p>或者：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">big_cls15 =[<span class="string">&#x27;晓军董事&#x27;</span>, <span class="string">&#x27;搞钱小秘书&#x27;</span>, <span class="string">&#x27;落落经理&#x27;</span>, <span class="string">&#x27;大侠人事&#x27;</span>, <span class="string">&#x27;达龙搬砖人&#x27;</span>, <span class="string">&#x27;韩摸鱼&#x27;</span>, <span class="string">&#x27;咯摸鱼&#x27;</span>, <span class="string">&#x27;周密&#x27;</span>, <span class="string">&#x27;永强&#x27;</span>, <span class="string">&#x27;熠钟&#x27;</span>, <span class="string">&#x27;文豪&#x27;</span>]</span><br><span class="line"><span class="comment"># 结合使用：一步到位</span></span><br><span class="line">big_cls15[<span class="number">0</span>] = <span class="string">&quot;晓军董事长&quot;</span></span><br><span class="line"><span class="built_in">print</span>(big_cls15)</span><br></pre></td></tr></table></figure>

<h3 id="列表的删除："><a href="#列表的删除：" class="headerlink" title="列表的删除："></a>列表的删除：</h3><table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>list.pop()</td>
<td>默认删除最后一位</td>
</tr>
<tr>
<td>list.pop(索引)</td>
<td>指定索引删除</td>
</tr>
<tr>
<td>list.remove()</td>
<td>指定元素删除</td>
</tr>
<tr>
<td>list.clear()</td>
<td>清空列表里面的元素，列表存在</td>
</tr>
<tr>
<td>del list</td>
<td>删除列表对象,列表不存在</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">big_cls15 =[<span class="string">&#x27;晓军董事长&#x27;</span>, <span class="string">&#x27;搞钱小秘书&#x27;</span>, <span class="string">&#x27;落落经理&#x27;</span>, <span class="string">&#x27;大侠人事&#x27;</span>, <span class="string">&#x27;达龙搬砖人&#x27;</span>, <span class="string">&#x27;韩摸鱼&#x27;</span>, <span class="string">&#x27;咯摸鱼&#x27;</span>, <span class="string">&#x27;周密&#x27;</span>, <span class="string">&#x27;永强&#x27;</span>, <span class="string">&#x27;熠钟&#x27;</span>, <span class="string">&#x27;文豪&#x27;</span>]</span><br><span class="line">big_cls15.pop()   </span><br><span class="line"><span class="comment">#[&#x27;晓军董事长&#x27;, &#x27;搞钱小秘书&#x27;, &#x27;落落经理&#x27;, &#x27;大侠人事&#x27;, &#x27;达龙搬砖人&#x27;, &#x27;韩摸鱼&#x27;, &#x27;咯摸鱼&#x27;, &#x27;周密&#x27;, &#x27;永强&#x27;, &#x27;熠钟&#x27;] </span></span><br><span class="line"><span class="built_in">print</span>(big_cls15)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">big_cls15 =[<span class="string">&#x27;晓军董事长&#x27;</span>, <span class="string">&#x27;搞钱小秘书&#x27;</span>, <span class="string">&#x27;落落经理&#x27;</span>, <span class="string">&#x27;大侠人事&#x27;</span>, <span class="string">&#x27;达龙搬砖人&#x27;</span>, <span class="string">&#x27;韩摸鱼&#x27;</span>, <span class="string">&#x27;咯摸鱼&#x27;</span>, <span class="string">&#x27;周密&#x27;</span>, <span class="string">&#x27;永强&#x27;</span>, <span class="string">&#x27;熠钟&#x27;</span>, <span class="string">&#x27;文豪&#x27;</span>]</span><br><span class="line">big_cls15.pop(-<span class="number">2</span>)  <span class="comment"># 指定删除倒数第二个</span></span><br><span class="line"><span class="built_in">print</span>(big_cls15)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">big_cls15 =[<span class="string">&#x27;晓军董事长&#x27;</span>, <span class="string">&#x27;搞钱小秘书&#x27;</span>, <span class="string">&#x27;落落经理&#x27;</span>, <span class="string">&#x27;大侠人事&#x27;</span>, <span class="string">&#x27;达龙搬砖人&#x27;</span>, <span class="string">&#x27;韩摸鱼&#x27;</span>, <span class="string">&#x27;咯摸鱼&#x27;</span>, <span class="string">&#x27;周密&#x27;</span>, <span class="string">&#x27;永强&#x27;</span>, <span class="string">&#x27;熠钟&#x27;</span>, <span class="string">&#x27;文豪&#x27;</span>]</span><br><span class="line">big_cls15.remove(<span class="string">&quot;韩摸鱼&quot;</span>)   <span class="comment">#[&#x27;晓军董事长&#x27;, &#x27;搞钱小秘书&#x27;, &#x27;落落经理&#x27;, &#x27;大侠人事&#x27;, &#x27;达龙搬砖人&#x27;, &#x27;咯摸鱼&#x27;, &#x27;周密&#x27;, &#x27;永强&#x27;, &#x27;熠钟&#x27;, &#x27;文豪&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(big_cls15)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">big_cls15 =[<span class="string">&#x27;晓军董事长&#x27;</span>, <span class="string">&#x27;搞钱小秘书&#x27;</span>, <span class="string">&#x27;落落经理&#x27;</span>, <span class="string">&#x27;大侠人事&#x27;</span>, <span class="string">&#x27;达龙搬砖人&#x27;</span>, <span class="string">&#x27;韩摸鱼&#x27;</span>, <span class="string">&#x27;咯摸鱼&#x27;</span>, <span class="string">&#x27;周密&#x27;</span>, <span class="string">&#x27;永强&#x27;</span>, <span class="string">&#x27;熠钟&#x27;</span>, <span class="string">&#x27;文豪&#x27;</span>]</span><br><span class="line">big_cls15.clear()    <span class="comment">#[]</span></span><br><span class="line"><span class="built_in">print</span>(big_cls15)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">big_cls15 =[<span class="string">&#x27;晓军董事长&#x27;</span>, <span class="string">&#x27;搞钱小秘书&#x27;</span>, <span class="string">&#x27;落落经理&#x27;</span>, <span class="string">&#x27;大侠人事&#x27;</span>, <span class="string">&#x27;达龙搬砖人&#x27;</span>, <span class="string">&#x27;韩摸鱼&#x27;</span>, <span class="string">&#x27;咯摸鱼&#x27;</span>, <span class="string">&#x27;周密&#x27;</span>, <span class="string">&#x27;永强&#x27;</span>, <span class="string">&#x27;熠钟&#x27;</span>, <span class="string">&#x27;文豪&#x27;</span>]</span><br><span class="line"><span class="keyword">del</span> big_cls15</span><br><span class="line"><span class="built_in">print</span>(big_cls15)   <span class="comment">#报错，name &#x27;big_cls15&#x27; is not defined</span></span><br></pre></td></tr></table></figure>

<h3 id="列表推导式："><a href="#列表推导式：" class="headerlink" title="列表推导式："></a>列表推导式：</h3><table><tr><td bgcolor="#ADD8E6">[要添加到列表里面的元素  for  循环变量  in  可迭代对象  if  条件]</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">li = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">    li.append(i)</span><br><span class="line"><span class="built_in">print</span>(li)    <span class="comment">#[1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#[要添加到列表里面的元素  for  循环变量  in  可迭代对象  if  条件]</span></span><br><span class="line">li2 = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>) <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(li2)    <span class="comment">#[1, 3, 5, 7, 9]</span></span><br></pre></td></tr></table></figure>

<h3 id="其他方法："><a href="#其他方法：" class="headerlink" title="其他方法："></a>其他方法：</h3><table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>count(元素)</td>
<td>计算元素个数</td>
</tr>
<tr>
<td>reverse()</td>
<td>将列表反向并没有反序的功能</td>
</tr>
<tr>
<td>sort()</td>
<td>对列表中元素进行排序，默认就是顺序</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">li4 = [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">80</span>]</span><br><span class="line"><span class="built_in">print</span>(li4.count(<span class="number">60</span>))  <span class="comment">#3</span></span><br><span class="line"><span class="built_in">print</span>(li4.count(<span class="number">70</span>))   <span class="comment">#1</span></span><br><span class="line"><span class="built_in">print</span>(li4.count(<span class="number">80</span>))    <span class="comment">#3</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#li4 = [60, 70, 80, 90, 100, 60, 60, 80, 80]</span></span><br><span class="line">li4 = [<span class="string">&#x27;晓军董事&#x27;</span>, <span class="string">&#x27;搞钱小秘书&#x27;</span>, <span class="string">&#x27;落落经理&#x27;</span>, <span class="string">&#x27;大侠人事&#x27;</span>, <span class="string">&#x27;达龙搬砖人&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(li4.reverse())  <span class="comment"># None  他是在原来的基础上进行反向输出</span></span><br><span class="line"><span class="built_in">print</span>(li4)  <span class="comment">#需要打印的是原来的列表</span></span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601213606.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">li4 = [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">80</span>]</span><br><span class="line"><span class="comment">#li4 = [&#x27;晓军董事&#x27;, &#x27;搞钱小秘书&#x27;, &#x27;落落经理&#x27;, &#x27;大侠人事&#x27;, &#x27;达龙搬砖人&#x27;]  #好像只能排数字</span></span><br><span class="line"><span class="built_in">print</span>(li4.sort())  <span class="comment"># None 他是在原来的基础上进行排序（顺序）</span></span><br><span class="line"><span class="built_in">print</span>(li4)    <span class="comment">#需要打印的是原来的列表</span></span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601214004.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">li4 = [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">80</span>]</span><br><span class="line"><span class="comment">#li4.sort(reverse=True)  # 逆序，[100, 90, 80, 80, 80, 70, 60, 60, 60]</span></span><br><span class="line">li4.sort(reverse=<span class="literal">False</span>)  <span class="comment"># 顺序,默认就是False顺序，[60, 60, 60, 70, 80, 80, 80, 90, 100]</span></span><br><span class="line"><span class="built_in">print</span>(li4)</span><br></pre></td></tr></table></figure>



<h2 id="元组"><a href="#元组" class="headerlink" title="元组 :"></a>元组 :</h2><h3 id="语法结构：-1"><a href="#语法结构：-1" class="headerlink" title="语法结构："></a>语法结构：</h3><table><tr><td bgcolor="#ADD8E6">变量名 = (值一，值二，.....)</td></tr></table>

<p>tu &#x3D; (1, 2, 3, 4)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tu = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(tu))    <span class="comment">#&lt;class &#x27;tuple&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line">li = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">li1 = <span class="built_in">tuple</span>(li)</span><br><span class="line"><span class="built_in">print</span>(li1)    <span class="comment">#(1, 2, 3, 4)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(li1))    <span class="comment">#&lt;class &#x27;tuple&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li>元组也叫 tuple</li>
<li>元组：类似列表，不同之处在于元组的元素不可修改，元组使用小括号包含元素</li>
<li>元组叫不可变的序列结构，或者说叫不可变的列表</li>
<li>强制转换：字符串—&gt;列表与字符串—&gt;元组，唯一的区别就是[]变成了()</li>
<li>单个元素一定要加上逗号</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tu1 = (<span class="string">&quot;Y&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(tu1))   <span class="comment">#&lt;class &#x27;str&#x27;&gt;</span></span><br><span class="line">tu2 = ()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(tu2))    <span class="comment">#&lt;class &#x27;tuple&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tu1 = (<span class="string">&quot;Y&quot;</span>,)  <span class="comment"># 单个元素使用逗号声明类型</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(tu1))   <span class="comment">#&lt;class &#x27;tuple&#x27;&gt;</span></span><br><span class="line">tu2 = <span class="built_in">tuple</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(tu2))    <span class="comment">#&lt;class &#x27;tuple&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="元组拆包"><a href="#元组拆包" class="headerlink" title="元组拆包:"></a>元组拆包:</h3><table><tr><td bgcolor="#ADD8E6">拆包：元组可以同时赋值给多个变量，只要变量个数不超过元组长度，变量前面加上* 号则可以将多于元素都接受，并返回一个列表    </td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tu = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line">a, b, c = tu</span><br><span class="line"><span class="built_in">print</span>(a, b, c)  <span class="comment">#元组的变量与元素的数目不一致会报错，需要*号解决</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tu = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line"><span class="comment">#  3个变量, 会多出3个元素</span></span><br><span class="line"><span class="comment"># 按顺序拿去，发现会多三个，那么有*的拿4个</span></span><br><span class="line">a, b, *c = tu  <span class="comment">#</span></span><br><span class="line"><span class="built_in">print</span>(a, b, c)    <span class="comment">#1 2 [3, 4, 5, 6]</span></span><br><span class="line"></span><br><span class="line">a, *b, c = tu</span><br><span class="line"><span class="built_in">print</span>(a, b, c)    <span class="comment">#1 [2, 3, 4, 5] 6</span></span><br><span class="line"></span><br><span class="line">*a, b, c = tu</span><br><span class="line"><span class="built_in">print</span>(a, b, c)     <span class="comment">#[1, 2, 3, 4] 5 6</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python理论</tag>
      </tags>
  </entry>
  <entry>
    <title>函数</title>
    <url>/2023/05/06/python%E7%90%86%E8%AE%BA/%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<p>python的第六节课笔记（基础提升）</p>
<span id="more"></span>

<table><tr><td bgcolor="#ADD8E6">函数：一个可以重复使用的，用于实现单一或者相关功能的代码块。
    </td></tr></table>

<h2 id="语法结构："><a href="#语法结构：" class="headerlink" title="语法结构："></a>语法结构：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def 函数名():</span><br><span class="line">    函数体代码块(你想要完成的具体功能)</span><br><span class="line">    </span><br><span class="line">函数名()  # 函数的调用</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li>def 用于定义函数的关键字</li>
<li>函数只有在调用了之后才会执行</li>
<li>函数名和变量名一样都是标识符，命名规则一致</li>
<li>函数名和变量名一样，可以进行互相传递</li>
<li>变量名重复会覆盖掉原来的值</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#函数名和变量名一样，可以进行互相传递</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span></span><br><span class="line">wy = a</span><br><span class="line"><span class="built_in">print</span>(wy)  <span class="comment"># wy = a = 10 , wy的值为10， 变量的值可以互相传递</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">qc</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;今天在上课&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(qc)  <span class="comment"># 直接打印函数名， 返回的是qc函数在内存当中的地址</span></span><br><span class="line">xq = qc  <span class="comment"># 传递的函数名，不许要加括号！！！</span></span><br><span class="line"><span class="built_in">print</span>(xq)  <span class="comment"># 打印的结果与qc一致，说明就是同一个东西</span></span><br><span class="line"><span class="comment">#&lt;function qc at 0x000002213F773E20&gt;</span></span><br><span class="line"><span class="comment">#&lt;function qc at 0x000002213F773E20&gt;</span></span><br><span class="line">qc()  <span class="comment">#今天在上课</span></span><br><span class="line">xq()   <span class="comment">#今天在上课</span></span><br></pre></td></tr></table></figure>

<p>这是一个判断是不是手机号的代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    number = <span class="built_in">input</span>(<span class="string">&quot;请输入一个电话号码：&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> number[<span class="number">0</span>] != <span class="string">&quot;1&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;不是1开头&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(number) != <span class="number">11</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;长度不是11位&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="keyword">not</span> number.isdigit():  <span class="comment"># 不是纯数字</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;不是纯数字&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;是一个手机号！！&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span>  <span class="comment"># 正确的时候结束循环</span></span><br></pre></td></tr></table></figure>

<p>现在把它定义为一个判断电话号码的函数;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_tel</span>():  <span class="comment"># 定义一个判断电话号码的函数</span></span><br><span class="line">    number = <span class="built_in">input</span>(<span class="string">&quot;请输入一个电话号码：&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> number[<span class="number">0</span>] != <span class="string">&quot;1&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;不是1开头&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(number) != <span class="number">11</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;长度不是11位&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="keyword">not</span> number.isdigit():  <span class="comment"># 不是纯数字</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;不是纯数字&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;是一个手机号！！&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">is_tel()</span><br></pre></td></tr></table></figure>

<h2 id="返回值："><a href="#返回值：" class="headerlink" title="返回值："></a>返回值：</h2><table>
<thead>
<tr>
<th>语法</th>
<th>关键字</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>return 想要返回的值</td>
<td>return</td>
<td>回函数体里面的值</td>
</tr>
</tbody></table>
<p>注意：</p>
<ul>
<li>返回的位置： 函数的调用处</li>
<li>返回值可以使用变量接收。 变量 &#x3D; 函数名()</li>
</ul>
<table><tr><td bgcolor="#FFC0CB">需求：完成两个数的相加，并且获取到结果</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">my_sum</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    求和函数</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    he = <span class="number">4</span> + <span class="number">28</span></span><br><span class="line">    <span class="keyword">return</span> he</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = my_sum()</span><br><span class="line"><span class="built_in">print</span>(res)   <span class="comment">#32</span></span><br><span class="line"><span class="built_in">print</span>(my_sum())   <span class="comment">#32</span></span><br></pre></td></tr></table></figure>

<p>上面存在的BUG: 只能求固定值的和<br>目的：让函数变得更加灵活，可以求任意两个数的和<br>方法：给函数增加参数</p>
<h2 id="必备参数："><a href="#必备参数：" class="headerlink" title="必备参数："></a>必备参数：</h2><p>形参：变量的名字写在函数定义处<br>实参：变量的值写在函数的调用处</p>
<table><tr><td bgcolor="#FFC0CB">需求：求任意数的和</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#只需要通过传递不同的参数就可以完成不同数的求和</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_sum</span>(<span class="params">a, b</span>):  <span class="comment">#形参</span></span><br><span class="line">    he = a + b</span><br><span class="line">    <span class="keyword">return</span> he</span><br><span class="line"></span><br><span class="line">res = my_sum(<span class="number">4</span>, <span class="number">28</span>)   <span class="comment">#实参</span></span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment">#32</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#只需要用户通过传递不同的参数就可以完成不同数的求和</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_sum</span>(<span class="params">a, b</span>):  <span class="comment">#形参</span></span><br><span class="line">    he = a + b</span><br><span class="line">    <span class="keyword">return</span> he</span><br><span class="line"></span><br><span class="line">c = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数：&quot;</span>))</span><br><span class="line">d = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数：&quot;</span>))</span><br><span class="line">res = my_sum(c, d)   <span class="comment">#实参</span></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li>形参与实参是一一对应原则</li>
<li>用实参给形参传递具体的值的过程称为–&gt;传参</li>
</ul>
<h2 id="默认值参数："><a href="#默认值参数：" class="headerlink" title="默认值参数："></a>默认值参数：</h2><p>BUG: 在必备参数中，形参和实参个数不一致，会报错</p>
<table><tr><td bgcolor="#FFC0CB">需求：定义一个函数，将两数之和默认增加100（可以指定增加的值）之后返回</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#end=&quot;_&quot;和sep=&quot;$&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)  <span class="comment"># 没有指定sep，使用默认的空格</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, end=<span class="string">&quot;_&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, sep=<span class="string">&quot;$&quot;</span>)  <span class="comment"># 指定sep为 $ , 值与值之间使用$进行隔开</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">my_sum</span>(<span class="params">a, b, c =<span class="number">100</span></span>):</span><br><span class="line">    he = a + b + c</span><br><span class="line">    <span class="keyword">return</span> he</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(my_sum(<span class="number">10</span>,<span class="number">20</span>))  <span class="comment"># 没有给C传值，使用默认的100,130</span></span><br><span class="line"><span class="built_in">print</span>(my_sum(<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>))  <span class="comment"># 给C传了值，使用的是传递进去的30,60</span></span><br></pre></td></tr></table></figure>

<h2 id="不定长参数："><a href="#不定长参数：" class="headerlink" title="不定长参数："></a>不定长参数：</h2><p>不定长参数： 可以传入也可以不传入，不传入时默认为空元组和空字典</p>
<table>
<thead>
<tr>
<th>没有指定名称的参数</th>
<th>*args</th>
<th>以元组的形式进行接收</th>
</tr>
</thead>
<tbody><tr>
<td>指定了名称的参数</td>
<td>**kwargs</td>
<td>以字典的形式接收多余的参数</td>
</tr>
</tbody></table>
 <table><tr><td bgcolor="#ADD8E6">指定名称：在函数的调用处以【变量名 = 值 】形式进行传参就叫做指定参数的名称。</td></tr></table>   

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">my_sum</span>(<span class="params">a, b, *args, **kwargs</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;a的值&quot;</span>, a)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;b的值&quot;</span>, b)  <span class="comment"># a 和 b 一一对应拿了前面的 1 和 2</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;args的值&quot;</span>, args)  <span class="comment"># 3 4 5 没有指定名称</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;kwargs的值&quot;</span>, kwargs)</span><br><span class="line"></span><br><span class="line">res = my_sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, jy=<span class="string">&quot;小鲸鱼&quot;</span>, gq=<span class="string">&quot;搞钱小秘书&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 没有返回值， None</span></span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230602101551.png"></p>
<table><tr><td bgcolor="#FFC0CB">需求：任意数求和</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如何把 args 的值一个一个拿出来？</span></span><br><span class="line">   <span class="comment"># 方法一：对应元素个数的变量进行拆包</span></span><br><span class="line">   <span class="comment"># 方法二：for 循环</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_sum</span>(<span class="params">*args</span>):</span><br><span class="line">    <span class="built_in">print</span>(args)</span><br><span class="line">    he = <span class="number">0</span>  <span class="comment"># 初始化和为0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> args:</span><br><span class="line">        he += i</span><br><span class="line">    <span class="keyword">return</span> he</span><br><span class="line"></span><br><span class="line">r = my_sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line"><span class="built_in">print</span>(r)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]))  <span class="comment"># Python自带的，sum函数，对序列里面的元素进行求和</span></span><br></pre></td></tr></table></figure>

<h2 id="参数的顺序："><a href="#参数的顺序：" class="headerlink" title="参数的顺序："></a>参数的顺序：</h2><p>定义函数参数的时候,参数优先级： <strong>必备参数 &gt; 默认值参数 &gt; 不定长参数</strong><br>注意：</p>
<ul>
<li>指定名称的放在没有指定名称的后面</li>
<li>不要和默认值参数名字一致</li>
</ul>
<h2 id="return-函数补充："><a href="#return-函数补充：" class="headerlink" title="return 函数补充："></a>return 函数补充：</h2>   <table><tr><td bgcolor="#ADD8E6">return 具有结束函数的功能，return后面的代码不再执行。</td></tr></table>   

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fun1</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(fun1())  <span class="comment">#1</span></span><br></pre></td></tr></table></figure>

<h2 id="作用域："><a href="#作用域：" class="headerlink" title="作用域："></a>作用域：</h2> <table><tr><td bgcolor="#ADD8E6">一般情况下，看到缩进就要想到作用域的概念。</td></tr></table>   

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fun2</span>():</span><br><span class="line">    a = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">fun2()</span><br><span class="line">a += <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(a)   <span class="comment">#报错，函数有作用域，外面无法调用</span></span><br></pre></td></tr></table></figure>

 <table><tr><td bgcolor="#ADD8E6">但是注意：if条件和循环没有作用域的概念。</td></tr></table>   

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">    a = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a)  <span class="comment">#10</span></span><br></pre></td></tr></table></figure>

<h2 id="函数作用域："><a href="#函数作用域：" class="headerlink" title="函数作用域："></a>函数作用域：</h2><table>
<thead>
<tr>
<th>local</th>
<th>局部作用域，即函数中定义的变量<br/>作用范围小   优先级越高</th>
</tr>
</thead>
<tbody><tr>
<td>enclosing</td>
<td>嵌套的父级函数的局部作用域<br/>相对外面来说是局部<br/>相对嵌套的子函数来说，是一个全局</td>
</tr>
<tr>
<td>global</td>
<td>全局作用域 自己定义的，写在最外面的变量<br/>作用范围大   优先级越小</td>
</tr>
<tr>
<td>build-in</td>
<td>内建作用域，不需要定义，可以直接拿来用的;</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">QuanJu = <span class="number">100</span>  <span class="comment"># 全局作用域，</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func3</span>():</span><br><span class="line">    JuBu = <span class="number">200</span>  <span class="comment"># 局部作用域</span></span><br><span class="line">    QuanJu = <span class="number">1000</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;局部&quot;</span>,JuBu)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;全局&quot;</span>, QuanJu)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;局部2号&quot;</span>, QuanJu)  <span class="comment"># 优先使用范围近的</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func4</span>():  <span class="comment"># 嵌套在fun3里面的函数</span></span><br><span class="line">        juBu_jubu = <span class="number">10</span></span><br><span class="line">        <span class="built_in">print</span>(QuanJu)  <span class="comment"># 可以访问</span></span><br><span class="line">        <span class="built_in">print</span>(JuBu)  <span class="comment"># 可以访问</span></span><br><span class="line"></span><br><span class="line">    func4()</span><br><span class="line">    <span class="comment"># print(juBu_jubu)  # 不可以访问</span></span><br><span class="line"></span><br><span class="line">func3()</span><br><span class="line"><span class="built_in">print</span>(QuanJu)</span><br><span class="line"><span class="comment">#print(JuBu)  # 外面访问不了局部作用域</span></span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230602154915.png"></p>
<p>在函数里面更改外面的值：</p>
<table>
<thead>
<tr>
<th>声明全局变量</th>
<th>global</th>
</tr>
</thead>
<tbody><tr>
<td>声明局部变量</td>
<td>nonlocal</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">QuanJu = <span class="number">100</span>  <span class="comment"># 全局作用域，</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func3</span>():</span><br><span class="line">    <span class="keyword">global</span> QuanJu  <span class="comment"># 将QuanJu当场全局变量来执行</span></span><br><span class="line">    JuBu = <span class="number">200</span></span><br><span class="line">    QuanJu += <span class="number">100</span>  <span class="comment"># QuanJu = QuanJu + 100</span></span><br><span class="line">    <span class="built_in">print</span>(QuanJu)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fun4</span>():</span><br><span class="line">        <span class="keyword">nonlocal</span> JuBu</span><br><span class="line">        JuBu += <span class="number">300</span></span><br><span class="line">        <span class="built_in">print</span>(JuBu)</span><br><span class="line"></span><br><span class="line">    fun4()</span><br><span class="line"></span><br><span class="line">func3()</span><br><span class="line"><span class="built_in">print</span>(QuanJu)</span><br><span class="line"><span class="comment">#print(JuBu)  # 外面访问不了局部作用域</span></span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230602161155.png"></p>
<h2 id="闭包："><a href="#闭包：" class="headerlink" title="闭包："></a>闭包：</h2><p>闭包最直接的作用就是可以访问外层的变量，因此可以起到函数内外沟通的桥梁。</p>
<p>注意：</p>
<ul>
<li>存在于嵌套关系的函数中</li>
<li>嵌套的内部函数引用了外部函数的变量</li>
<li>嵌套的外部函数会将内部函数名作为返回值放回</li>
<li>把调用变成了返回函数名</li>
</ul>
 <table><tr><td bgcolor="#ADD8E6">作用：对于内部数据的保护。</td></tr></table>   

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func5</span>():</span><br><span class="line">    Jubu = <span class="number">200</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func6</span>():</span><br><span class="line">        <span class="keyword">nonlocal</span> Jubu  <span class="comment"># 声明局部变量</span></span><br><span class="line">        Jubu += <span class="number">100</span></span><br><span class="line">        <span class="built_in">print</span>(Jubu)    <span class="comment">#300</span></span><br><span class="line">    <span class="comment"># func6()  # 在调用外部函数的时候，内部函数会一起执行</span></span><br><span class="line">    <span class="keyword">return</span> func6  <span class="comment"># 返回值位置为函数的调用处</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func5()</span><br><span class="line">a = func5()  <span class="comment"># a = func6</span></span><br><span class="line">a()  <span class="comment"># func6()  函数名可以像变量一样进行传递</span></span><br></pre></td></tr></table></figure>

<h2 id="递归函数："><a href="#递归函数：" class="headerlink" title="递归函数："></a>递归函数：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = <span class="number">5</span></span><br><span class="line">j = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &gt;= <span class="number">1</span>:</span><br><span class="line">    j *= i  <span class="comment">#累乘</span></span><br><span class="line">    i -= <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(j)    <span class="comment">#120</span></span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f7</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="built_in">print</span>(n)</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> n * f7(n-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">f7(<span class="number">5</span>)</span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230602163704.png"></p>
<h2 id="匿名函数："><a href="#匿名函数：" class="headerlink" title="匿名函数："></a>匿名函数：</h2><table><tr><td bgcolor="#ADD8E6">定义：lambda 参数1,参数2 ：表达式</td></tr></table>

<p>注意：</p>
<ul>
<li>lambda是定义匿名函数的关键字</li>
<li>参数：个数不一致</li>
<li>表达式：你希望这个函数要达到的目的</li>
<li>特点：不需要返回值，直接在调用的时候返回表达式的结果</li>
</ul>
 <table><tr><td bgcolor="#FFC0CB">需求：定义一个函数，传入两个参数a b，完成次方的计算，a ** b</td></tr></table>

<p>普通函数的定义及调用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">cif</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    这是一个求次方的函数</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    mi = a ** b</span><br><span class="line">    <span class="keyword">return</span> mi  <span class="comment"># 将求得的结果返回出去， 返回值的位置为函数的调用处</span></span><br><span class="line"></span><br><span class="line">mi = cif(<span class="number">5</span>, <span class="number">4</span>)  <span class="comment"># 函数只有在调用之后才会执行</span></span><br><span class="line"><span class="built_in">print</span>(mi)    <span class="comment">#625</span></span><br></pre></td></tr></table></figure>

<p>匿名函数的定义及调用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cif2 =<span class="keyword">lambda</span> x, y: x ** y</span><br><span class="line"><span class="built_in">print</span>(cif2(<span class="number">2</span>, <span class="number">4</span>))      <span class="comment">#16</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python理论</tag>
      </tags>
  </entry>
  <entry>
    <title>基本概念</title>
    <url>/2023/05/01/python%E7%90%86%E8%AE%BA/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<p>python的第一节课笔记（基础入门）</p>
<span id="more"></span>

<table><tr><td bgcolor="#ADD8E6">python当中所有的符号必须是英文状态。</td></tr></table>

<h3 id="常用快捷操作："><a href="#常用快捷操作：" class="headerlink" title="常用快捷操作："></a>常用快捷操作：</h3><table>
<thead>
<tr>
<th>ctrl + 鼠标点击函数名</th>
<th>进入函数内部</th>
</tr>
</thead>
<tbody><tr>
<td>ctrl + c</td>
<td>快速复制（选定区域复制）</td>
</tr>
<tr>
<td>ctrl + d</td>
<td>快速复制（整行复制）</td>
</tr>
<tr>
<td>ctrl + z</td>
<td>撤回</td>
</tr>
</tbody></table>
<h3 id="注释："><a href="#注释：" class="headerlink" title="注释："></a>注释：</h3><table>
<thead>
<tr>
<th>定义</th>
<th>目的是解释说明，被注释的代码不再运行</th>
</tr>
</thead>
<tbody><tr>
<td>形式</td>
<td><strong>单行注释</strong>： # 要注释的内容    <br/><strong>多行注释</strong>：三对成对的引号,不论单引号和双引号，只要成对就行。<br/><strong>快捷注释</strong>： ctrl + &#x2F;</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 要注释的内容</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">要注释的内容</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">要注释的内容</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="关键字："><a href="#关键字：" class="headerlink" title="关键字："></a>关键字：</h3><table><tr><td bgcolor="#ADD8E6">在python中具有特殊功能的英文单词称为关键字，关键字不能做变量名。</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> keyword  <span class="comment"># 导入关键字模块</span></span><br><span class="line"><span class="built_in">print</span>(keyword.kwlist)</span><br></pre></td></tr></table></figure>

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%9B%BE%E7%89%871.png"></p>
<h3 id="输入-amp-输出"><a href="#输入-amp-输出" class="headerlink" title="输入&amp;输出"></a>输入&amp;输出</h3><table><tr><td bgcolor="#ADD8E6">输出 让计算机说话，在Python中表现为打印信息</td></tr></table>

<h4 id="打印函数：print"><a href="#打印函数：print" class="headerlink" title="打印函数：print()"></a>打印函数：print()</h4><table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>print(想要打印的东西)</td>
<td>打印单个元素</td>
</tr>
<tr>
<td>print(值1,值2)</td>
<td>打印多个元素</td>
</tr>
</tbody></table>
<p>注意：</p>
<ul>
<li>每个print()都自带一个换行效果</li>
<li>并且打印多个值的时候，打印结果之间使用空格隔开</li>
<li>print(想要打印的东西),其中“想要打印的东西”，0不能作为开头</li>
<li>打印多个值，值与值之间使用逗号进行隔开</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">412</span>)    <span class="comment">#412</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">20230412</span>,<span class="number">412</span>,<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)   <span class="comment">#20230412,412,1, 2, 3, 4</span></span><br></pre></td></tr></table></figure>

<table><tr><td bgcolor="#ADD8E6">输入 对计算机下的指令，在python中表现为获取用户的输入</td></tr></table>

<h4 id="输入函数：-input"><a href="#输入函数：-input" class="headerlink" title="输入函数： input()"></a>输入函数： input()</h4><table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>input(“提示信息：”)</td>
<td>等待用户输入并回车确定</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">input</span>(<span class="string">&quot;请输入账号：&quot;</span>) </span><br><span class="line">ll = <span class="built_in">input</span>(<span class="string">&quot;请输入密码：&quot;</span>) </span><br><span class="line"><span class="built_in">print</span>(ll)</span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230530171818.png"></p>
<p>注意：</p>
<ul>
<li>会一直阻塞，等待用户输入并回车确定</li>
<li>不管输入什么，都是一个字符串类型</li>
<li>一般情况会使用变量来对输入的东西进行保存：<br>变量 &#x3D; input(“提示：”)</li>
</ul>
<h3 id="变量："><a href="#变量：" class="headerlink" title="变量："></a>变量：</h3><table>
<thead>
<tr>
<th>变量的定义</th>
<th>变量名 &#x3D; 值，即把 &#x3D; 右边的 赋给左边，其中“ &#x3D; ”为赋值符号</th>
</tr>
</thead>
<tbody><tr>
<td>变量的作用</td>
<td>保存数据</td>
</tr>
<tr>
<td>变量的引用</td>
<td>使用变量名获取变量里面保存的值</td>
</tr>
<tr>
<td>变量的赋值</td>
<td>单个变量赋予多个值   自动打包成元组<br/>        变量名1 &#x3D; 值1,值2<br/>    多变量赋予不同的值   一一对应原则<br/>        变量名1,变量名2 &#x3D; 值1,值2<br/>    多变量赋予相同的值<br/>         变量名1&#x3D;变量名2 &#x3D; 值</td>
</tr>
<tr>
<td>变量名的命名规则</td>
<td>由数字、字母、下划线组成，并且数字不能开头</td>
</tr>
</tbody></table>
<p>注意：</p>
<ul>
<li>变量名没有会报错</li>
<li>变量名重复,新值会覆盖旧值</li>
<li>变量名,函数名,模块名,类名等都是Python中的标识符，它们的命名规则一致</li>
<li>命名变量时，注意不要和已经有的函数名、关键字 重名（会覆盖掉原来的功能）</li>
<li>命名变量可以用中文，但是不推荐</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#变量的引用</span></span><br><span class="line">zz =  <span class="string">&quot;是一个黑客&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;liuliu&quot;</span>,zz)</span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230530174353.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#变量的赋值</span></span><br><span class="line"></span><br><span class="line">cls15 = <span class="string">&quot;家先生&quot;</span>, <span class="string">&quot;。。。&quot;</span>, <span class="string">&quot;小鲸鱼&quot;</span>, <span class="string">&quot;咯咯咯&quot;</span></span><br><span class="line"><span class="built_in">print</span>(cls15)</span><br><span class="line"></span><br><span class="line">hn,xq =  <span class="string">&quot;小七&quot;</span>,<span class="string">&quot;昊楠&quot;</span></span><br><span class="line"><span class="built_in">print</span>(hb,xq)  <span class="comment"># 位置一一对应</span></span><br><span class="line"><span class="comment">#hn,xq, xj =  &quot;小七&quot;,&quot;昊楠&quot;</span></span><br><span class="line"><span class="comment">#print(hn, xq, xj)  # 数量一一对应</span></span><br><span class="line"></span><br><span class="line">lg = xb = fx = hxs = <span class="string">&quot;cls15班级的一份子&quot;</span></span><br><span class="line"><span class="built_in">print</span>(lg)</span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230530175009.png"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python理论</tag>
      </tags>
  </entry>
  <entry>
    <title>字典与集合</title>
    <url>/2023/05/05/python%E7%90%86%E8%AE%BA/%E5%AD%97%E5%85%B8%E4%B8%8E%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<p>python的第五节课笔记（基础入门）</p>
<span id="more"></span>

<h2 id="散列类型："><a href="#散列类型：" class="headerlink" title="散列类型："></a>散列类型：</h2><p>在Python中，散列类型（Hashable Type）指的是一种可以作为字典（Dictionary）键值的数据类型。散列类型的特点是不可变（Immutable），即创建后不能被修改。散列类型在Python中用于支持字典的快速查找和唯一性的要求。</p>
<p>以下是Python中常见的散列类型：</p>
<ol>
<li><p>不可变的原始数据类型（Immutable Primitive Types）：包括整数（int）、浮点数（float）、布尔值（bool）和元组（tuple）等。</p>
</li>
<li><p>字符串（str）：字符串是不可变的，因此可以用作字典的键。</p>
</li>
<li><p>冻结集合（frozenset）：冻结集合是不可变的，因此可以作为字典的键。与可变集合（set）不同，冻结集合的元素不能被修改。</p>
</li>
</ol>
<p>请注意，可变的数据类型（如列表、集合和字典等）不能作为散列类型，因为它们可以在创建后进行修改，从而导致散列值发生变化，无法保证字典的一致性和查找的准确性。</p>
<p>当你尝试将一个不可散列的对象用作字典的键时，Python会引发<code>TypeError</code>异常。因此，在选择字典的键时，确保选择散列类型以保证字典的正常使用。</p>
<h2 id="字典："><a href="#字典：" class="headerlink" title="字典："></a>字典：</h2><h3 id="语法结构："><a href="#语法结构：" class="headerlink" title="语法结构："></a>语法结构：</h3><table><tr><td bgcolor="#ADD8E6">变量名 = {key0:value0 , key1:value1, key2:value2}</td></tr></table>

<p>di_cg &#x3D; {“name”: “春光”, “age”: 28, “id”: 2}</p>
<table>
<thead>
<tr>
<th>定义方式一</th>
<th>{key1:value1, key2:value2}</th>
</tr>
</thead>
<tbody><tr>
<td>定义方式二</td>
<td>dict(变量名&#x3D;值, 变量名1&#x3D;值2)</td>
</tr>
<tr>
<td>空字典</td>
<td>{}</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义方式一</span></span><br><span class="line">di_cg = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;春光&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">28</span>, <span class="string">&quot;id&quot;</span>: <span class="number">2</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(di_cg))    <span class="comment">#&lt;class &#x27;dict&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">li = [<span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>, <span class="string">&quot;id&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dict</span>(li))  </span><br><span class="line"><span class="comment">#报错，li是一个列表，它只包含字符串元素，而没有键值对的结构</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义方式二</span></span><br><span class="line">di_cg2 = <span class="built_in">dict</span>(name=<span class="string">&quot;春光&quot;</span>, age=<span class="number">28</span>, <span class="built_in">id</span>=<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(di_cg2)  </span><br><span class="line"><span class="comment">#&#123;&#x27;name&#x27;: &#x27;春光&#x27;, &#x27;age&#x27;: 28, &#x27;id&#x27;: 2&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#键必须是不可变的数据类型(int、float、str、tuple)</span></span><br><span class="line">di_cg1 = &#123;<span class="number">1</span>: <span class="string">&#x27;春光&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">28</span>, <span class="string">&#x27;id&#x27;</span>: <span class="number">2</span>&#125;</span><br><span class="line">di_cg2 = &#123;(<span class="number">1</span>,): <span class="string">&#x27;春光&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">28</span>, <span class="string">&#x27;id&#x27;</span>: <span class="number">2</span>&#125;</span><br><span class="line"><span class="comment">#di_cg2 = &#123;[1]: &#x27;春光&#x27;, &#x27;age&#x27;: 28, &#x27;id&#x27;: 2&#125;  # 报错---&gt;列表可变，不可以做键（key）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(di_cg1))   <span class="comment">#&lt;class &#x27;dict&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(di_cg2))    <span class="comment">#&lt;class &#x27;dict&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li>字典里面的元素，以键值对的形式存在</li>
<li>key:value   键值对  （将键和值使用冒号链接就叫做键值对）</li>
<li>key         键，冒号前面的</li>
<li>value       值，冒号后面的</li>
<li>键必须是不可变的数据类型(int、float、str、tuple)</li>
<li>值key是任意的数据类型</li>
<li>字典 也叫dict</li>
</ul>
<h3 id="字典的查询："><a href="#字典的查询：" class="headerlink" title="字典的查询："></a>字典的查询：</h3><table><tr><td bgcolor="#ADD8E6">字典的键必须是唯一的，如果键名重复，后面的值会覆盖掉原来的值</td></tr></table>

<table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>dict[key]</td>
<td>存在则返回键对应的值<br/>不存在则报错</td>
</tr>
<tr>
<td>dict.get(key)</td>
<td>存在则返回键对应的值<br/>不存在则返回None(空值)</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">di_96 = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;96&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">27</span>, <span class="string">&quot;id&quot;</span>: <span class="number">6</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(di_96[<span class="string">&quot;age&quot;</span>])   <span class="comment">#27</span></span><br><span class="line"><span class="comment"># print(di_96[&quot;sex&quot;])  # 没有则报错</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">di_96 = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;96&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">27</span>, <span class="string">&quot;id&quot;</span>: <span class="number">6</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(di_96.get(<span class="string">&quot;name&quot;</span>))    <span class="comment">#96</span></span><br><span class="line"><span class="built_in">print</span>(di_96.get(<span class="string">&quot;sex&quot;</span>))  <span class="comment"># 返回None，表示没有这个值</span></span><br></pre></td></tr></table></figure>



<h3 id="字典的修改："><a href="#字典的修改：" class="headerlink" title="字典的修改："></a>字典的修改：</h3><table><tr><td bgcolor="#ADD8E6">思路：先找到，再赋予新的值覆盖掉旧值</td></tr></table>   

<table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>dict[key]</td>
<td>key存在，新值覆盖旧值<br/>key不存在，新建键值对</td>
</tr>
<tr>
<td>dict.setdefault(key, 值)</td>
<td>key 存在，返回所对应的value<br/>key 不存在  新建键值对（键值对的值为指定在括号里面的第二个参数）</td>
</tr>
<tr>
<td>dict.update({k1:v1,k2:v2})</td>
<td>当键名重复的时候，可以进行一个批量替换</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">di_96 = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;96&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">27</span>, <span class="string">&quot;id&quot;</span>: <span class="number">6</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;1996&quot;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(di_96)   <span class="comment">#&#123;&#x27;name&#x27;: &#x27;1996&#x27;, &#x27;age&#x27;: 27, &#x27;id&#x27;: 6&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">di_dl = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;达龙&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">28</span>, <span class="string">&quot;id&quot;</span>: <span class="number">4</span>&#125;</span><br><span class="line">di_dl[<span class="string">&quot;age&quot;</span>] = <span class="number">26</span></span><br><span class="line">di_dl[<span class="string">&quot;sex&quot;</span>] = <span class="string">&quot;男&quot;</span></span><br><span class="line"><span class="built_in">print</span>(di_dl)     <span class="comment">#&#123;&#x27;name&#x27;: &#x27;达龙&#x27;, &#x27;age&#x27;: 26, &#x27;id&#x27;: 4, &#x27;sex&#x27;: &#x27;男&#x27;&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">di_dl = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;达龙&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">28</span>, <span class="string">&quot;id&quot;</span>: <span class="number">4</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(di_dl.setdefault(<span class="string">&quot;id&quot;</span>, <span class="number">14</span>))  <span class="comment"># 4, 原因,id存在，所以返回id对应的值--&gt;4</span></span><br><span class="line"><span class="built_in">print</span>(di_dl.setdefault(<span class="string">&quot;num&quot;</span>, <span class="number">14</span>))  <span class="comment"># 14 原因,num不存在，所以返回我们自己设定的14</span></span><br><span class="line"><span class="built_in">print</span>(di_dl)     <span class="comment">#&#123;&#x27;name&#x27;: &#x27;达龙&#x27;, &#x27;age&#x27;: 28, &#x27;id&#x27;: 4, &#x27;num&#x27;: 14&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">di_dl = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;达龙&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">28</span>, <span class="string">&quot;id&quot;</span>: <span class="number">4</span>,<span class="string">&#x27;num&#x27;</span>: <span class="number">14</span>&#125;</span><br><span class="line">di_hn = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;昊楠&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">32</span>&#125;</span><br><span class="line">di_dl.update(di_hn)</span><br><span class="line"><span class="built_in">print</span>(di_dl)    <span class="comment">#&#123;&#x27;name&#x27;: &#x27;昊楠&#x27;, &#x27;age&#x27;: 32, &#x27;id&#x27;: 4, &#x27;num&#x27;: 14&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="字典的视图方法："><a href="#字典的视图方法：" class="headerlink" title="字典的视图方法："></a>字典的视图方法：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">di_hn = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;昊楠&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">32</span>, <span class="string">&quot;id&quot;</span>:<span class="number">1</span>, <span class="string">&quot;num&quot;</span>:<span class="number">13</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(di_hn.keys())</span><br><span class="line"><span class="built_in">print</span>(di_hn.values())</span><br><span class="line"><span class="built_in">print</span>(di_hn.items())</span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230602075247.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#遍历出所有的键</span></span><br><span class="line">di_hn = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;昊楠&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">32</span>, <span class="string">&quot;id&quot;</span>:<span class="number">1</span>, <span class="string">&quot;num&quot;</span>:<span class="number">13</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> di_hn:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#遍历出所有的值</span></span><br><span class="line">di_hn = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;昊楠&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">32</span>, <span class="string">&quot;id&quot;</span>:<span class="number">1</span>, <span class="string">&quot;num&quot;</span>:<span class="number">13</span>&#125;</span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> di_hn.values():</span><br><span class="line">    <span class="built_in">print</span>(v)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">di_hn = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;昊楠&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">32</span>, <span class="string">&quot;id&quot;</span>:<span class="number">1</span>, <span class="string">&quot;num&quot;</span>:<span class="number">13</span>&#125;</span><br><span class="line"><span class="comment">#遍历出所有的键和值，items()将字典变成元组，元组可以拆包，俩个变量接收俩个元素就可以了</span></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> di_hn.items():</span><br><span class="line">    <span class="built_in">print</span>(k, v)</span><br></pre></td></tr></table></figure>

<h3 id="字典的删除："><a href="#字典的删除：" class="headerlink" title="字典的删除："></a>字典的删除：</h3><table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>dict.pop(key)</td>
<td>通过key删除键值，对 key不存在将报错</td>
</tr>
<tr>
<td>dict.popitem()</td>
<td>随机删除,本质是随机删除，&lt;br&#x2F;但是python3.6版本之后，就自动做了一个排序，表现为删除最后一个</td>
</tr>
<tr>
<td>del dict[key]</td>
<td>指定删除，对 key不存在将报错</td>
</tr>
<tr>
<td>del dict</td>
<td>删除整个字典</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">di_hn = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;昊楠&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">32</span>, <span class="string">&quot;id&quot;</span>:<span class="number">1</span>, <span class="string">&quot;num&quot;</span>:<span class="number">13</span>&#125;</span><br><span class="line">di_hn.pop(<span class="string">&quot;num&quot;</span>)</span><br><span class="line"><span class="comment"># di_hn.popitem()</span></span><br><span class="line"><span class="built_in">print</span>(di_hn)    <span class="comment">#&#123;&#x27;name&#x27;: &#x27;昊楠&#x27;, &#x27;age&#x27;: 32, &#x27;id&#x27;: 1&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">di_hn = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;昊楠&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">32</span>, <span class="string">&quot;id&quot;</span>:<span class="number">1</span>, <span class="string">&quot;num&quot;</span>:<span class="number">13</span>&#125;</span><br><span class="line">di_hn.popitem()</span><br><span class="line"><span class="built_in">print</span>(di_hn)    <span class="comment">#&#123;&#x27;name&#x27;: &#x27;昊楠&#x27;, &#x27;age&#x27;: 32, &#x27;id&#x27;: 1&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">di_hn = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;昊楠&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">32</span>, <span class="string">&quot;id&quot;</span>:<span class="number">1</span>, <span class="string">&quot;num&quot;</span>:<span class="number">13</span>&#125;</span><br><span class="line"><span class="keyword">del</span> di_hn[<span class="string">&quot;id&quot;</span>]</span><br><span class="line"><span class="comment"># del di_hn[&quot;sex&quot;]    #报错</span></span><br><span class="line"><span class="built_in">print</span>(di_hn)   <span class="comment">#&#123;&#x27;name&#x27;: &#x27;昊楠&#x27;, &#x27;age&#x27;: 32, &#x27;num&#x27;: 13&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">di_hn = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;昊楠&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">32</span>, <span class="string">&quot;id&quot;</span>:<span class="number">1</span>, <span class="string">&quot;num&quot;</span>:<span class="number">13</span>&#125;</span><br><span class="line"><span class="keyword">del</span> di_hn</span><br><span class="line"><span class="built_in">print</span>(di_hn)   <span class="comment">#删除整个字典，没有了，所以报错</span></span><br></pre></td></tr></table></figure>

<h2 id="集合"><a href="#集合" class="headerlink" title="集合:"></a>集合:</h2><h3 id="语法结构：-1"><a href="#语法结构：-1" class="headerlink" title="语法结构："></a>语法结构：</h3><table><tr><td bgcolor="#ADD8E6">变量名 = {值1 , 值2, 值3}</td></tr></table>

<p>s1 &#x3D; {1, 2, 3, 4}</p>
<p>注意：</p>
<ul>
<li>set也叫集合</li>
<li>集合里面的元素是唯一的，并且也是无序的</li>
</ul>
<h3 id="集合的运算"><a href="#集合的运算" class="headerlink" title="集合的运算:"></a>集合的运算:</h3><table>
<thead>
<tr>
<th>交集  &amp;</th>
<th>两个集合相同的元素</th>
</tr>
</thead>
<tbody><tr>
<td>并集   |</td>
<td>两个集合全部加在一起</td>
</tr>
<tr>
<td>差集  -</td>
<td>我有你没有</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">s2 = &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(s1 &amp; s2)    <span class="comment">#&#123;3, 4&#125;</span></span><br><span class="line"><span class="built_in">print</span>(s1 | s2)     <span class="comment">#&#123;1, 2, 3, 4, 5, 6&#125;</span></span><br><span class="line"><span class="built_in">print</span>(s1 - s2)  <span class="comment"># s1 有的 s2 没有的，&#123;1, 2&#125;</span></span><br><span class="line"><span class="built_in">print</span>(s2 - s1)  <span class="comment"># s2 有的 s1 没有的，&#123;5, 6&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="集合的增删改查"><a href="#集合的增删改查" class="headerlink" title="集合的增删改查:"></a>集合的增删改查:</h3><table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>set.add(元素)</td>
<td>添加单个</td>
</tr>
<tr>
<td>set.update(可迭代对象)</td>
<td>添加多个</td>
</tr>
<tr>
<td>set.pop()</td>
<td>随机删除</td>
</tr>
<tr>
<td>set.remove()</td>
<td>指定删除</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">s1.add(<span class="string">&quot;韩同学&quot;</span>)   </span><br><span class="line"><span class="built_in">print</span>(s1)   <span class="comment">##&#123;1, 2, 3, 4, &#x27;韩同学&#x27;&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">s1.add(<span class="number">1</span>)  <span class="comment"># 集合里面已经有1，去重，只能有一个</span></span><br><span class="line"><span class="built_in">print</span>(s1)   <span class="comment">#&#123;1, 2, 3, 4&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">s2 = &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">s1.update(s2)</span><br><span class="line"><span class="built_in">print</span>(s1)    <span class="comment">#&#123;1, 2, 3, 4, 5, 6&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s2 = &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">s2.pop()  <span class="comment"># 底层无序，但是对于较小的数值，会自动排序，随机一直删除的都是1</span></span><br><span class="line"><span class="built_in">print</span>(s2)    <span class="comment">#&#123;4, 5, 6&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">set1 = &#123;<span class="string">&quot;简诚&quot;</span>, <span class="string">&quot;子良&quot;</span>, <span class="string">&quot;锋&quot;</span>, <span class="string">&quot;圣文&quot;</span>&#125;</span><br><span class="line"><span class="comment">#set1.pop()   #&#123;&#x27;圣文&#x27;, &#x27;子良&#x27;, &#x27;锋&#x27;&#125;，随机删除</span></span><br><span class="line">set1.remove(<span class="string">&quot;圣文&quot;</span>)   <span class="comment">#&#123;&#x27;简诚&#x27;, &#x27;子良&#x27;, &#x27;锋&#x27;&#125;，指定删除</span></span><br><span class="line"><span class="built_in">print</span>(set1)</span><br></pre></td></tr></table></figure>

<h2 id="阶段总结"><a href="#阶段总结" class="headerlink" title="阶段总结:"></a>阶段总结:</h2><h3 id="判断"><a href="#判断" class="headerlink" title="判断:"></a>判断:</h3><table><tr><td bgcolor="#ADD8E6">判断的时候,判断的都是布尔值(True False),判断某一个数据的布尔值</td></tr></table>  

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;条件成立执行&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;条件不成立执行&quot;</span>)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>数值:</th>
<th>0 为 False<br/>其他为 True</th>
</tr>
</thead>
<tbody><tr>
<td>其他数据类型:</td>
<td>空 False<br/>但凡里面有值都是 True</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="number">1</span>))   <span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(-<span class="number">1</span>))  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(-<span class="number">1.1</span>))   <span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="number">0</span>))   <span class="comment">#False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="string">&quot;0&quot;</span>))  <span class="comment"># T 字符串里面有一个字符0，True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="string">&quot; &quot;</span>))  <span class="comment"># T 字符串里面有一个字符空格，True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="string">&quot;&quot;</span>))  <span class="comment"># F 字符串里面没有字符，False</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>([]))    <span class="comment">#False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>([<span class="number">1</span>]))  <span class="comment">#True</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#抱歉,无可查询对象，返回的是空</span></span><br><span class="line">li = []</span><br><span class="line"><span class="keyword">if</span> li:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始群发消息&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;抱歉,无可查询对象&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="六大基础数据类型总结"><a href="#六大基础数据类型总结" class="headerlink" title="六大基础数据类型总结:"></a>六大基础数据类型总结:</h3><table>
<thead>
<tr>
<th>类型</th>
<th>符号</th>
<th>特点</th>
</tr>
</thead>
<tbody><tr>
<td>数值</td>
<td>int float bool</td>
<td>不可变的非序列<br/>可以进行数学运算</td>
</tr>
<tr>
<td>字符串</td>
<td>str</td>
<td>不可变的序列<br/>可以更具索引(下标)查找值<br/>可以增删改查,但是要使用新的变量接受</td>
</tr>
<tr>
<td>元组</td>
<td>tuple</td>
<td>不可变的序列<br/>没有增删改查<br/>可以进行拆包</td>
</tr>
<tr>
<td>列表</td>
<td>list</td>
<td>可变序列<br/>增删改查</td>
</tr>
<tr>
<td>字典</td>
<td>dict</td>
<td>可变的键值对映射结构—可以快速查找<br/>增删改查</td>
</tr>
<tr>
<td>集合</td>
<td>set</td>
<td>可变的,无序求去重<br/>增删改查<br/>集合运算</td>
</tr>
</tbody></table>
<p>进一步总结：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230602084357.png"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python理论</tag>
      </tags>
  </entry>
  <entry>
    <title>文件及模块操作</title>
    <url>/2023/05/07/python%E7%90%86%E8%AE%BA/%E6%96%87%E4%BB%B6%E5%8F%8A%E6%A8%A1%E5%9D%97%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>python的第七节课笔记（基础提升）</p>
<span id="more"></span>

<p>我们之前编写代码都是用变量接收<strong>存储数据</strong>，但是变量是存在于运行内存中的，程序结束变量就被释放掉了。现在要想把程序运行的结果永久保存下来该怎么办呢？于是我们要把数据保存到<strong>文件</strong>之中。</p>
<h2 id="文件操作总览："><a href="#文件操作总览：" class="headerlink" title="文件操作总览："></a>文件操作总览：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230506130246.png"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230506130326.png"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="文件操作："><a href="#文件操作：" class="headerlink" title="文件操作："></a>文件操作：</h2><h3 id="文件的打开："><a href="#文件的打开：" class="headerlink" title="文件的打开："></a>文件的打开：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">相对路径： 相对于当前位置而言，要找到目标文件所进过的路程</span><br><span class="line">绝对路径： 从根目录（盘符）触发，要找到目标文件所进过的路程</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>open()函数语法</th>
<th>f &#x3D; open(文件路径, 操作模式, 编码方式)</th>
</tr>
</thead>
<tbody><tr>
<td>文件路径</td>
<td>相对路径：test15<br/>绝对路径：D:\LiuMupy\cls15\09文件与模块\test15.txt<br/>复制绝对路径：右击文件名—&gt;copy–&gt; Absolute Path</td>
</tr>
<tr>
<td>编码方式</td>
<td>encoding&#x3D;”utf-8”  指定编码方式</td>
</tr>
</tbody></table>
<table><tr><td bgcolor="#ADD8E6">操作模式：</td></tr></table>

<table><tr><td bgcolor="#FFC0CB">r   只读模式，不存在则报错，存在则打开</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;text.txt&quot;</span>, mode=<span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"><span class="comment"># data = f.read()  # 读取并返回所有文件内容</span></span><br><span class="line"><span class="comment"># data = f.readline()  # 读取并返回单行内容</span></span><br><span class="line">data = f.readlines()  <span class="comment"># 去读多行并使用列表形式进行返回，换行使用\n表示</span></span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure>

<table><tr><td bgcolor="#FFC0CB">w 只写模式 ，覆盖写入，不存在则新建，存在则打开</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;text.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;text.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">f.write(<span class="string">&quot;小鲸鱼&quot;</span>)</span><br><span class="line">f.writelines([<span class="string">&quot;子良\n&quot;</span>, <span class="string">&quot;常在&quot;</span>, <span class="string">&quot;老蒋&quot;</span>])  <span class="comment"># 写入多条， 换行需要手动添加换行符\n</span></span><br><span class="line"><span class="built_in">print</span>(f.writable())  <span class="comment"># 判断文件是否可写</span></span><br><span class="line"><span class="built_in">print</span>(f.readable())  <span class="comment"># 判断文件是否可读</span></span><br></pre></td></tr></table></figure>

<table><tr><td bgcolor="#FFC0CB">a 追加写入，写入方式与w一致，不会覆盖原来的数据</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;text.txt&quot;</span>, <span class="string">&quot;a&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">f.writelines([<span class="string">&quot;子良\n&quot;</span>, <span class="string">&quot;常在&quot;</span>, <span class="string">&quot;老蒋&quot;</span>])</span><br><span class="line">f.write(<span class="string">&quot;\n搞钱小秘书&quot;</span>)</span><br></pre></td></tr></table></figure>

<table><tr><td bgcolor="#FFC0CB">+模式在原来的模式上面添加新的 r 或者 w 功能</td></tr></table>

<p>注意：</p>
<ul>
<li>r+  在读取的基础上增加写入  </li>
<li>w+  在写入的基础上增加读取   (覆盖写入)</li>
<li>a+  在写入的基础上增加读取   (追加写入)</li>
<li>谁在前面就以谁为主</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;text.txt&quot;</span>, <span class="string">&quot;r+&quot;</span>)  <span class="comment"># 先判断 r ，不存在，报错</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;text.txt&quot;</span>, <span class="string">&quot;w+&quot;</span>)  <span class="comment"># 先判断 w ，不存在，新建</span></span><br><span class="line"><span class="built_in">print</span>(f.readable())</span><br><span class="line"><span class="built_in">print</span>(f.writable())</span><br></pre></td></tr></table></figure>

<table><tr><td bgcolor="#FFC0CB">rb 读取图片，图片、音频、视频等在计算机中存储为二进制</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;5200.jpg&quot;</span>, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(f.read())</span><br></pre></td></tr></table></figure>

<h3 id="文件的读取："><a href="#文件的读取：" class="headerlink" title="文件的读取："></a>文件的读取：</h3><table>
<thead>
<tr>
<th>data &#x3D; f.read()</th>
<th>读取并返回所有文件内容</th>
</tr>
</thead>
<tbody><tr>
<td>data &#x3D; f.readline()</td>
<td>读取并返回单行内容</td>
</tr>
<tr>
<td>data &#x3D; f.readlines()</td>
<td>去读多行并使用列表形式进行返回，换行使用\n表示</td>
</tr>
</tbody></table>
<h3 id="文件的写入："><a href="#文件的写入：" class="headerlink" title="文件的写入："></a>文件的写入：</h3><table>
<thead>
<tr>
<th>f.write(“小鲸鱼”)</th>
<th>写入单条</th>
</tr>
</thead>
<tbody><tr>
<td>f.writelines([“子良\n”, “常在”, “老蒋”])</td>
<td>写入多条， 换行需要手动添加换行符\n</td>
</tr>
</tbody></table>
<h3 id="文件的关闭："><a href="#文件的关闭：" class="headerlink" title="文件的关闭："></a>文件的关闭：</h3><table>
<thead>
<tr>
<th>f.close()</th>
<th>关闭文件</th>
</tr>
</thead>
<tbody><tr>
<td>f.flush()</td>
<td>刷新文件</td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#上下文管理器  操作完毕之后会自动关闭文件</span><br><span class="line"></span><br><span class="line">with open(文件名，模式，编码方式) as 变量名:</span><br><span class="line">    变量名.方法() </span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;text.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="built_in">print</span>(f.readlines())</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">光标(指针)</span></span><br><span class="line"><span class="string">f.tell()  查看当前指针位置</span></span><br><span class="line"><span class="string">f.read(10)  读取，读取的是字符个数</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;text.txt&quot;</span>, <span class="string">&quot;a+&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">f.write(<span class="string">&quot;\n乖乖&quot;</span>)</span><br><span class="line">f.seek(<span class="number">0</span>)  <span class="comment"># 调整光标到最前面</span></span><br><span class="line"><span class="built_in">print</span>(f.tell())</span><br><span class="line"><span class="built_in">print</span>(f.read(<span class="number">15</span>))  <span class="comment"># 指定从光标开始的位置开始读取指定个数</span></span><br></pre></td></tr></table></figure>

<h3 id="文件流-io："><a href="#文件流-io：" class="headerlink" title="文件流 io："></a>文件流 io：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230506152544.png"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230506152600.png"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<table><tr><td bgcolor="#ADD8E6">作用：反复的写入和读取数据或损耗磁盘读写次数，也非常麻烦，文件流生成的是一个临时假文件,并不会占用磁盘空间</td></tr></table>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line">str_io = io.StringIO()  <span class="comment"># 生成临时假文件（字符串）</span></span><br><span class="line">str_io.write(<span class="string">&quot;宋志上&quot;</span>)</span><br><span class="line">str_io.seek(<span class="number">0</span>)  <span class="comment"># 方式一：调整指针位到开始</span></span><br><span class="line"><span class="built_in">print</span>(str_io.read())  <span class="comment"># 没有读取到数据--&gt;写入之后，指针在最后，后面已经没有数据</span></span><br><span class="line"><span class="built_in">print</span>(str_io.getvalue())  <span class="comment"># 不需要考虑指针，直接读取全部</span></span><br><span class="line"></span><br><span class="line">bt_io = io.BytesIO()  <span class="comment"># 生成临时假文件（二进制）</span></span><br><span class="line">bt_io.write(<span class="string">b&quot;hello cls15&quot;</span>)  <span class="comment"># b 模拟字符串里面的一个二进制的数据</span></span><br><span class="line"><span class="built_in">print</span>(bt_io.getvalue())</span><br></pre></td></tr></table></figure>

<h3 id="os-模块-："><a href="#os-模块-：" class="headerlink" title="os 模块 ："></a>os 模块 ：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230506152319.png"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230506152304.png"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="操作文件和文件目录-文件夹-："><a href="#操作文件和文件目录-文件夹-：" class="headerlink" title="操作文件和文件目录(文件夹)："></a>操作文件和文件目录(文件夹)：</h3><p>注意：</p>
<ul>
<li>工作目录：这个文件在那个文件夹下面，这个文件夹的绝对路径就叫工作目录</li>
<li>每个人的电脑文件是不一样的，工作目录也不一样</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(os.getcwd())  <span class="comment"># 打印当前的工作目录</span></span><br><span class="line"><span class="comment">#更换工作目录为 08函数文件夹下面</span></span><br><span class="line">os.chdir(<span class="string">r&quot;D:\LiuMupy\cls15\08函数&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(os.getcwd())</span><br><span class="line"><span class="built_in">print</span>(os.listdir()) <span class="comment"># 由于前面更换了工作目录所以现在查看到的是08函数里面的文件</span></span><br><span class="line"><span class="comment">#os.rename(&quot;旧&quot;, &quot;新&quot;)</span></span><br><span class="line">os.rename(<span class="string">r&quot;test_new.py&quot;</span>, <span class="string">r&quot;D:\LiuMupy\test_new.py&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="模块操作："><a href="#模块操作：" class="headerlink" title="模块操作："></a>模块操作：</h2><h3 id="内置模块的导入："><a href="#内置模块的导入：" class="headerlink" title="内置模块的导入："></a>内置模块的导入：</h3><table>
<thead>
<tr>
<th></th>
<th>语法</th>
<th>解释</th>
<th>调用</th>
</tr>
</thead>
<tbody><tr>
<td>方式一：</td>
<td>import 模块名</td>
<td>导入全部</td>
<td>模块名.方法名（）</td>
</tr>
<tr>
<td>方式二：</td>
<td>from 模块名 import 方法名</td>
<td>指定导入</td>
<td>方法名()</td>
</tr>
<tr>
<td></td>
<td>from 模块名 import *</td>
<td>导入全部</td>
<td>模块名.方法名（）</td>
</tr>
<tr>
<td>方式三：</td>
<td>from 模块名 import 方法名 as 别名</td>
<td>有时模块名字太长，可以起个别名导入</td>
<td>别名()</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Mode</span><br><span class="line"></span><br><span class="line">Mode.fun1()</span><br><span class="line">Mode.fun2()</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Mode <span class="keyword">import</span> fun1</span><br><span class="line">fun1()</span><br><span class="line"><span class="comment"># fun2()  # 没有导入fun2,报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Mode <span class="keyword">import</span> fun1 <span class="keyword">as</span> f1</span><br><span class="line"><span class="comment"># fun1()  # 已经取了别名，不能用原名调用</span></span><br><span class="line">f1()</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li><p>Mode是你自己建的py文件，里面的函数也是你写的</p>
</li>
<li><p>要先创建Mode.py文件，你才能import Mode</p>
</li>
<li><p>因为这个是你自建的模块，所以会有红线，消除红线的方法是，找到你运行代码的文件夹，右键点进”Mark Directory as”文件名，</p>
<p>再点”Excluded“,红线就消失了</p>
</li>
</ul>
<h3 id="文件路径添加："><a href="#文件路径添加：" class="headerlink" title="文件路径添加："></a>文件路径添加：</h3><p>使用sys模块</p>
<table>
<thead>
<tr>
<th>sys.path</th>
<th>查看可以导入模块的路径，查看引用模块时候的搜索路径，如果这里面都没有这个模块—报错</th>
</tr>
</thead>
<tbody><tr>
<td>sys.path.append(path)</td>
<td>添加其他的路径</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="comment"># print(sys.path)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将自己的模块添加到路径表里面---&gt; list.append()</span></span><br><span class="line"><span class="comment"># r 取消转移，保留字符串本身的含义</span></span><br><span class="line">p = <span class="string">r&quot;D:\LiuMupy\cls15\09文件与模块\Mode.py&quot;</span></span><br><span class="line">li = sys.path</span><br><span class="line">li.append(p)</span><br><span class="line"><span class="comment"># print(li)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Mode <span class="keyword">import</span> fun1</span><br><span class="line">fun1()  <span class="comment"># 可以对Mode里面的方法进行调用</span></span><br></pre></td></tr></table></figure>



<h3 id="导入第三方库："><a href="#导入第三方库：" class="headerlink" title="导入第三方库："></a>导入第三方库：</h3><p>注意：</p>
<ul>
<li>先下载（在cmd里面下载）</li>
<li>pip install 模块名 -i 国内源</li>
</ul>
<table>
<thead>
<tr>
<th>查看已有的模块（库）</th>
<th>pip list</th>
</tr>
</thead>
<tbody><tr>
<td>卸载已有模块</td>
<td>pip uninstall 模块名</td>
</tr>
</tbody></table>
<p>国内镜像源:</p>
<table>
<thead>
<tr>
<th>豆瓣</th>
<th><a href="https://pypi.douban.com/simple/">https://pypi.douban.com/simple/</a></th>
</tr>
</thead>
<tbody><tr>
<td>阿里</td>
<td><a href="https://mirrors.aliyun.com/pypi/simple/">https://mirrors.aliyun.com/pypi/simple/</a></td>
</tr>
<tr>
<td>华中理工大学</td>
<td><a href="https://pypi.hustunique.com/simple/">https://pypi.hustunique.com/simple/</a></td>
</tr>
<tr>
<td>山东理工大学</td>
<td><a href="https://pypi.sdutlinux.org/simple/">https://pypi.sdutlinux.org/simple/</a></td>
</tr>
<tr>
<td>中国科学技术大学</td>
<td><a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a></td>
</tr>
<tr>
<td>清华</td>
<td><a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></td>
</tr>
</tbody></table>
<h3 id="主函数："><a href="#主函数：" class="headerlink" title="主函数："></a>主函数：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#主函数样式</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;这是我的主函数&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li>一个文件的主函数:里面的代码只能被当前文件所执行</li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python理论</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML打字效果实现</title>
    <url>/2022/09/04/wordpress/HTML%E6%89%93%E5%AD%97%E6%95%88%E6%9E%9C%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="形式一："><a href="#形式一：" class="headerlink" title="形式一："></a>形式一：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Typing effect without js<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-pseudo">:root</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* number of characters */</span></span></span><br><span class="line"><span class="language-css">      <span class="attr">--steps</span>: <span class="number">345</span>;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* animation time */</span></span></span><br><span class="line"><span class="language-css">      <span class="attr">--duration</span>: <span class="number">2.5s</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attr">--fontSize</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attr">--cursorSize</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.text</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#333</span>;;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-family</span>: <span class="string">&#x27;Courier New&#x27;</span>, Courier, monospace;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="built_in">var</span>(--fontSize);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">line-height</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.text</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="built_in">var</span>(--cursorSize);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="built_in">var</span>(--fontSize);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">z-index</span>: <span class="number">2</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">animation</span>: blink <span class="number">1s</span> <span class="built_in">var</span>(--duration) step-end infinite,</span></span><br><span class="line"><span class="language-css">      moveCursor <span class="built_in">var</span>(--duration) <span class="built_in">steps</span>(<span class="built_in">var</span>(--steps)) forwards;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.text</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="built_in">var</span>(--fontSize);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">z-index</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">#fff</span>, <span class="number">#fff</span>) no-repeat top right;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">animation</span>: showText <span class="built_in">var</span>(--duration) <span class="built_in">steps</span>(<span class="built_in">var</span>(--steps)) forwards;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* Cursor blink animation */</span></span></span><br><span class="line"><span class="language-css">    <span class="keyword">@keyframes</span> blink &#123;</span></span><br><span class="line"><span class="language-css">      <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="number">50%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: transparent;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* Cursor movement animation */</span></span></span><br><span class="line"><span class="language-css">    <span class="keyword">@keyframes</span> moveCursor &#123;</span></span><br><span class="line"><span class="language-css">      <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">0%</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* background moving animation */</span></span></span><br><span class="line"><span class="language-css">    <span class="keyword">@keyframes</span> showText &#123;</span></span><br><span class="line"><span class="language-css">      <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-size</span>: <span class="number">0%</span> <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span>hello,world!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">htm</span>&gt;</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<h2 id="形式二："><a href="#形式二：" class="headerlink" title="形式二："></a>形式二：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Typing effect with js<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.divcss5</span>&#123;<span class="attribute">word-wrap</span>:break-word;<span class="attribute">font-size</span>: <span class="number">36px</span>;&#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;divcss5&quot;</span>  <span class="attr">id</span>=<span class="string">&quot;aa&quot;</span>&gt;</span></span><br><span class="line">  In the past, to achieve an effect similar to typing on a computer, js+html was required. Today I will introduce a new method.This article mainly</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display:none&quot;</span> <span class="attr">id</span>=<span class="string">&quot;w&quot;</span>&gt;</span></span><br><span class="line">  In the past, to achieve an effect similar to typing on a computer, js+html was required. Today I will introduce a new method.This article mainly introduces pure html+css to achieve typing effect, which has certain reference value, you can learn about it. Provide all the code, you can use it directly.</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> index=<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> word=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;w&quot;</span>).<span class="property">innerHTML</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">type</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;aa&quot;</span>).<span class="property">innerText</span> = word.<span class="title function_">substring</span>(<span class="number">0</span>,index++);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="built_in">setInterval</span>(type, <span class="number">200</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<p>注：</p>
<p>作者：子玥<br>链接：<a href="https://juejin.cn/post/7065213001992765454">https://juejin.cn/post/7065213001992765454</a><br>来源：稀土掘金</p>
]]></content>
      <categories>
        <category>网站探索</category>
      </categories>
      <tags>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title>数值与字符串</title>
    <url>/2023/05/02/python%E7%90%86%E8%AE%BA/%E6%95%B0%E5%80%BC%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<p>python的第二节课笔记（基础入门）</p>
<span id="more"></span>

<table><tr><td bgcolor="#ADD8E6">python共有六大基础数据类型：分别是数值，字符串，列表，元组，字典，集合。</td></tr></table>

<h3 id="数值："><a href="#数值：" class="headerlink" title="数值："></a>数值：</h3><h4 id="常见数值类型："><a href="#常见数值类型：" class="headerlink" title="常见数值类型："></a>常见数值类型：</h4><table>
<thead>
<tr>
<th>int</th>
<th>整型 ( 没有小数点)</th>
</tr>
</thead>
<tbody><tr>
<td>float</td>
<td>浮点型 (小数，有小数点)</td>
</tr>
<tr>
<td>bool</td>
<td>布尔类型 ( True       False)  [首字母必须大写]</td>
</tr>
</tbody></table>
<h4 id="常用函数："><a href="#常用函数：" class="headerlink" title="常用函数："></a>常用函数：</h4><table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>type(数据)</td>
<td>查询数据的类型</td>
</tr>
<tr>
<td>id(变量)</td>
<td>查询变量的内存地址</td>
</tr>
</tbody></table>
<p>示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">1.0</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(-<span class="number">1.1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="literal">True</span>))</span><br><span class="line"><span class="comment">#print(type(true))  # 开头必须大写，否则报错</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="literal">False</span>))</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">100</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(a))</span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230530180716.png"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230530183804.png"></p>
<h4 id="常见运算符"><a href="#常见运算符" class="headerlink" title="常见运算符"></a>常见运算符</h4><table>
<thead>
<tr>
<th>符号</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>+</td>
<td>加</td>
</tr>
<tr>
<td>-</td>
<td>减</td>
</tr>
<tr>
<td>*</td>
<td>乘</td>
</tr>
<tr>
<td>&#x2F;</td>
<td>除</td>
</tr>
<tr>
<td>&#x2F;&#x2F;</td>
<td>取整</td>
</tr>
<tr>
<td>%</td>
<td>取余</td>
</tr>
<tr>
<td>**</td>
<td>次方&#x2F;幂</td>
</tr>
</tbody></table>
<p>注意：</p>
<ul>
<li>在python中bool型的True和False分别等同于1和0，也可直接进行运算</li>
<li>数值类型是<strong>不可变</strong>（更改之后，内存地址也会发生改变，没有增删改查等操作）的<strong>非序列结构</strong>（存储的只能为单个元素，不可进行拆分，没有下标索引的概念），即用变量接收一个数值，只能为一个地址，一种数据类型</li>
<li>上面是常见数值类型 ，<strong>数值是不可变的数据类型</strong></li>
</ul>
<p>示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、创建了两个变量</span></span><br><span class="line">num1 = <span class="number">15</span></span><br><span class="line">num2 = <span class="number">12</span></span><br><span class="line"><span class="comment">#利用变量引用里面的值进行数学计算</span></span><br><span class="line"><span class="built_in">print</span>(num1 + num2)    <span class="comment">#27</span></span><br><span class="line"><span class="built_in">print</span>(num1 - num2)    <span class="comment">#3</span></span><br><span class="line"><span class="built_in">print</span>(num1 * num2)   <span class="comment">#180</span></span><br><span class="line"><span class="built_in">print</span>(num1 / num2)  <span class="comment">#1.25</span></span><br><span class="line"><span class="built_in">print</span>(num1 // num2)  <span class="comment"># 1</span></span><br><span class="line"><span class="built_in">print</span>(num1 % num2)  <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="number">2</span>**<span class="number">3</span>)  <span class="comment"># 2的3次方  2 * 2 * 2</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">2</span>**<span class="number">4</span>)  <span class="comment"># 2的4次方  2 * 2 * 2 * 2</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">2</span>**<span class="number">5</span>)  <span class="comment"># 2的5次方  2 * 2 * 2 * 2 * 2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="literal">True</span> * <span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="literal">True</span> + <span class="literal">False</span>)</span><br><span class="line"><span class="comment">#print(True / False)  # 注意：0不能为分母,不可以做除数</span></span><br></pre></td></tr></table></figure>

<h4 id="数据类型强转："><a href="#数据类型强转：" class="headerlink" title="数据类型强转："></a>数据类型强转：</h4><table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>int(想要转变的数据)</td>
<td>强转为整型</td>
</tr>
<tr>
<td>float(想要转变的数据)</td>
<td>强转为浮点型</td>
</tr>
<tr>
<td>str(想要转变的数据)</td>
<td>强转为字符串</td>
</tr>
</tbody></table>
<h4 id="数值模块（了解）："><a href="#数值模块（了解）：" class="headerlink" title="数值模块（了解）："></a>数值模块（了解）：</h4><p>注意：</p>
<ul>
<li>只要运算双方有一个浮点型的存在，结果必然是浮点型</li>
<li>浮点数无法作高精度计算，原因：计算机的底层都是二进制，浮点数存在精度问题们无法完全转变为二进制</li>
<li>解决：导入decimal模块</li>
<li>作用：1、提高计算的精密度  2、可以用作字符串包裹的数值的计算</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> decimal</span><br><span class="line"><span class="built_in">print</span>(<span class="number">4.0</span> / <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">1.1</span> - <span class="number">0.2</span>) </span><br><span class="line"><span class="built_in">print</span>(decimal.Decimal(<span class="number">1.1</span>)-decimal.Decimal(<span class="number">0.2</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="number">10</span> / <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(decimal.Decimal(<span class="number">10</span>)/decimal.Decimal(<span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(decimal.Decimal(<span class="string">&#x27;2&#x27;</span>)-decimal.Decimal(<span class="string">&quot;1&quot;</span>))</span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601143820.png"></p>
<h3 id="字符串："><a href="#字符串：" class="headerlink" title="字符串："></a>字符串：</h3><h4 id="字符串的定义："><a href="#字符串的定义：" class="headerlink" title="字符串的定义："></a>字符串的定义：</h4><table><tr><td bgcolor="#ADD8E6">生活当中遇到的文本信息就是字符串，只要在键盘上能够打出来的字符都是字符串，使用str表示。</td></tr></table>

<p>总的来说，字符串可以有三种定义方式，分别是：单引号、和双引号三引号(三个单引号和三个双引号)，只有三引号才支持换行，其他两种不支持换行</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">st1 = <span class="string">&#x27;这是第二个字符串&#x27;</span></span><br><span class="line">st2 = <span class="string">&quot;这是第二个字符串&quot;</span></span><br><span class="line">st3 = <span class="string">&quot;&quot;&quot;这是第二个</span></span><br><span class="line"><span class="string"> 字符串&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(st2))    <span class="comment">#类型为str</span></span><br><span class="line"><span class="built_in">print</span>(st1)</span><br><span class="line"><span class="built_in">print</span>(st3)</span><br></pre></td></tr></table></figure>

<h4 id="字符串的特点"><a href="#字符串的特点" class="headerlink" title="字符串的特点:"></a>字符串的特点:</h4><table><tr><td bgcolor="#ADD8E6">不可变的有序序列结构。</td></tr></table>

<p>注意：</p>
<ul>
<li>不可变：有增删改查的操作，生成的数据需要使用新变量接收</li>
<li>序列：可以存储多个元素，可以进行拆分有下标索引的概念</li>
<li>序列结构的数据类型有：字符串，列表，元组</li>
</ul>
<h4 id="字符串的查找"><a href="#字符串的查找" class="headerlink" title="字符串的查找:"></a>字符串的查找:</h4><table>
<thead>
<tr>
<th>查找单个值</th>
<th>形式为 索引（下标）,即    str[下标]</th>
</tr>
</thead>
<tbody><tr>
<td>查找多个值</td>
<td>即切片，形式为  str[起始下标:结束下标]</td>
</tr>
<tr>
<td>隔位取值</td>
<td>形式为  str[起始:结束:步长]</td>
</tr>
</tbody></table>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601103924.png"></p>
<p>注意：</p>
<ul>
<li>顺序：索引从0开始<br>逆序：索引从-1开始</li>
<li>查找多个值时，区间为左闭右开区间，因此实际操作，结束下标需要+1位</li>
<li>起始下标默认为第一个， 结束下标默认为最后一个</li>
<li>步长默认为1, 想要隔n位取，就步长设置为 n+1<br>顺序，步长没有要求，负数表示取反<br>逆序，步长为负</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&quot;你们好呀,15期的小伙伴！&quot;</span></span><br><span class="line"><span class="built_in">print</span>(str1[<span class="number">2</span>])  <span class="comment"># 好</span></span><br><span class="line"><span class="built_in">print</span>(str1[-<span class="number">2</span>])  <span class="comment"># 伴</span></span><br><span class="line"><span class="built_in">print</span>(str1[<span class="number">5</span>:<span class="number">7</span>])  <span class="comment">#15</span></span><br><span class="line"><span class="built_in">print</span>(str1[<span class="number">5</span>:<span class="number">8</span>])   <span class="comment">#15期</span></span><br><span class="line"><span class="built_in">print</span>(str1[<span class="number">5</span>:<span class="number">8</span>:<span class="number">2</span>])  <span class="comment"># 步长为2，隔1个取一个，为”1期“</span></span><br><span class="line"><span class="built_in">print</span>(str1[<span class="number">0</span>:-<span class="number">1</span>:<span class="number">3</span>])  <span class="comment"># 步长为3，隔2个取一个,结束位为-1，左闭右开，拿不到，为”你呀5小“</span></span><br><span class="line"><span class="built_in">print</span>(str1[<span class="number">0</span>:<span class="number">13</span>:<span class="number">3</span>])  <span class="comment"># 结束位12 + 1 ,13可以取到，为”你呀5小！“</span></span><br><span class="line"><span class="built_in">print</span>(str1[::-<span class="number">1</span>])  <span class="comment"># 不写默认所有，步长为负数表示取反，为”！伴伙小的期51,呀好们你“</span></span><br><span class="line"><span class="comment">#print(str1[])  # 冒号是语法结构，不可以省略</span></span><br></pre></td></tr></table></figure>

<h4 id="字符串的拼接"><a href="#字符串的拼接" class="headerlink" title="字符串的拼接:"></a>字符串的拼接:</h4><table>
<thead>
<tr>
<th>方法数</th>
<th>解释</th>
<th>语法</th>
</tr>
</thead>
<tbody><tr>
<td>法一</td>
<td>+表示直接拼接</td>
<td>str + str</td>
</tr>
<tr>
<td>法二</td>
<td>* 表示成倍复制</td>
<td>str * int</td>
</tr>
<tr>
<td>法三</td>
<td>利用字符串的格式化来拼接字符串</td>
<td>语法1：”%s %f”%(str, float)</td>
</tr>
<tr>
<td>法四</td>
<td>利用format方法来拼接</td>
<td>语法1: “{}{}”.format(变量1,变量2)<br/>语法2：f”{变量1}{变量2}”</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 法一法二</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">&quot;1314&quot;</span></span><br><span class="line">b = <span class="string">&quot;520&quot;</span></span><br><span class="line"><span class="built_in">print</span>(a + b)   <span class="comment">#1314520</span></span><br><span class="line"><span class="built_in">print</span>(b * <span class="number">2</span>)    <span class="comment">#520520</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 法三法四</span><br><span class="line"></span><br><span class="line">a = 10</span><br><span class="line">b = 20</span><br><span class="line">print(&quot;和为&#123;a+b&#125;&quot;)  # 只要被引号包裹就是字符串，不再具备变量的特性</span><br><span class="line">print(&quot;和为,&quot;, a+b)  #</span><br><span class="line">print(&quot;和为%s&quot;%(a+b))  # 格式成字符串</span><br><span class="line">print(&quot;和为%.4f&quot;%(a+b))  # 格式为浮点型，并保留4位小数</span><br><span class="line">print(&quot;和为&#123;&#125;&quot;.format(a+b))</span><br><span class="line">print(f&quot;和为&#123;a+b&#125;&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601110345.png"></p>
<h4 id="字符串格式化："><a href="#字符串格式化：" class="headerlink" title="字符串格式化："></a>字符串格式化：</h4><table>
<thead>
<tr>
<th></th>
<th>解释</th>
<th>语法</th>
</tr>
</thead>
<tbody><tr>
<td>法一</td>
<td>字符串的 %r 和 %s，%f 格式化输出</td>
<td>“%.2f”%变量名</td>
</tr>
<tr>
<td>法二</td>
<td>字符串的 format 方法</td>
<td>“{}”.format(变量名)<br/>f”{变量名}”</td>
</tr>
<tr>
<td>法三</td>
<td>join方法</td>
<td>“链接符号”.join(序列)</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>%s</th>
<th>转化为字符串</th>
</tr>
</thead>
<tbody><tr>
<td>%f</td>
<td>转化为浮点型，其中%.nf，保留n位小数</td>
</tr>
<tr>
<td>%d</td>
<td>格式化为整数</td>
</tr>
<tr>
<td>%r</td>
<td>原样输出</td>
</tr>
</tbody></table>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601171020.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">lm = <span class="number">3.3333333333333333</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%.2f&quot;</span>%lm)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(lm))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%.4f&quot;</span>%lm)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%.20f&quot;</span>%lm)</span><br><span class="line"></span><br><span class="line">year = <span class="number">2023</span></span><br><span class="line">month = <span class="number">4</span></span><br><span class="line">day = <span class="number">14</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;你们好呀，今天是：%s年%s月%s号！&quot;</span>%(year, month, day))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;你们好呀，今天是：&#123;&#125;年&#123;&#125;月&#123;&#125;号！&quot;</span>.<span class="built_in">format</span>(year, month, day))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;你们好呀，今天是：<span class="subst">&#123;day&#125;</span>年<span class="subst">&#123;month&#125;</span>月<span class="subst">&#123;year&#125;</span>号！&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;先不<span class="subst">&#123;day&#125;</span>用其他厨<span class="subst">&#123;day&#125;</span>房电器<span class="subst">&#123;day&#125;</span>作为手<span class="subst">&#123;day&#125;</span>续费唱日出&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601111939.png"></p>
<p>错误示范：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">year = <span class="number">2023</span></span><br><span class="line">month = <span class="number">4</span></span><br><span class="line">day = <span class="number">14</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;你们好呀，今天是：2023年4月14号！&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;你们好呀，今天是：year年month月day号！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">上述代码的问题：变量没有对里面的值进行引用，而是直接原模样的打印了出来</span></span><br><span class="line"><span class="string">原因：变量放在了引号里面，就是单纯的字符，</span></span><br><span class="line"><span class="string">    不再具备变量的功能（不能引用里面的值）</span></span><br><span class="line"><span class="string">解决：保留变量的属性（能够引用里面的值）</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment">#year在引号外面，是变量，其他依旧是字符</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;你们好呀，今天是：&quot;</span>,year,<span class="string">&quot;年month月day号！&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601114325.png"></p>
<p>法三：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;链接符号&quot;.join(序列)</span></span><br><span class="line"><span class="string">    字符串，列表，元组</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2023-4-14</span></span><br><span class="line"><span class="string">2023/4/14</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"> year = <span class="built_in">str</span>(<span class="number">2023</span>)</span><br><span class="line"> month = <span class="number">4</span></span><br><span class="line"> day = <span class="number">14</span></span><br><span class="line"> data = [year, <span class="string">&quot;%s&quot;</span>%month, <span class="string">f&quot;<span class="subst">&#123;day&#125;</span>&quot;</span>]  <span class="comment"># 将数值格式化为字符</span></span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;/&quot;</span>.join(data))</span><br></pre></td></tr></table></figure>

<p>常见疑问：</p>
<p><code>print(f&quot;第&#123;week&#125;周,第&#123;day&#125;天&quot;)</code>这句话的f和{week}分别代表什么？</p>
<p>这句话中的 <code>f</code> 是 Python 3.6 中引入的 f-string（格式化字符串）语法，可以方便地将变量的值插入到字符串中，而不需要使用传统的字符串格式化方法。</p>
<p>在 f-string 中，用 <code>&#123;&#125;</code> 包围的变量会被替换成对应的值。例如，<code>&#123;week&#125;</code> 会被替换成 <code>week</code> 变量的值。通过在 <code>&#123;&#125;</code> 中使用表达式，可以进行更复杂的字符串格式化操作。</p>
<p>例如，在下面的例子中，我们可以使用 f-string 将数字变量插入到字符串中：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义变量</span></span><br><span class="line">x = <span class="number">10</span></span><br><span class="line">y = <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 f-string 进行字符串格式化</span></span><br><span class="line">result = <span class="string">f&quot;The value of x is <span class="subst">&#123;x&#125;</span>, and the value of y is <span class="subst">&#123;y&#125;</span>.&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="built_in">print</span>(result)  <span class="comment"># The value of x is 10, and the value of y is 20.</span></span><br></pre></td></tr></table></figure>

<p>在上面的例子中，我们使用 f-string 将变量 <code>x</code> 和 <code>y</code> 插入到字符串中，并且在字符串中直接使用了这些变量的值。</p>
<p>总之，<code>f</code> 是 f-string 的开头，而 <code>&#123;week&#125;</code> 是表示要插入 week 变量的值。</p>
<h4 id="字符串的更改："><a href="#字符串的更改：" class="headerlink" title="字符串的更改："></a>字符串的更改：</h4><table><tr><td bgcolor="#ADD8E6">字符串不可变，需要使用新变量接收。</td></tr></table>

<table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>str.replace(旧,新)</td>
<td>默认更改所有</td>
</tr>
<tr>
<td>str.replace(旧,新,次数)</td>
<td>顺序更改指定次数</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&quot;hello ah tongxue!&quot;</span></span><br><span class="line">str1_new1 = str1.replace(<span class="string">&quot;t&quot;</span>, <span class="string">&quot;T&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(str1)   <span class="comment">#hello ah tongxue!</span></span><br><span class="line"><span class="built_in">print</span>(str1_new1)   <span class="comment">#hello ah Tongxue!</span></span><br><span class="line">str1_new2 = str1.replace(<span class="string">&quot;h&quot;</span>, <span class="string">&quot;H&quot;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(str1_new2)   <span class="comment">#Hello ah tongxue! </span></span><br></pre></td></tr></table></figure>

<h4 id="字符串切割："><a href="#字符串切割：" class="headerlink" title="字符串切割："></a>字符串切割：</h4><table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>str.split(“指定分割字符”)</td>
<td>从指定字符处分割，默认指定分割字符有几个，就分割几次</td>
</tr>
<tr>
<td>str.split(“指定分割字符”,次数)</td>
<td>从指定字符处分割，可指定分割次数</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str2 = <span class="string">&quot;20230414&quot;</span></span><br><span class="line">str2_new1 = str2.split(<span class="string">&quot;4&quot;</span>)</span><br><span class="line">str2_new2 = str2.split(<span class="string">&quot;0&quot;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(str2_new1)</span><br><span class="line"><span class="built_in">print</span>(str2_new2)</span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601125956.png"></p>
<h4 id="字符串查找："><a href="#字符串查找：" class="headerlink" title="字符串查找："></a>字符串查找：</h4><table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>str.find(“指定查找字符”)</td>
<td>从整个字符串查找</td>
</tr>
<tr>
<td>str.find(“指定查找字符”,起始,结束)</td>
<td>从指定位置查找</td>
</tr>
</tbody></table>
<p>注意：</p>
<ul>
<li>找到：返回字符的下标</li>
<li>没有找到：返回-1</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&quot;hello ah tongxue!&quot;</span></span><br><span class="line"><span class="built_in">print</span>(str1.find(<span class="string">&quot;st&quot;</span>))  <span class="comment"># -1</span></span><br><span class="line"><span class="built_in">print</span>(str1.find(<span class="string">&quot;ah&quot;</span>))  <span class="comment"># 6</span></span><br><span class="line"><span class="built_in">print</span>(str1.find(<span class="string">&quot;ah&quot;</span>, <span class="number">8</span>,<span class="number">10</span>))  <span class="comment"># 指定位置查找,-1</span></span><br></pre></td></tr></table></figure>

<h4 id="首字母转变大写："><a href="#首字母转变大写：" class="headerlink" title="首字母转变大写："></a>首字母转变大写：</h4><table>
<thead>
<tr>
<th>语法</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>str1.title()</td>
<td>字符串首字母转变大写</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&quot;beautiful&quot;</span></span><br><span class="line">str1_new3 = str1.title()</span><br><span class="line"><span class="built_in">print</span>(str1_new3)  <span class="comment">#Beautiful</span></span><br></pre></td></tr></table></figure>

<h4 id="字符串的其他方法："><a href="#字符串的其他方法：" class="headerlink" title="字符串的其他方法："></a>字符串的其他方法：</h4><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601133746.png"></p>
<h4 id="字符串转义："><a href="#字符串转义：" class="headerlink" title="字符串转义："></a>字符串转义：</h4><table><tr><td bgcolor="#ADD8E6">在特定字符前面加 \ 会解释成带有特殊含义的转义字符（在print内起作用）。</td></tr></table>

<p>注意：</p>
<ul>
<li>\n：换行</li>
<li>\t ：水平制表符—默认以8个字符长度对齐，超过则按8的倍数对齐</li>
<li>在转义字符前面再加一个\可以取消转义，同时在字符串前面加r可以取消字符串内所有转义字符</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hellocls15sky&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello\tcls15sky&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello\tcls15\tsky&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello\t\tcls15\t\tsky&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello\\tcls15\\tsky&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">r&quot;hello\tcls15\tsky&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601135640.png"></p>
<h4 id="字符串的编码："><a href="#字符串的编码：" class="headerlink" title="字符串的编码："></a>字符串的编码：</h4><table><tr><td bgcolor="#ADD8E6">字符串编码是为了在计算机中表示和处理文本数据。计算机内部以二进制形式存储和处理数据，而文本是由字符组成的，每个字符都有一个对应的编码值。因此，为了在计算机中表示和处理文本，需要将字符映射到对应的编码值。</td></tr></table>

<table>
<thead>
<tr>
<th>str.encode(“编码方式”)</th>
<th>默认以utf-8格式编码，当然可以指定encoding编码格式。</th>
</tr>
</thead>
<tbody><tr>
<td>str.decode(“解码方式”)</td>
<td>解码，和encode用法一致</td>
</tr>
</tbody></table>
<p>注意：</p>
<ul>
<li>用什么编码就用什么解码，否则会乱码</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">jk = <span class="string">&quot;酒空&quot;</span></span><br><span class="line"><span class="built_in">print</span>(jk)</span><br><span class="line">bianma = jk.encode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(bianma)  <span class="comment"># 指定编码方式为utf-8</span></span><br><span class="line">res0 = bianma.decode(<span class="string">&quot;gbk&quot;</span>)  <span class="comment"># 出现了乱码的现象</span></span><br><span class="line">res1 = bianma.decode(<span class="string">&quot;utf-8&quot;</span>)  <span class="comment"># 正常</span></span><br><span class="line"><span class="built_in">print</span>(res0)</span><br><span class="line"><span class="built_in">print</span>(res1)</span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230601141645.png"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python理论</tag>
      </tags>
  </entry>
  <entry>
    <title>正则</title>
    <url>/2023/07/08/python%E7%90%86%E8%AE%BA/%E6%AD%A3%E5%88%99/</url>
    <content><![CDATA[<p>python的第11节课笔记（基础高级）</p>
<span id="more"></span>

<h2 id="正则的概念"><a href="#正则的概念" class="headerlink" title="正则的概念"></a>正则的概念</h2><p>正则表达式：正则表达式由需要匹配的字符和一些特殊字符组成，可以在字符串当中匹配出需要查找的对象</p>
<p>匹配：通过正则表达式快速快捷的匹配出符合要求的特征字符串，比如利用病毒的特征值来查找文本中的病毒</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">number = <span class="built_in">input</span>(<span class="string">&quot;请输入一个电话号码：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> number[<span class="number">0</span>:<span class="number">2</span>] == <span class="string">&quot;13&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;是一个手机号！！&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#通过正则来写</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">num = <span class="built_in">input</span>(<span class="string">&quot;请输入一个手机号：&quot;</span>)</span><br><span class="line"><span class="comment"># 匹配1开头</span></span><br><span class="line">r1 = re.findall(<span class="string">&quot;^1\d&#123;10&#125;$&quot;</span>, num)</span><br><span class="line"><span class="built_in">print</span>(r1)</span><br><span class="line"><span class="comment"># 匹配13开头的</span></span><br><span class="line">r2 = re.findall(<span class="string">&quot;^13\d&#123;9&#125;$&quot;</span>, num)</span><br><span class="line"><span class="built_in">print</span>(r2)</span><br></pre></td></tr></table></figure>



<h2 id="re模块"><a href="#re模块" class="headerlink" title="re模块"></a>re模块</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">re模块    (r&quot;需要获取的数据的正则表达式&quot;, 从哪里获取)</span><br><span class="line">re.findall()  匹配整个字符串</span><br><span class="line">    存在则以列表形式返回</span><br><span class="line">    不存在返回空列表</span><br><span class="line">re.match()  只匹配开头，从头开始一一对照比较</span><br><span class="line">    存在则返回对象，需要使用对象.group() 查看到具体匹配的字符</span><br><span class="line">    不存在则返回 None</span><br><span class="line">re.search()  匹配整个字符串</span><br><span class="line">    存在则返回对象</span><br><span class="line">    不存在则返回 None </span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">st = <span class="string">&quot;This is cls15 2023.05.19 LiuMu 18&quot;</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&quot;i&quot;</span>, st))  <span class="comment"># 存在则以列表形式返回</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&quot;this&quot;</span>, st))  <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(re.<span class="keyword">match</span>(<span class="string">r&quot;i&quot;</span>, st))  <span class="comment"># 不是i开头</span></span><br><span class="line">res1 = re.<span class="keyword">match</span>(<span class="string">r&quot;T&quot;</span>, st)</span><br><span class="line"><span class="built_in">print</span>(res1.span())  <span class="comment"># 使用元组包裹的下标，表示字符串长度</span></span><br><span class="line"><span class="built_in">print</span>(res1.group())  <span class="comment"># 匹配到的字符</span></span><br><span class="line">res2 = re.<span class="keyword">match</span>(<span class="string">r&quot;This&quot;</span>, st) <span class="comment"># 不是i开头</span></span><br><span class="line"><span class="built_in">print</span>(res2.span())</span><br><span class="line"><span class="built_in">print</span>(res2.group())</span><br><span class="line"><span class="built_in">print</span>(re.<span class="keyword">match</span>(<span class="string">r&quot;THis&quot;</span>, st))</span><br><span class="line"></span><br><span class="line">res3 = re.search(<span class="string">r&quot;is&quot;</span>, st)</span><br><span class="line">res3 = re.search(<span class="string">r&quot;i&quot;</span>, st)</span><br><span class="line"><span class="built_in">print</span>(res3.group())</span><br><span class="line"><span class="built_in">print</span>(res3.span())</span><br><span class="line"><span class="built_in">print</span>(re.search(<span class="string">r&quot;a&quot;</span>, st))</span><br></pre></td></tr></table></figure>



<h2 id="操作字符串"><a href="#操作字符串" class="headerlink" title="操作字符串"></a>操作字符串</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">操作字符串</span><br><span class="line"></span><br><span class="line">字符串方法</span><br><span class="line">    replace() 替换</span><br><span class="line">    split()  切割</span><br><span class="line">    find()</span><br><span class="line"></span><br><span class="line">re.sub(旧, 新, 操作的数据, [限制次数])</span><br><span class="line">    默认修改所有</span><br><span class="line">    如果指定，则从前面顺序修改</span><br><span class="line">re.split(&quot;[字符1字符2字符3]&quot;)    可以同时指定多种切割方式</span><br><span class="line">    注意：如果存在元字符，一定要\取消转义</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">st = <span class="string">&quot;This is cls15 2023.05.19 LiuMu 18&quot;</span></span><br><span class="line">st1 = st.replace(<span class="string">&quot;is&quot;</span>, <span class="string">&quot;IS&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(st1)</span><br><span class="line">st2 = st.split(<span class="string">&quot;i&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(st2)</span><br><span class="line"><span class="built_in">print</span>(st.find(<span class="string">&quot;i&quot;</span>))</span><br><span class="line"></span><br><span class="line">修改</span><br><span class="line">res4 = re.sub(<span class="string">&quot;c&quot;</span>, <span class="string">&quot;C&quot;</span>, st)</span><br><span class="line">res4 = re.sub(<span class="string">&quot;i&quot;</span>, <span class="string">&quot;I&quot;</span>, st, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(res4)</span><br><span class="line"></span><br><span class="line">切割</span><br><span class="line">需求：将里面空格隔开的字符串切割出来，并且年月日的数字也要切割出来</span><br><span class="line">st4 = st.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">st5 = st4[<span class="number">3</span>].split(<span class="string">&quot;.&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(st5)</span><br><span class="line">注意：re里面的.是一个元字符，具有特殊含义，需要在前面加上反斜杠附小特殊功能</span><br><span class="line">res5 = re.split(<span class="string">&quot;[ \.]&quot;</span>, st)</span><br><span class="line"><span class="built_in">print</span>(res5)</span><br><span class="line">res6 = re.split()</span><br><span class="line"></span><br><span class="line">提前编译正则格式</span><br><span class="line">s = re.<span class="built_in">compile</span>(<span class="string">r&quot;\d&quot;</span>)  <span class="comment"># \d 表示匹配数字</span></span><br><span class="line">res6 = re.findall(s, st)</span><br><span class="line"><span class="built_in">print</span>(res6)</span><br></pre></td></tr></table></figure>

<h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><p>正则表达之所以能够快速匹配字符串，是因为其有非常多的元字符，和我们字符串的转义有点类似，这些元字符代表了那些含义呢</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230711140140.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">num = input(&quot;请输入一个手机号：&quot;)</span></span><br><span class="line"><span class="string"># ^1  匹配1开头  &#123;10&#125;:匹配10次，原因：除了1之外，还有10个数</span></span><br><span class="line"><span class="string">r1 = re.findall(&quot;^1\d&#123;10&#125;$&quot;, num)</span></span><br><span class="line"><span class="string">print(r1)</span></span><br><span class="line"><span class="string"># ^13 匹配13开头的</span></span><br><span class="line"><span class="string">r2 = re.findall(&quot;^13\d&#123;9&#125;$&quot;, num)</span></span><br><span class="line"><span class="string">print(r2)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># st = &quot;This is cls15 2023.05.19 LiuMu 18 !@#$%^……&amp;*|/\n\d\t&quot;</span></span><br><span class="line"><span class="comment"># .通配符</span></span><br><span class="line"><span class="comment"># print(re.findall(r&quot;.&quot;, st))  # 没有匹配到\n</span></span><br><span class="line"><span class="comment"># 获取 \n 特殊数据，特殊处理</span></span><br><span class="line"><span class="comment"># | 或运算， 匹配所有或者换行符</span></span><br><span class="line"><span class="comment"># print(re.findall(r&quot;.|\n&quot;, st))</span></span><br><span class="line"><span class="comment"># 只匹配.</span></span><br><span class="line"><span class="comment"># \取消转义：取消掉匹配所有的特殊功能，只保留单纯的字符 &quot;.&quot;</span></span><br><span class="line"><span class="comment"># print(re.findall(r&quot;\.&quot;, st))</span></span><br><span class="line"><span class="comment"># print(re.findall(r&quot;\\&quot;, st))</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">单词边界</span></span><br><span class="line"><span class="string">\b(字符串两端不是正规字符，就会认为是单词边界)</span></span><br><span class="line"><span class="string">正规字符： 数字、字母、下划线、中文</span></span><br><span class="line"><span class="string">cemos$￥￥￥@yfa</span></span><br><span class="line"><span class="string">总结：</span></span><br><span class="line"><span class="string">    1、正规字符</span></span><br><span class="line"><span class="string">    2、有空格</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># st = &quot;This is cls15 2023.05.19 LiuMu 18 !_@#$%^……&amp;*|/\n&quot;</span></span><br><span class="line"><span class="comment"># print(re.findall(r&#x27;\bis\b&#x27;, st))  # 正规字符，后面有空格，匹配</span></span><br><span class="line"><span class="comment"># print(re.findall(r&#x27;\bi\b&#x27;, st))  # 正规字符，后面没有空格，不匹配</span></span><br><span class="line"><span class="comment"># print(re.findall(r&#x27;\bi&#x27;, st))  # 正规字符，前面有空格，匹配</span></span><br><span class="line"><span class="comment"># print(re.findall(r&#x27;\b!\b&#x27;, st))  # 不是正规字符，前面有空格，不匹配</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">特殊字符</span></span><br><span class="line"><span class="string">\d  匹配数字</span></span><br><span class="line"><span class="string">\D  匹配数字之外的</span></span><br><span class="line"><span class="string">\s  匹配空白字符（空字符）、空格、制表符、换行符</span></span><br><span class="line"><span class="string">\.  匹配点本身</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">匹配次数</span></span><br><span class="line"><span class="string">*   随意次数  &#123;0,&#125;</span></span><br><span class="line"><span class="string">+   至少一次  &#123;1,&#125;</span></span><br><span class="line"><span class="string">?   最多一次</span></span><br><span class="line"><span class="string">&#123;最少次数,最大次数&#125;  双闭区间</span></span><br><span class="line"><span class="string">    &#123;a&#125; 默认是最大次数</span></span><br><span class="line"><span class="string">    &#123;a,&#125; 最大次数为无穷大</span></span><br><span class="line"><span class="string">    &#123;,a&#125; 默认最小次数为0</span></span><br><span class="line"><span class="string">    默认贪婪模式，按最大限度拿取，不够了再取剩下的小的</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># st = &quot;ab ac bd abc abbbbbb&quot;</span></span><br><span class="line"><span class="comment"># print(re.findall(r&quot;ab&#123;0,3&#125;&quot;, st))</span></span><br><span class="line"><span class="comment"># print(re.findall(r&quot;ab&#123;0,1&#125;&quot;, st))</span></span><br><span class="line"><span class="comment"># st = &quot;bbbbbbbbbbb&quot;</span></span><br><span class="line"><span class="comment"># print(re.findall(r&quot;b&#123;1,3&#125;&quot;, st))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># *   任意次数</span></span><br><span class="line"><span class="comment"># st = &quot;ab ac bd abc abbbbbb&quot;</span></span><br><span class="line"><span class="comment"># print(re.findall(r&quot;ab*c&quot;, st))  # 只要有a和c 中间的b次数不限</span></span><br><span class="line"><span class="comment"># print(re.findall(r&quot;ab+c&quot;, st))  # 有a和c 中间的b必须至少有1次</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">贪婪模式与非贪婪模式</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># st = &quot;&lt;123&gt;abc&lt;456&gt;def&lt;789&gt;&quot;</span></span><br><span class="line"><span class="comment"># print(re.findall(r&quot;&lt;.*?&gt;&quot;, st))  # 非贪婪模式</span></span><br><span class="line"><span class="comment"># print(re.findall(r&quot;&lt;.*&gt;&quot;, st))  # 贪婪模式</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">集合</span></span><br><span class="line"><span class="string">[A-Z]  匹配所有英文字母大写</span></span><br><span class="line"><span class="string">[a-z]  匹配所有英文字母小写</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># st = &quot;This is python 2023.05.19 流木 18 !_@#$%^……&amp;*|/\n&quot;</span></span><br><span class="line"><span class="comment"># print(re.findall(r&quot;[th]&quot;, st))  # 是 t h个体而非 th 整体</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">分组匹配</span></span><br><span class="line"><span class="string">()  表示分组， 默认是保留括号内匹配上的内容</span></span><br><span class="line"><span class="string">    只匹配括号里面，外面不会匹配</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">st = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;a class=&quot;m_on&quot; href=&quot;//www.4399.com/&quot;&gt;首页&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;/flash_fl/2_1.htm&quot;&gt;动作&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;/flash_fl/3_1.htm&quot;&gt;体育&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;/flash_fl/5_1.htm&quot;&gt;益智&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;/flash_fl/4_1.htm&quot;&gt;射击&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;/flash_fl/6_1.htm&quot;&gt;冒险&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;/flash_fl/7_1.htm&quot;&gt;棋牌&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;/flash_fl/8_1.htm&quot;&gt;策略&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;/flash_fl/12_1.htm&quot;&gt;休闲&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;/special/195.htm&quot;&gt;女生&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;/flash_fl/16_1.htm&quot;&gt;装扮&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;/flash_fl/13_1.htm&quot;&gt;儿童&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;/special/90.htm&quot;&gt;过关&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;/special/1.htm&quot;&gt;双人&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a class=&quot;gp&quot; href=&quot;//www.4399dmw.com/donghua/&quot;&gt;动画片&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a class=&quot;gp&quot; href=&quot;//www.3000.com/&quot;&gt;闪艺互动&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a class=&quot;gp&quot; href=&quot;//www.4399.cn/&quot;&gt;手机游戏&lt;/a&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;&lt;a href=&quot;/special/1.htm&quot;&gt;.*?&lt;/a&gt;&#x27;</span>, st))</span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;&lt;a href=&quot;/special/1.htm&quot;&gt;(.*?)&lt;/a&gt;&#x27;</span>, st))  <span class="comment"># 只留下() 里面的数据</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;&gt;.*?&lt;&#x27;</span>, st))  <span class="comment"># 只留下() 里面的数据</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;&gt;(.*?)&lt;&#x27;</span>, st))  <span class="comment"># 只留下() 里面的数据</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python理论</tag>
      </tags>
  </entry>
  <entry>
    <title>生成器装饰器和异常</title>
    <url>/2023/07/08/python%E7%90%86%E8%AE%BA/%E7%94%9F%E6%88%90%E5%99%A8%E8%A3%85%E9%A5%B0%E5%99%A8%E5%92%8C%E5%BC%82%E5%B8%B8/</url>
    <content><![CDATA[<p>python的第10节课笔记（基础高级）</p>
<span id="more"></span>

<h2 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h2><p>什么是生成器———–&gt;生成器本质上是迭代器<br>生成器作用———–&gt;当我们的数据特别大的时候建立一个列表的储存数据就会很占内存的。这时生成器就派上用场了。它是占计算机资源相对较小的一种方法。<br>应用场景———–&gt;处理数学中有很多算法是无限穷举的问题（比如自然数）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">共同：</span><br><span class="line">    都可以使用for进行遍历</span><br><span class="line">迭代器：</span><br><span class="line">    可以一次性直接打印查看</span><br><span class="line">生成器：</span><br><span class="line">    直接打印返回出来的是内存地址</span><br><span class="line">    需要使用__next__方法进行一一取值</span><br><span class="line">    如果已经取完将报错</span><br><span class="line"></span><br><span class="line">生成器的本质就是一个迭代器</span><br><span class="line"></span><br><span class="line">dir() 函数，查看这个对象类里面拥有的方法</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列表推导式</span></span><br><span class="line">list1 = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list1:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 元组生成器</span></span><br><span class="line">tu1 = (n <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>))</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> tu1:</span><br><span class="line">    <span class="built_in">print</span>(n)</span><br><span class="line"><span class="built_in">print</span>(tu1)</span><br><span class="line"><span class="built_in">print</span>(tu1.__next__())</span><br><span class="line"><span class="built_in">print</span>(tu1.__next__())</span><br><span class="line"><span class="built_in">print</span>(tu1.__next__())</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">可迭代对象： 相对于普通方法多了一个__iter__()</span><br><span class="line">iter(): 将可迭代对象转化为迭代器</span><br><span class="line">迭代器： 同时拥有__iter__()和 __next__()</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 区别dir()</span></span><br><span class="line">n = <span class="number">1</span>  <span class="comment"># 数值</span></span><br><span class="line">sn = <span class="built_in">set</span>(<span class="built_in">dir</span>(n))</span><br><span class="line"><span class="built_in">print</span>(sn)</span><br><span class="line"></span><br><span class="line">li = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">sli = <span class="built_in">set</span>(<span class="built_in">dir</span>(li))</span><br><span class="line"><span class="built_in">print</span>(sli)</span><br><span class="line"></span><br><span class="line">tu = (n <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>))</span><br><span class="line">stu = <span class="built_in">set</span>(<span class="built_in">dir</span>(tu))</span><br><span class="line"><span class="built_in">print</span>(stu)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sli - sn)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;******&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(stu - sn)</span><br><span class="line"></span><br><span class="line">li = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line">li_iter = <span class="built_in">iter</span>(li)</span><br><span class="line"><span class="built_in">print</span>(li_iter)  <span class="comment"># 可迭代器</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(li_iter))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(li_iter))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(li_iter))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(li_iter))</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">生成器</span><br><span class="line">return： 具有结束函数的功能</span><br><span class="line">yield: 具有返回函数值的功能， 但是不是结束函数，只是暂停</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ef func():</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">3</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = func()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*************&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 生成器对象</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(res)) <span class="comment"># 一一取值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(res))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(res))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(res))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(res))  <span class="comment"># 超出了迭代范围，报错</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">场景： 兔子数列</span><br><span class="line">1 1 2 3 5 8 13 21 34</span><br><span class="line">项数： 第几个数，数的顺序</span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将a 和 b 的值进行互换</span></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line"><span class="comment"># 新变量名 = 前面保存有值的变量</span></span><br><span class="line">a, b = b, a  <span class="comment"># a, b = 2, 1</span></span><br><span class="line"><span class="comment">#原理： 变量名重复，新值覆盖旧值</span></span><br><span class="line"><span class="built_in">print</span>(a, b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rabbit</span>(<span class="params">end</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param end: 总项数</span></span><br><span class="line"><span class="string">    :return: 两数之和</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    b = <span class="number">1</span></span><br><span class="line">    n = <span class="number">0</span>  <span class="comment"># 初始化项数</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; end:</span><br><span class="line">        <span class="comment"># 第一位是原来的第二位， 第二位是前面两个数的和</span></span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        <span class="keyword">yield</span> b</span><br><span class="line">        n += <span class="number">1</span>  <span class="comment"># 项数自增条件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = rabbit(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(res))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(res))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(res))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(res))</span><br></pre></td></tr></table></figure>



<h2 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h2><p>刚才一个小小的改动就让函数变得不一样了，但终究改变了函数，能不能不改变函数，给一个函数增加功能呢？</p>
<h3 id="装饰器介绍"><a href="#装饰器介绍" class="headerlink" title="装饰器介绍"></a>装饰器介绍</h3><p>什么是装饰器———–&gt;装饰器本质上是一个python函数<br>装饰器作用———–&gt;可以在不改动原函数的前提下，对函数的功能进行扩充。<br>应用场景———–&gt;引入日志；函数执行时间统计；执行函数前预备处理；执行函数后清理功能；权限校验；缓存。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">装饰器的场景：在不改变原有代码的情况下又想改变功能</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;欢迎**登录………………&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_user</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;add……ing…………&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">del_user</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;del……ing…………&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test = login</span><br><span class="line"><span class="built_in">print</span>(test)</span><br><span class="line">test()  <span class="comment"># login()</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">闭包</span><br><span class="line">作用：保护内部函数，让内部函数不会被外部直接修改</span><br><span class="line">1、嵌套函数里面</span><br><span class="line">2、外部函数将内部函数名的函数名返回</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">out_fun</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;out function&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">in_fun</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;in function&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> in_fun</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = out_fun()  <span class="comment"># in_func</span></span><br><span class="line">res()  <span class="comment"># in_func()</span></span><br></pre></td></tr></table></figure>

<h3 id="装饰器的定义"><a href="#装饰器的定义" class="headerlink" title="装饰器的定义"></a>装饰器的定义</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">装饰器的定义</span><br><span class="line">1、给外部函数加上一个必备参数</span><br><span class="line">2、将这个必备参数加上括号写在内部函数里面</span><br><span class="line">3、调用外部函数的时候，将要执行的函数名作为实参传入</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要装饰的函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_user</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;add……ing…………&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 装饰器</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">out_fun</span>(<span class="params">par</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param par: add_user</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;out function&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">in_fun</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;in function&quot;</span>)</span><br><span class="line">        par()  <span class="comment"># add_user()</span></span><br><span class="line">    <span class="keyword">return</span> in_fun</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = out_fun(add_user)  <span class="comment"># in_func</span></span><br><span class="line">res()  <span class="comment"># in_func()</span></span><br><span class="line">add_user()</span><br></pre></td></tr></table></figure>

<h3 id="简便调用"><a href="#简便调用" class="headerlink" title="简便调用"></a>简便调用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">简便调用</span><br><span class="line">def 装饰器():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">@装饰器名字</span><br><span class="line">def 需要装饰的函数():</span><br><span class="line">    pass</span><br><span class="line">如何修饰带有参数的函数</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 装饰器</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">out_fun</span>(<span class="params">par</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param par: add_user</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;out function&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">in_fun</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;in function&quot;</span>)</span><br><span class="line">        par()  <span class="comment"># add_user()</span></span><br><span class="line">    <span class="keyword">return</span> in_fun</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要装饰的函数</span></span><br><span class="line"><span class="meta">@out_fun</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_user</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;add……ing…………&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">add_user()</span><br></pre></td></tr></table></figure>

<h3 id="带有参数的装饰器"><a href="#带有参数的装饰器" class="headerlink" title="带有参数的装饰器"></a>带有参数的装饰器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">带有参数的装饰器:</span><br><span class="line">装饰带有参数的函数时，装饰器内部函数需要定义不定长参数</span><br><span class="line">即内部函数以及内部函数里面的参数()都需要加上 *args 以及 **kwargs</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 装饰器</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">out_fun</span>(<span class="params">par</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param par: add_user</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;out function&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">in_fun</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;in function&quot;</span>)</span><br><span class="line">        par(*args, **kwargs)  <span class="comment"># add_user()</span></span><br><span class="line">    <span class="keyword">return</span> in_fun</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@out_fun</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_sum</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;两数之和：&quot;</span>,a + b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">my_sum(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<h3 id="带有返回值的装饰器"><a href="#带有返回值的装饰器" class="headerlink" title="*带有返回值的装饰器"></a>*带有返回值的装饰器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">带有返回值的装饰器:</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#装饰器</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">out_fun</span>(<span class="params">par</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param par: add_user</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;out function&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">in_fun</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;in function&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> par(*args, **kwargs)  <span class="comment"># 将需要装饰的函数的返回值，返回到外部函数</span></span><br><span class="line">    <span class="keyword">return</span> in_fun</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@out_fun</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_sum</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;两数之和：<span class="subst">&#123;a + b&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(my_sum(<span class="number">1</span>, <span class="number">2</span>))</span><br></pre></td></tr></table></figure>

<h3 id="内置装饰器"><a href="#内置装饰器" class="headerlink" title="内置装饰器"></a>内置装饰器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">内置装饰器</span><br><span class="line">@property   让方法的调用就像属性一样，不需要加括号（加了则报错）</span><br><span class="line">@classmethod  定义方法的时候，自动补全类</span><br><span class="line">@staticmethod  不再自动补全self或者cls</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;play&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">study</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;study&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="built_in">print</span>(cls)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lm = Person(<span class="string">&#x27;lm&#x27;</span>, <span class="number">18</span>)</span><br><span class="line"><span class="comment"># lm.play</span></span><br></pre></td></tr></table></figure>



<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p>python中一般使用try-except语句处理异常<br>try语句用于检测异常<br>except语句用于捕获异常</p>
<p>try里面的代码如果出现异常<br>就会执行except里面的代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">try:</span><br><span class="line">    可能会遇到报错的代码</span><br><span class="line">except:</span><br><span class="line">    报错的情况之下执行</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数：&quot;</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(a), a)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入有误！！&quot;</span>)</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">报告一下具体异常类型</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数：&quot;</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(a), a)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:  <span class="comment"># 接收异常并取别名为e</span></span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">断言</span><br><span class="line">assert 是断言， 和 if 判断类似，只是判断为False 的时候会报错，触发</span><br><span class="line">AssertionError异常</span><br><span class="line"></span><br><span class="line">assert  表达式</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;断言前&quot;</span>)</span><br><span class="line"><span class="keyword">assert</span> <span class="number">1</span> == <span class="number">1.0</span>  <span class="comment"># 条件True,执行后面</span></span><br><span class="line"><span class="keyword">assert</span> <span class="number">1</span> == <span class="number">2.0</span>  <span class="comment"># 条件False, 报错</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;断言后&quot;</span>)</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">自定义异常</span><br><span class="line">raise 主动触发异常类</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TelNumError</span>(<span class="title class_ inherited__">Exception</span>):  <span class="comment"># 直接继承所有异常类的父类</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, msg</span>):</span><br><span class="line">        self.massage = msg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e = TelNumError(<span class="string">&quot;电话号码格式错误！！&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_tel</span>():</span><br><span class="line">    number = <span class="built_in">input</span>(<span class="string">&quot;请输入一个电话号码：&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> number[<span class="number">0</span>] == <span class="string">&quot;1&quot;</span> <span class="keyword">and</span> <span class="built_in">len</span>(number) == <span class="number">11</span> <span class="keyword">and</span> number.isdigit():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;是一个手机号！！&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;不是&quot;</span>)</span><br><span class="line">        <span class="comment"># 报错---&gt;电话号码错误！！</span></span><br><span class="line">        <span class="keyword">raise</span> TelNumError(<span class="string">f&quot;<span class="subst">&#123;number&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">is_tel()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_tel</span>():</span><br><span class="line">    number = <span class="built_in">input</span>(<span class="string">&quot;请输入一个电话号码：&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> number[<span class="number">0</span>] == <span class="string">&quot;1&quot;</span> <span class="keyword">and</span> <span class="built_in">len</span>(number) == <span class="number">11</span> <span class="keyword">and</span> number.isdigit():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;是一个手机号！！&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 报错---&gt;电话号码错误！！</span></span><br><span class="line">            <span class="keyword">raise</span> TelNumError(<span class="string">f&quot;<span class="subst">&#123;number&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">is_tel()</span><br></pre></td></tr></table></figure>

<h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><p>注意事项：</p>
<ol>
<li>try 后面必须跟上 except</li>
<li>except 只有在函数中才能使用 return</li>
<li>finally 不管是否发生异常，始终都会执行</li>
<li>raise 可以主动抛出异常</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">try:</span><br><span class="line">    可能会报错的代码</span><br><span class="line">except:</span><br><span class="line">    报错执行</span><br><span class="line">else:</span><br><span class="line">    不报错执行</span><br><span class="line">finally:</span><br><span class="line">    不管怎样都会执行</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数：&quot;</span>))</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:  <span class="comment"># 接收异常并取别名为e</span></span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(a), a)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;最终执行的代码！！！&quot;</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python理论</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象初级</title>
    <url>/2023/05/08/python%E7%90%86%E8%AE%BA/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%88%9D%E7%BA%A7/</url>
    <content><![CDATA[<p>python的第八节课笔记（基础高级）</p>
<span id="more"></span>

<h2 id="面向对象介绍"><a href="#面向对象介绍" class="headerlink" title="面向对象介绍"></a>面向对象介绍</h2><p>借鉴函数的封装思维，再次对函数和变量进行封装，来提高代码的复用性，通过这样的封装，把和人相关的变量、函数等放在了一起，只要找到这个部分代码，就能知道关于人已经定义了哪些变量和函数，为了便于区分，把用关键字 class 定义的代码块称为 类</p>
<p>注意：</p>
<ul>
<li>在类里面的变量称为类的属性，一般是名词性的东西</li>
<li>在类里面的函数称为类的方法，一般是动词性的东西</li>
<li>本质就是使用面向对象进行封装—封装成一个类</li>
<li>类定义的关键字： class</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">类的组成：  </span><br><span class="line">    类名  类的名称</span><br><span class="line">    属性  一般我们会使用初始化函数来进行定义，用于描述事物的特征</span><br><span class="line"></span><br><span class="line">    方法  就是放到类里面的函数而已，用于描述事物的行为</span><br></pre></td></tr></table></figure>

<p>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class 类名:</span><br><span class="line">       pass</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需求：</span><br><span class="line">定义一个15期班级的晓军同学</span><br><span class="line">定义一个15期班级的龙飞同学</span><br></pre></td></tr></table></figure>

<h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><p>没学面向对象之前，我们只能使用变量和函数来表示，很不方便</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#晓军同学的特性</span></span><br><span class="line">name = <span class="string">&quot;晓军&quot;</span></span><br><span class="line">age = <span class="number">28</span></span><br><span class="line">sex = <span class="string">&quot;男&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">study</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;热爱学习&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">play</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;喜欢打游戏&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">name = <span class="string">&quot;龙飞&quot;</span></span><br><span class="line">age = <span class="number">29</span></span><br><span class="line">sex = <span class="string">&quot;男&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">study</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;热爱学习&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">play</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;喜欢打游戏&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(age))</span><br></pre></td></tr></table></figure>

<p>学完后，可以将这些信息封装成一个类</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">cls15</span>:</span><br><span class="line">    name = <span class="string">&quot;龙飞&quot;</span></span><br><span class="line">    age = <span class="number">29</span></span><br><span class="line">    sex = <span class="string">&quot;男&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">study</span>(<span class="params">name</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>热爱学习&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">name</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>喜欢打游戏&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用类的属性  类名/类的对象.属性名</span></span><br><span class="line"><span class="built_in">print</span>(cls15.name)</span><br><span class="line"><span class="built_in">print</span>(cls15.age)</span><br><span class="line"><span class="built_in">print</span>(cls15.sex)</span><br><span class="line"><span class="comment"># 调用类的方法  类名/类的对象.方法</span></span><br><span class="line">cls15.play(cls15.name)</span><br><span class="line">cls15.study(cls15.name)</span><br></pre></td></tr></table></figure>

<h2 id="创建实例对象"><a href="#创建实例对象" class="headerlink" title="创建实例对象"></a>创建实例对象</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">面向对象的组成：</span><br><span class="line">    类：  只是一个概念，一个模板,比如汽车图纸</span><br><span class="line">    对象：由类生成（实例化）出来的具体的事物，比如汽车本身</span><br><span class="line">    类和对象是相对而言的</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创造一个类</span><br><span class="line">class 类名():</span><br><span class="line">    def __init__(self, 属性1, 属性2 )</span><br><span class="line">        self.变量名1 = 属性1</span><br><span class="line">        self.变量名2 = 属性2</span><br><span class="line"></span><br><span class="line">    def 方法名(self):</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">cls15</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, sex</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        self.sex = sex</span><br><span class="line">        <span class="built_in">print</span>(self.age)</span><br><span class="line">        <span class="built_in">print</span>(self)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">study</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.name&#125;</span>热爱学习&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.name&#125;</span>喜欢打游戏&quot;</span>)</span><br><span class="line">        </span><br><span class="line"><span class="comment">#实例化对象  变量 = 类名()</span></span><br><span class="line">lf = cls15(<span class="string">&quot;龙飞&quot;</span>, <span class="number">22</span>, <span class="string">&quot;男&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用属性： 对象.属性</span></span><br><span class="line"><span class="built_in">print</span>(lf)  <span class="comment"># 打印发现self与lf一致，说明，self就是龙飞同学</span></span><br><span class="line"><span class="built_in">print</span>(lf.name)</span><br><span class="line">xjy = cls15(<span class="string">&quot;小鲸鱼&quot;</span>, <span class="number">28</span>, <span class="string">&quot;男&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(xjy)  <span class="comment"># 打印发现self与xjy一致，说明，self就是小鲸鱼同学</span></span><br><span class="line"><span class="built_in">print</span>(xjy.name)</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用方法  对象.方法名()</span></span><br><span class="line">lf.play()</span><br><span class="line">xjy.study()</span><br><span class="line"></span><br><span class="line"><span class="comment">#举例</span></span><br><span class="line"><span class="comment">#对象名 = 类名()   实例化一个列表类</span></span><br><span class="line">a_list = <span class="built_in">list</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line"><span class="comment"># 对象名.方法()   调用类的方法</span></span><br><span class="line">a_list.append(<span class="string">&quot;a&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(a_list)</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">实例化对象： 类名()</span><br><span class="line">变量名 = 类名(属性值1, 属性值2)</span><br></pre></td></tr></table></figure>

<p><strong>init</strong> 是构造函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">初始化（构造）方法  __init__()</span><br><span class="line">    不需要调用,在对象被实例化的时候自定执行</span><br><span class="line">    构造方法和析构方法都是初始化方法</span><br><span class="line">    初始化方法里面的属性，可以被一整个类所使用的</span><br></pre></td></tr></table></figure>

<p>self.对象自身<br>当某个对象调用方法时，会自动把对象(对象名)传入self<br>对象通过.操作符来调用属性和方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">self</span><br><span class="line">    1、就是对象本身（）</span><br><span class="line">    2、谁调用的，self就是谁</span><br></pre></td></tr></table></figure>



<h2 id="类的析构函数"><a href="#类的析构函数" class="headerlink" title="类的析构函数"></a>类的析构函数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对象的生命周期  被创建----&gt;被释放</span><br><span class="line">构造函数：__init__</span><br><span class="line">    当对象被创建的时候自动执行</span><br><span class="line">析构函数：__del__</span><br><span class="line">    当对象从内存中被释放的时候自动执行</span><br><span class="line">        1、代码全部执行完毕</span><br><span class="line">        2、手动删除该对象（变量）</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">cls15</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;hello , 我诞生了&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;bey，我要走了！&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;这是一个函数&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lm = cls15()</span><br><span class="line"><span class="comment"># lm.func()</span></span><br><span class="line"><span class="keyword">del</span> lm</span><br><span class="line"><span class="comment"># lm.func()</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;ing……………………&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="面向对象三大特性"><a href="#面向对象三大特性" class="headerlink" title="面向对象三大特性"></a>面向对象三大特性</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">封装： 把属性和方法都放在类里面</span><br><span class="line">继承:  子类表现出和父类一致的地方</span><br><span class="line">多态:  子类表现出和父类不一致的地方</span><br></pre></td></tr></table></figure>

<h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">继承的语法</span><br><span class="line">class 子类(父类):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">特点：子类可以拥有父类的一切属性和方法</span><br><span class="line"></span><br><span class="line">在Python3里面，所有的类都默认继承object类。</span><br><span class="line">object又称为基类</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Ape</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">walk</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;可以直立行走&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">work</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;可以使用工具&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#继承</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Human</span>(<span class="title class_ inherited__">Ape</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xx = Ape()</span><br><span class="line">xx.walk()</span><br><span class="line"></span><br><span class="line">gf = Human()</span><br><span class="line">gf.walk()  <span class="comment"># Human没有这个walk方法，也能直立行走</span></span><br><span class="line">gf.work()</span><br><span class="line"><span class="comment">#原因：Human继承了Ape</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">多继承与重写</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">GrandFather</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">big_money</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;GrandFather 有 1000万&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">company</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;鞋厂&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Father</span>(<span class="title class_ inherited__">GrandFather</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">little_money</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Father 有 10万&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span>(<span class="title class_ inherited__">Father</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">no_money</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;有1000块&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化应该son的对象</span></span><br><span class="line">lm = Son()</span><br><span class="line">lm.no_money()  <span class="comment"># 自己有用自己的</span></span><br><span class="line">lm.little_money()  <span class="comment"># 自己没有用父类的</span></span><br><span class="line">lm.big_money()  <span class="comment"># 父类没有，用祖父类</span></span><br><span class="line">lm.big_big_money()  <span class="comment"># 大家都没有，报错</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看类的继承关系 __mro__</span></span><br><span class="line"><span class="built_in">print</span>(Son.__mro__)  <span class="comment"># 这里面都找不着就报错</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">多继承：</span><br><span class="line">    优先使用离自己近的</span><br><span class="line">    在同一级里面,左边优先原则</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Father1</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">money</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;GrandFather 有 1000万&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">company</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;鞋厂&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Father2</span>(<span class="title class_ inherited__">Father1</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">money</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Father 有 10万&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意语法，这个括号里的顺序是精华所在</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span>(Father2, Father1):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#实例化应该son的对象</span></span><br><span class="line">lm = Son()</span><br><span class="line">lm.money()</span><br></pre></td></tr></table></figure>

<h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">多态：名字一样但功能不一样</span><br><span class="line">    子类和父类方法或者属性名一致的时候，会优先使用自己的</span><br><span class="line">重写：</span><br><span class="line">重新继承父类的方法（即都要，都表现出来）：</span><br><span class="line">    super().方法名()</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">GrandFather</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">big_money</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;GrandFather 有 1000万&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">company</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;鞋厂&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Father</span>(<span class="title class_ inherited__">GrandFather</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">little_money</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Father 有 10万&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span>(<span class="title class_ inherited__">Father</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">no_money</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;有1000块&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">company</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;电竞公司&quot;</span>)</span><br><span class="line">        <span class="comment"># 重新调用父类的功能</span></span><br><span class="line">        <span class="built_in">super</span>().company()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化应该son的对象</span></span><br><span class="line">lm = Son()</span><br><span class="line">lm.company()  <span class="comment"># 优先使用自己的</span></span><br><span class="line"><span class="comment"># 贪心： 鞋厂和电竞公司都想要</span></span><br><span class="line"><span class="comment"># 解决： super().方法名</span></span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#多态：名字一样但功能不一样</span></span><br><span class="line"><span class="comment">#如何理解这个概念，以下例子</span></span><br><span class="line"><span class="comment">#在面向对象里只是子类给父类覆盖掉了</span></span><br><span class="line">lm = <span class="string">&quot;流木&quot;</span>  <span class="comment"># 变量名</span></span><br><span class="line"><span class="built_in">print</span>(lm)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lm</span>():  <span class="comment"># 函数名</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1234</span>)</span><br><span class="line"></span><br><span class="line">lm()</span><br></pre></td></tr></table></figure>

<h3 id="多态练习题"><a href="#多态练习题" class="headerlink" title="多态练习题"></a>多态练习题</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">多态</span><br><span class="line">已知内存的二进制的转换如下：</span><br><span class="line">1byte(B) = 8 bits(b) 字节；1KB = 2^10B = 1024  千字节</span><br><span class="line">1MB = 2^10KB  兆字节； 1GB = 2^10MB  千兆字节</span><br><span class="line">1TB = 2^10GB</span><br><span class="line">1)、现在有一个上课回放视频，大概200000KB, 假设某个网盘的下载速度为2MB/s, </span><br><span class="line">    请定义一个函数，计算大概下载所需时间。</span><br><span class="line">2）、现在网盘对于VIP用户的下载速度为5.5MB/s, </span><br><span class="line">    请使用面向对象分别计算普通用户与VIP用户的下载速度，使用多态完成</span><br><span class="line">分析：创建网盘类，有下载的方法，拥有两个子类：</span><br><span class="line">普通用户（可以下载，速度为2M/s）与VIP用户(可以下载，速度为5.5M/s)</span><br><span class="line"></span><br><span class="line">总结：</span><br><span class="line">    共同点使用父类封装</span><br><span class="line">    个性点,使用多态自定义</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 第一题</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">kb_mb</span>(<span class="params">ks</span>): <span class="comment"># 定义一个转换单位的方法</span></span><br><span class="line">    mb_size = ks / <span class="number">1024</span></span><br><span class="line">    <span class="keyword">return</span> mb_size  <span class="comment"># 返回转换后的单位</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">speed</span>(<span class="params">ms</span>):  <span class="comment"># 定义计算下载速度的方法</span></span><br><span class="line">    <span class="comment"># 总时长 = 大小/速度</span></span><br><span class="line">    sp = ms / <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;下载所需时长为<span class="subst">&#123;sp&#125;</span>秒&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">size = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你要下载的大小（kB）:&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(speed(kb_mb(size)))</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 第二题</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WangPan</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">kb_mb</span>(<span class="params">self, xz</span>):  <span class="comment"># 定义一个转换单位的方法</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :param xz: 原有单位</span></span><br><span class="line"><span class="string">        :return:  转换后的单位</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        mb_size = xz / <span class="number">1024</span></span><br><span class="line">        <span class="keyword">return</span> mb_size  <span class="comment"># 返回转换后的单位</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">down_load</span>(<span class="params">self</span>):  <span class="comment"># 定义计算下载速度的方法</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PuTong</span>(<span class="title class_ inherited__">WangPan</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, xz</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.xz = xz</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.name&#125;</span>普通用户正在下载，大小为<span class="subst">&#123;self.xz&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">down_load</span>(<span class="params">self</span>):</span><br><span class="line">        ms = self.kb_mb(self.xz)  <span class="comment"># 直接调用父类的转换单位</span></span><br><span class="line">        sp = ms / <span class="number">2</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;下载所需时长为<span class="subst">&#123;sp&#125;</span>秒&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VIP</span>(<span class="title class_ inherited__">WangPan</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, xz</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.xz = xz</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;尊贵的<span class="subst">&#123;self.name&#125;</span>用户正在下载，大小为<span class="subst">&#123;self.xz&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">down_load</span>(<span class="params">self</span>):</span><br><span class="line">        ms = self.kb_mb(self.xz)  <span class="comment"># 直接调用父类的转换单位</span></span><br><span class="line">        sp = ms / <span class="number">5.5</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;下载所需时长为<span class="subst">&#123;sp&#125;</span>秒，请稍等片刻&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pt = PuTong(<span class="string">&quot;普通&quot;</span>,<span class="number">200000</span>)</span><br><span class="line">pt.down_load()</span><br><span class="line">vip = VIP(<span class="string">&quot;vip&quot;</span>,<span class="number">200000</span>)</span><br><span class="line">vip.down_load()</span><br></pre></td></tr></table></figure>



<h3 id="私有属性和私有方法"><a href="#私有属性和私有方法" class="headerlink" title="私有属性和私有方法"></a>私有属性和私有方法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">私有属性和私有方法也可以继承吗？</span><br><span class="line">__属性名</span><br><span class="line">__方法名</span><br><span class="line"></span><br><span class="line">Python当中没有绝对的私有，可以通过中间方法进行调用</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Father</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.name = <span class="string">&quot;孙涛&quot;</span></span><br><span class="line">        self.__age = <span class="number">18</span>  <span class="comment"># 私有属性</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test1</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;test1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__test2</span>(<span class="params">self</span>):  <span class="comment"># 私有方法</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;test2&quot;</span>)</span><br><span class="line">     <span class="comment">#内鬼，即中间方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">neigui</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.__age)  <span class="comment"># 在自己类里面可以调用私有属性</span></span><br><span class="line">        self.__test2()  <span class="comment"># 在自己类里面可以调用私有属性</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span>(<span class="title class_ inherited__">Father</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lm = Son()</span><br><span class="line"><span class="built_in">print</span>(lm.name)  <span class="comment"># 属性可以继承</span></span><br><span class="line"><span class="comment"># print(lm.__age)  # 私有属性不可以继承</span></span><br><span class="line">lm.test1()</span><br><span class="line"><span class="comment"># lm.__test2()  # 私有方法不可以继承</span></span><br><span class="line">lm.neigui()</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python理论</tag>
      </tags>
  </entry>
  <entry>
    <title>初次建站总结</title>
    <url>/2022/09/04/wordpress/%E5%88%9D%E6%AC%A1%E5%BB%BA%E7%AB%99%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="一，基础配置"><a href="#一，基础配置" class="headerlink" title="一，基础配置"></a>一，基础配置</h2><p>服务器：轻量应用服务器（阿里云）</p>
<p>服务器后台：阿里云控制台</p>
<p>服务器管理：宝塔面板</p>
<p>域名：阿里云购买的</p>
<p>网站后台：WordPress</p>
<p>网站模板：来自Github</p>
<h2 id="二，建站教程"><a href="#二，建站教程" class="headerlink" title="二，建站教程"></a>二，建站教程</h2><p><a href="https://www.youtube.com/watch?v=AWBbuS1bwCY">https://www.youtube.com/watch?v=AWBbuS1bwCY</a></p>
<h2 id="三，网站搬家"><a href="#三，网站搬家" class="headerlink" title="三，网站搬家"></a>三，网站搬家</h2><p><a href="https://themeforwp.net/moving-wordpress-with-baota/">https://themeforwp.net/moving-wordpress-with-baota/</a></p>
<h2 id="四，关键词解释"><a href="#四，关键词解释" class="headerlink" title="四，关键词解释"></a>四，关键词解释</h2><p><strong>1.WordPress是什么？</strong></p>
<p>WordPress是使用<a href="https://baike.baidu.com/item/PHP/9337">PHP</a>语言开发的博客平台，用户可以在支持PHP和MySQL数据库的<a href="https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8/100571">服务器</a>上架设属于自己的网站。也可以把 WordPress当作一个<a href="https://baike.baidu.com/item/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/2683135">内容管理系统</a>（CMS）来使用。</p>
<h4 id="2-什么是宝塔面板"><a href="#2-什么是宝塔面板" class="headerlink" title="2. 什么是宝塔面板"></a>2. 什么是宝塔面板</h4><p>宝塔面板是一款服务器管理软件，以操作简便，配置简单而闻名，它的优点有但不限于:可以通过web端直接管理服务器；拥有图形界面；还可一键配置服务器环境……林林总总不一而足，总结起来一句话：即对新手极度友好，又可满足许多老鸟的需求</p>
]]></content>
      <categories>
        <category>网站探索</category>
      </categories>
      <tags>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象高级</title>
    <url>/2023/05/08/python%E7%90%86%E8%AE%BA/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%AB%98%E7%BA%A7/</url>
    <content><![CDATA[<p>python的第九节课笔记（基础高级）</p>
<span id="more"></span>

<p>本节课除了魔法方法，其他的了解即可</p>
<h2 id="常用内置函数"><a href="#常用内置函数" class="headerlink" title="常用内置函数"></a>常用内置函数</h2><h3 id="属性访问函数"><a href="#属性访问函数" class="headerlink" title="属性访问函数"></a>属性访问函数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hasattr 判断属性是否存在</span><br><span class="line">    hasattr(对象,&quot;属性名&quot;)   属性名需要引号包裹</span><br><span class="line">    存在返回True 不存在返回False</span><br><span class="line">getattr    得到属性值，没有则报错</span><br><span class="line">setattr    设置属性值，有则改无则增</span><br><span class="line">    setattr(对象,&quot;属性名&quot;, &quot;值&quot;)</span><br><span class="line">    存在则修改，不存在则新增</span><br><span class="line">delattr    删除属性</span><br><span class="line">    delatrr(对象,&quot;属性名&quot;)</span><br><span class="line">    删除对象对应的属性</span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创造一个人类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, sex</span>):</span><br><span class="line">        <span class="comment"># self.属性名 = 属性的值</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        self.sex = sex</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">paly</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.name&#125;</span>是一个<span class="subst">&#123;self.sex&#125;</span>孩子，喜欢打游戏&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">study</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>，今年<span class="subst">&#123;self.age&#125;</span>岁了，正在上学&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lf = Person(<span class="string">&quot;冷风&quot;</span>, <span class="number">28</span>, <span class="string">&quot;男&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(lf.name)</span><br><span class="line"><span class="comment">#print(lf.sg)  # 没有这个属性，报错</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hasattr</span>(lf, <span class="string">&quot;sg&quot;</span>))  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hasattr</span>(lf, <span class="string">&quot;sex&quot;</span>))  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">setattr</span>(lf, <span class="string">&quot;sex&quot;</span>, <span class="string">&quot;女&quot;</span>)  <span class="comment"># 没有返回值，直接更改对象的参数</span></span><br><span class="line"><span class="built_in">setattr</span>(lf, <span class="string">&quot;sg&quot;</span>, <span class="string">&quot;188&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(lf.sex)</span><br><span class="line"><span class="built_in">print</span>(lf.sg)</span><br><span class="line"><span class="built_in">delattr</span>(lf, <span class="string">&quot;sg&quot;</span>)</span><br><span class="line"><span class="built_in">delattr</span>(lf, <span class="string">&quot;sex&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(lf.sex)</span><br><span class="line"><span class="built_in">print</span>(lf.sg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1、判断属性是否存在</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">hasattr</span>(lf, <span class="string">&quot;sg&quot;</span>):</span><br><span class="line">    <span class="comment"># 存在，获取属性值</span></span><br><span class="line">    <span class="built_in">getattr</span>(lf, <span class="string">&quot;sg&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:  <span class="comment"># 不存在---&gt;设置属性值</span></span><br><span class="line">    <span class="built_in">setattr</span>(lf,<span class="string">&quot;sg&quot;</span>, <span class="number">188</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(lf.sg)</span><br><span class="line"><span class="built_in">print</span>(lf.tz)</span><br></pre></td></tr></table></figure>



<h3 id="对象关系方法"><a href="#对象关系方法" class="headerlink" title="对象关系方法"></a>对象关系方法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对象关系属性</span><br><span class="line"></span><br><span class="line">issubclass  判断第一个类是否继承于后面类  </span><br><span class="line">isinstance  判断实例是否是后面的实例， 考虑继承关系</span><br><span class="line">is          不考虑继承关系</span><br><span class="line">type 也可以判断，但是只能判断单个类</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Ape</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">Ape</span>):  <span class="comment"># 继承Ape类</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例化对象</span><br><span class="line">monkey = Ape()</span><br><span class="line">xjy = Person()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(monkey), <span class="built_in">type</span>(xjy))  <span class="comment">#判断是什么类</span></span><br><span class="line"><span class="comment"># 判断xjy 是否属于 Ape 类</span></span><br><span class="line"><span class="built_in">print</span>(xjy <span class="keyword">is</span> Ape)  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(xjy, Ape))  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">issubclass</span>(Person, Ape))  <span class="comment"># 人类由猿类继承，True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">issubclass</span>(Ape, Person))   <span class="comment">#False</span></span><br></pre></td></tr></table></figure>





<h2 id="属性调用过程"><a href="#属性调用过程" class="headerlink" title="属性调用过程"></a>属性调用过程</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">属性的调用顺序</span><br></pre></td></tr></table></figure>

<p>当实例调用一个不存在的属性的时候，会发生报错，<br>但是如果类中增加__getattr__方法，则不会报错，而是自动执行此方法内的程序<br>__getattr__：必须要有两个参数</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230705082535.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, sex</span>):</span><br><span class="line">        <span class="comment"># self.属性名 = 属性的值</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        self.sex = sex</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getattr__</span>(<span class="params">self, item</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        当出现不存在的时候，会自动调用</span></span><br><span class="line"><span class="string">        :param item: 当前属性</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;没有这个属性&quot;</span>, item</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">qy = Person(<span class="string">&quot;青云&quot;</span>, <span class="number">18</span>, <span class="string">&quot;女&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(qy.sg)  <span class="comment">#（‘没有这个属性’，‘sg’）</span></span><br><span class="line"><span class="built_in">print</span>(qy.name)   <span class="comment">#青云</span></span><br></pre></td></tr></table></figure>



<h2 id="魔法方法"><a href="#魔法方法" class="headerlink" title="*魔法方法"></a>*魔法方法</h2><p>Python中很多内置方法左右两边都是两个下划线中间一个英文单词，把这种方法都称之为魔法方法<br>魔法方法：在特殊场景下由python解释器自动调用，完成某些功能</p>
<p>__new__：<br>在实例化对象的时候自动调用(最先调用)<br>功能：创建实例对象<br>__init__：<br>在实例化对象的时候自动调用<br>功能：实例对象属性的初始化</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">魔法方法：</span><br><span class="line">    调用:不需要手动调用，特定场景自动执行</span><br><span class="line">    定义： __方法名__</span><br><span class="line"></span><br><span class="line">__new__</span><br><span class="line">    场景  在对象要被实例化的时候</span><br><span class="line">    功能  创造一个实例化对象</span><br><span class="line">__init__</span><br><span class="line">    场景  对象被实例化之后</span><br><span class="line">    功能  初始化对象属性</span><br><span class="line">__str__</span><br><span class="line">    场景  打印对象的时候执行</span><br><span class="line">    功能  修改打印对象名的时候的返回值</span><br><span class="line">__repr__</span><br><span class="line">    场景 引用对象的时候执行</span><br><span class="line">__del__</span><br><span class="line">    场景  对象被释放的时候执行</span><br><span class="line">    功能  删除</span><br><span class="line"></span><br><span class="line">引用对象：通过对象名访问对象的值</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Lei</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        cls :代指当前的类</span></span><br><span class="line"><span class="string">        self:代指当前对象</span></span><br><span class="line"><span class="string">        # new方法里面原来有很多代码帮助我们创建对象</span></span><br><span class="line"><span class="string">        # 子类和父类重名，覆盖了父类的功能</span></span><br><span class="line"><span class="string">        # 解决： 重新调用父类功能 super()，并且将创建好的对象返回出去</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;创建对象的方法&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>().__new__(cls)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        <span class="comment"># self.属性名 = 属性的值</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;初始化属性值的方法&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># def __str__(self):</span></span><br><span class="line">    <span class="comment">#     return &quot;hello&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># def __repr__(self):</span></span><br><span class="line">    <span class="comment">#     return &quot;this is reper&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># st = Lei(&quot;孙涛&quot;, 22)</span></span><br><span class="line"><span class="comment"># print(st)  # 直接打印对象，返回的是内存地址</span></span><br></pre></td></tr></table></figure>



<h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">单例模式： 只有一个对象</span><br><span class="line">        操作基于对象属性值的更改</span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Lei</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        判断这个类是否有对象</span></span><br><span class="line"><span class="string">        没有： 重新调用父类方法创造对象</span></span><br><span class="line"><span class="string">        有： 不需要重新调用，由于已经重写了父类方法，本身就没有对象会被创造出来</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">hasattr</span>(cls, <span class="string">&quot;_instance&quot;</span>):  <span class="comment"># 没有对象</span></span><br><span class="line">            cls._instance = <span class="built_in">super</span>().__new__(cls)</span><br><span class="line">        <span class="keyword">return</span> cls._instance</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        <span class="comment"># self.属性名 = 属性的值</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sw = Lei(<span class="string">&quot;圣文&quot;</span>, <span class="number">28</span>)</span><br><span class="line"><span class="built_in">print</span>(sw)</span><br><span class="line"><span class="built_in">print</span>(sw.name)  <span class="comment"># 只有一个对象，出来的就是圣文的属性</span></span><br><span class="line">xw = Lei(<span class="string">&quot;向往&quot;</span>, <span class="number">24</span>)</span><br><span class="line"><span class="built_in">print</span>(xw)</span><br><span class="line"><span class="built_in">print</span>(sw.name)  <span class="comment"># 有了新的值，对原来的属性进行修改，覆盖就对象，，，向往</span></span><br><span class="line"><span class="built_in">print</span>(xw.name)     <span class="comment">#向往</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python理论</tag>
      </tags>
  </entry>
  <entry>
    <title>更改Argon主题的背景图片</title>
    <url>/2022/09/04/wordpress/%E6%9B%B4%E6%94%B9Argon%E4%B8%BB%E9%A2%98%E7%9A%84%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<h2 id="一，main-php参考代码"><a href="#一，main-php参考代码" class="headerlink" title="一，main.php参考代码"></a>一，main.php参考代码</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Plugin Name: Custom url</span></span><br><span class="line"><span class="comment">Description: Just an example</span></span><br><span class="line"><span class="comment">Version: 1.0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">replace_url</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;      <span class="keyword">return</span><span class="string">&quot;http://www.88liuliuya.xyz/wpcontent/uploads/2022/06/JSPD9Q2BTNAIQSFS.jpg&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="title function_ invoke__">add_filter</span>(<span class="string">&#x27;argon_page_background_url&#x27;</span> , <span class="string">&#x27;replace_url&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<h2 id="二，具体说明"><a href="#二，具体说明" class="headerlink" title="二，具体说明"></a>二，具体说明</h2><p>1，在 &#x2F;wp-content&#x2F;plugins 目录下新建文件夹（名字任意），注册插件。在文件夹中新建 main.php。</p>
<p>2，前往 WordPress 插件管理页面启用这个插件，即可。</p>
<h2 id="三，注意"><a href="#三，注意" class="headerlink" title="三，注意"></a>三，注意</h2><p>1，将想替换的图片url替换大括号里的链接即可；</p>
<p>2，想进一步了解可以到GitHub的该项目查看，即<a href="https://argon-docs.solstice23.top/#/filters%E3%80%82">https://argon-docs.solstice23.top/#/filters。</a></p>
]]></content>
      <categories>
        <category>网站探索</category>
      </categories>
      <tags>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title>歌单导出</title>
    <url>/2022/12/08/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/2022-12-08-%E6%AD%8C%E5%8D%95%E5%AF%BC%E5%87%BA/</url>
    <content><![CDATA[<p>生活小技巧</p>
<span id="more"></span>

<h3 id="网易云音乐的歌单导出："><a href="#网易云音乐的歌单导出：" class="headerlink" title="网易云音乐的歌单导出："></a>网易云音乐的歌单导出：</h3><p>方法如下：</p>
<ol>
<li><p>打开网易云的网页，然后登录自己的账号，到自己的歌单里面</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230610084023.png"></p>
</li>
<li><p>点到控制台</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230610084033.png"></p>
</li>
<li><p>点那个top，切换到这个</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230610084041.jpg"></p>
</li>
<li><p>然后把这个代码粘贴到下面，直接回车</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 音乐链接</span><br><span class="line">let link = $$(&quot;.m-table tbody td:nth-child(2) a&quot;).map(function(item)&#123;return item.href&#125;)</span><br><span class="line"></span><br><span class="line">//标题</span><br><span class="line">let title = $$(&quot;.m-table tbody td:nth-child(2) b&quot;).map(function(item)&#123;return item.title&#125;)</span><br><span class="line"></span><br><span class="line">//艺术家</span><br><span class="line">let artist = $$(&quot;.m-table tbody td:nth-child(4) &gt; div&quot;).map(function(item)&#123;return item.title&#125;)</span><br><span class="line"></span><br><span class="line">let list = []</span><br><span class="line"></span><br><span class="line">for(let i=0; i&lt;title.length; i++)&#123;</span><br><span class="line">    let temp = (i+1) + &#x27;.&#x27; + title[i] + &#x27; || &#x27; + artist[i]</span><br><span class="line">    let regx = / - .+( \|\| )/</span><br><span class="line">    list.push(temp.replace(regx, &#x27;$1&#x27;))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">copy(list.join(&#x27;\n&#x27;));</span><br></pre></td></tr></table></figure>
</li>
<li><p>然后他出来一个undefined，然后点下一行，ctrl+v，就可以看到所有的音乐了</p>
</li>
</ol>
<h3 id="QQ音乐的歌单导出："><a href="#QQ音乐的歌单导出：" class="headerlink" title="QQ音乐的歌单导出："></a>QQ音乐的歌单导出：</h3><p>QQ音乐的歌单无法使用上面的前端方法，但是可以先把歌单分享到微信或者其他地方，然后复制链接，然后通过网易云音乐的外部歌单导入功能将歌单解析到网易云音乐，（可能会有部分歌曲没有解析出来，但大部分都解析出来了），然后用上面的方法就可以了</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>linux常用命令</title>
    <url>/2023/05/25/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/2023-05-25-linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>linux 命令是对 Linux 系统进行管理的命令。对于 Linux 系统来说，无论是中央处理器、内存、磁盘驱动器、键盘、鼠标，还是用户等都是文件， Linux 系统管理的命令是它正常运行的核心，与之前的 DOS 命令类似。linux 命令在系统中有两种类型：内置 Shell 命令和 Linux 命令。</p>
<span id="more"></span>

<p>查看文件目录</p>
<p>新增文件&#x2F;文件夹</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>Telegram指南</title>
    <url>/2023/07/20/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/2023-07-20-Telegram%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="2fb79a687117b80b109e2aa317935c6754c97bcef9b90cb6530688862e201f6a"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>ChatGPT注册</title>
    <url>/2023/02/07/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/ChatGPT%E6%B3%A8%E5%86%8C/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<p><strong>OpenAI</strong>（开放人工智能[<a href="https://zh.wikipedia.org/zh-cn/OpenAI#cite_note-4">4]</a>）是美国一个<a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD">人工智能</a>研究实验室，由营利组织 <strong>OpenAI LP</strong> 与母公司<a href="https://zh.wikipedia.org/wiki/%E9%9D%9E%E7%87%9F%E5%88%A9%E7%B5%84%E7%B9%94">非营利</a>组织 <strong>OpenAI Inc</strong> 所组成，目的是促进和发展<a href="https://zh.wikipedia.org/w/index.php?title=%E5%8F%8B%E5%A5%BD%E7%9A%84%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD&action=edit&redlink=1">友好的人工智能</a>，使人类整体受益。2022年11月30日，OpenAI发布了一个名为<a href="https://zh.wikipedia.org/wiki/ChatGPT">ChatGPT</a>的自然语言生成式模型[<a href="https://zh.wikipedia.org/zh-cn/OpenAI#cite_note-14">14]</a>，它以对话方式进行交互。在研究预览期间，用户注册并登陆后可免费使用ChatGPT。[<a href="https://zh.wikipedia.org/zh-cn/OpenAI#cite_note-15">15]</a>但是该项目对一些包括中国大陆、香港在内的地区暂不可用。</p>
<p><strong>ChatGPT</strong>（全名：<strong>Chat Generative Pre-trained Transformer</strong>）是由<a href="https://zh.wikipedia.org/wiki/OpenAI">OpenAI</a>开发的一个<a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD">人工智能</a><a href="https://zh.wikipedia.org/wiki/%E8%81%8A%E5%A4%A9%E6%A9%9F%E5%99%A8%E4%BA%BA">聊天机器人</a>程序，于2022年11月推出。该程序使用基于<a href="https://zh.wikipedia.org/wiki/GPT-3">GPT-3.5</a>架构的<a href="https://zh.wikipedia.org/wiki/%E8%AA%9E%E8%A8%80%E6%A8%A1%E5%9E%8B">大型语言模型</a>并通过<a href="https://zh.wikipedia.org/zh-cn/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0">强化学习</a>进行训练。虽然聊天机器人的核心功能是模仿人类对话者，但ChatGPT用途广泛。 例如，具有编写和调试计算机程序的能力[<a href="https://zh.wikipedia.org/zh-cn/ChatGPT#cite_note-ChatGPT_can_write_code-3">3]</a>； 创作音乐、电视剧、童话故事和学生论文； 回答测试问题（在某些测试情境下，水平高于普通人类测试者）；写诗和歌词；模拟Linux系统等[<a href="https://zh.wikipedia.org/zh-cn/ChatGPT#cite_note-ArsTechnicaTerminal-14">14]</a>，与其他多数聊天机器人不同的是，ChatGPT能够记住与用户之前的对话内容和给它的提示[<a href="https://zh.wikipedia.org/zh-cn/ChatGPT#cite_note-NYTimesInfo-16">16]</a>。此外，为了防止ChatGPT接受或生成冒犯性言论，输入内容会由审核API进行过滤[<a href="https://zh.wikipedia.org/zh-cn/ChatGPT#cite_note-17">17]</a>[<a href="https://zh.wikipedia.org/zh-cn/ChatGPT#cite_note-18">18]</a>，以减少潜在的种族主义或性别歧视等内容[<a href="https://zh.wikipedia.org/zh-cn/ChatGPT#cite_note-OpenAIInfo-12">12]</a>[<a href="https://zh.wikipedia.org/zh-cn/ChatGPT#cite_note-:4-2">2]</a>。</p>
<h2 id="准备："><a href="#准备：" class="headerlink" title="准备："></a>准备：</h2><ol>
<li>代理。要求是韩国，日本，印度，新加坡，美国这些国家的地址都合适。对其他的我们还不太清楚，反正香港或中国的代理肯定不行。</li>
<li>找一个国外手机号码，如果你没有用过接码平台也行，有些接码平台是无法接的，所以我们推荐一个就是 <a href="https://sms-activate.org/?ref=2068197">sms-activate.org</a></li>
<li>准备一个浏览器</li>
</ol>
<h2 id="接验证码："><a href="#接验证码：" class="headerlink" title="接验证码："></a>接验证码：</h2><ol>
<li>打开接码平台 <a href="https://sms-activate.org/?ref=2068197">sms-activate.org</a>，注册一个账号</li>
<li>然后要充值余额（一次接码OpenAi的验证码费用是大概11卢布，人民币来看差不多是1块钱，不过只能充美金，就先充直个1美金钱。可以选择对你任何方便方式。支付宝也有充值完成可能需要等一会，就先放着，直接进行下一步。）</li>
</ol>
<h2 id="注册一个OpenAI账号："><a href="#注册一个OpenAI账号：" class="headerlink" title="注册一个OpenAI账号："></a>注册一个OpenAI账号：</h2><ol>
<li><p>首先打开<a href="https://beta.openai.com/signup">ChatGPT的账户注册页面</a>。谷歌注册或者邮箱注册都可以，无所谓，我们这里用邮箱注册作为例子；</p>
</li>
<li><p>用邮箱注册后你要验证邮件。进去邮箱，查看email里的链接；</p>
</li>
<li><p>这里你需要输入需要的信息；</p>
</li>
<li><p>短信验证；</p>
</li>
<li><p>这里你要选择你打算如何使用OpenAI。随便选择吧。</p>
</li>
</ol>
<p>当然，有一些人会在这里遇到一个问题，会出现说不能在当前国家服务的提示。不用怕，这个文章就帮助你解决这个问题。首先，给你一招。一般你出现这种问题，就是因为你的代理没有全局，或者位置不对。香港或中国的的代理是100%无法通过的。</p>
<p>这个问题是非常神奇的，只要你出现了这个提示，那么你接下来怎么切换代理，都是没用的。现在提供给你你一招解决。</p>
<h3 id="解决地区问题"><a href="#解决地区问题" class="headerlink" title="解决地区问题"></a><strong>解决地区问题</strong></h3><p>首先，你要把你的代理切换到任何合适的地区，我们这里选择了韩国。<br>然后，先复制下面这段代码<br>window.localStorage.removeItem(Object.keys(window.localStorage).find(i&#x3D;&gt;i.startsWith(‘@@auth0spajs’)))<br>接着在地址栏里输入  ： javascript:<br>请注意，这里一定要输入，因为你复制的话是粘贴不了的。<br>然后再粘贴我们第一段复制的内容：<br>然后按下回车键，刷新页面。如果你的代理没问题，就可以看到正常工作的注册页面了。</p>
<p><strong>短信验证</strong>：这里选的是韩国，这是因为我们使用韩国的代理，但是我们最好选择印度。然后到我们的接码网站上去。在左侧搜索OpenAi，然后点击印度。点击”小黄车”。然后我们复制这个号码，粘贴过去。然后我们点击发送验证码就完成了。等一会网站会提示验证码，我们复制粘贴。（注意：复制过去的号码没有去掉国家代号，也就是前俩位要删去。）</p>
<h2 id="使用ChatGPT"><a href="#使用ChatGPT" class="headerlink" title="使用ChatGPT"></a><strong>使用ChatGPT</strong></h2><p>注册完后，打开<a href="https://chat.openai.com/auth/login">ChatGPT网站</a>去登陆。<br>在下面这个地方就可以开始写你的任何巧妙的句子了。取乐吧！</p>
<h2 id="常见问题："><a href="#常见问题：" class="headerlink" title="常见问题："></a>常见问题：</h2><h3 id="Access-denied，访问被拒绝。"><a href="#Access-denied，访问被拒绝。" class="headerlink" title="Access denied，访问被拒绝。"></a>Access denied，访问被拒绝。</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230212163053.png"><br>解决方式：<br>1.首先确保自己chartGPT之前是正常的。<br>2.使用谷歌浏览器 ctrl+alt+del清楚浏览器缓存<br>3.谷歌浏览器设置语言为英文<br>4.谷歌浏览器关闭定位。<br>5.访问测试：chartGPT<br>6.设置全局代理</p>
<h3 id="过载（解决方式：刷新网页）"><a href="#过载（解决方式：刷新网页）" class="headerlink" title="过载（解决方式：刷新网页）"></a>过载（解决方式：刷新网页）</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230212164403.png"></p>
<h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><p><a href="https://sms-activate.org/cn/info/ChatGPT">https://sms-activate.org/cn/info/ChatGPT</a></p>
<p><a href="https://zh.wikipedia.org/zh-cn/ChatGPT">https://zh.wikipedia.org/zh-cn/ChatGPT</a></p>
<p><a href="https://zh.wikipedia.org/zh-cn/OpenAI">https://zh.wikipedia.org/zh-cn/OpenAI</a></p>
<p><a href="https://chat.openai.com/auth/login">https://chat.openai.com/auth/login</a></p>
<h2 id="必应GTP注册时，Header-Editor插件使用的下载文件"><a href="#必应GTP注册时，Header-Editor插件使用的下载文件" class="headerlink" title="必应GTP注册时，Header  Editor插件使用的下载文件:"></a>必应GTP注册时，Header  Editor插件使用的下载文件:</h2><p><a href="https://gist.githubusercontent.com/yuhangch/9abc4220af46a1f4a7fc97393e2f040e/raw/89c889b0e7a80446c931823edd612630fd62d165/header-editor-config.json">https://gist.githubusercontent.com/yuhangch/9abc4220af46a1f4a7fc97393e2f040e/raw/89c889b0e7a80446c931823edd612630fd62d165/header-editor-config.json</a></p>
<h2 id="更有效的使用ChatGPT："><a href="#更有效的使用ChatGPT：" class="headerlink" title="更有效的使用ChatGPT："></a>更有效的使用ChatGPT：</h2><h3 id="1-角色扮演法"><a href="#1-角色扮演法" class="headerlink" title="1.角色扮演法"></a>1.角色扮演法</h3><p>eg：</p>
<p>请扮演一位专业的英语老师，帮我改正句子的语法错误，归纳整理我给你的</p>
<p>此规则适用与我们所有的对话，规则不需要我再重复。</p>
<p>请扮演一位专业的电脑技术专家，用通俗易懂的语言将我的问题清晰的解释出来，</p>
<p>请扮演一位专业的python老师，帮我改正我的学习误区，归纳整理我给你的问题，</p>
<h3 id="2-聊天室法"><a href="#2-聊天室法" class="headerlink" title="2.聊天室法"></a>2.聊天室法</h3><p>就是在一个聊天窗口，先给ChatGPT设定一个角色，再开始提问，与第一种的区别就是，你可以开多个聊天窗口，以设置多种角色</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx 反向代理</title>
    <url>/2022/11/24/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/Nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<p><a href="https://www.runoob.com/w3cnote/nginx-proxy-balancing.html">https://www.runoob.com/w3cnote/nginx-proxy-balancing.html</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>ipad pro 系统更新</title>
    <url>/2022/11/12/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/ipad-pro-%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<p>个人理解</p>
<span id="more"></span>

<h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><p>验证更新时显示无法连接到互联网，然后验证失败，导致无法更新，但是实际上是有网络的，是可以进行刷抖音等活动的</p>
<h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><h3 id="1-在平板上用WiFi更新"><a href="#1-在平板上用WiFi更新" class="headerlink" title="1.在平板上用WiFi更新"></a>1.在平板上用WiFi更新</h3><ul>
<li>重启</li>
<li>还原网络设置</li>
</ul>
<p>都失败了，于是</p>
<h3 id="2-在电脑上更新"><a href="#2-在电脑上更新" class="headerlink" title="2.在电脑上更新"></a>2.在电脑上更新</h3><ul>
<li>在我的window10系统的电脑上下载iTunes——<a href="https://support.apple.com/zh-cn/HT210384">https://support.apple.com/zh-cn/HT210384</a></li>
<li>具体操作———<a href="https://support.apple.com/zh-cn/HT212186">https://support.apple.com/zh-cn/HT212186</a></li>
</ul>
<blockquote>
<p>特别注意：更新时它会自动备份平板的数据，默认路径是在C盘，于是我们要更改路径，具体操作如下：</p>
<p><a href="https://jingyan.baidu.com/article/295430f19030420c7e0050e1.html">https://jingyan.baidu.com/article/295430f19030420c7e0050e1.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>Pycharm的安装与使用</title>
    <url>/2022/09/04/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/Pycharm%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>好软件</p>
<span id="more"></span>

<h2 id="一，使用"><a href="#一，使用" class="headerlink" title="一，使用"></a>一，使用</h2><p>PyCharm的Find in Path功能提供了全局查找功能，快捷键为Ctrl + Shift + F。Find则是在当前文件查找，快捷键为Ctrl + F。这两个个功能非常实用,Ctrl + S,保存。</p>
<h2 id="二，下载"><a href="#二，下载" class="headerlink" title="二，下载"></a>二，下载</h2><p><a href="https://www.jetbrains.com/">官网下载地址</a></p>
<h2 id="三，安装"><a href="#三，安装" class="headerlink" title="三，安装"></a>三，安装</h2><p><a href="https://blog.csdn.net/h123456789999999/article/details/112753496">教程</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>软件使用</tag>
      </tags>
  </entry>
  <entry>
    <title>oppo手机安装google play</title>
    <url>/2023/03/05/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/oppo%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85google-play/</url>
    <content><![CDATA[<p>个人理解</p>
<span id="more"></span>



<h2 id="设置手机基本环境"><a href="#设置手机基本环境" class="headerlink" title="设置手机基本环境"></a>设置手机基本环境</h2><p>打开手机的关于Google和VPN的开关；</p>
<p>通过手机应用商店下载Google浏览器</p>
<h2 id="设置上网环境"><a href="#设置上网环境" class="headerlink" title="设置上网环境"></a>设置上网环境</h2><p>下载翻墙软件</p>
<p>导入节点</p>
<h2 id="下载谷歌商店下载软件"><a href="#下载谷歌商店下载软件" class="headerlink" title="下载谷歌商店下载软件"></a>下载谷歌商店下载软件</h2><p>下载地址：<a href="https://apkpure.com/cn/google-play-store/com.android.vending/download#google_vignette">https://apkpure.com/cn/google-play-store/com.android.vending/download#google_vignette</a></p>
<p>注：</p>
<p>1.这是一个第三方网站，但并不影响下载；</p>
<p>2.建议用电脑下载好后，再传给手机；</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>docker</title>
    <url>/2022/12/01/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/docker/</url>
    <content><![CDATA[<p>有趣的技术</p>
<span id="more"></span>

<p><a href="https://www.iots.vip/post/free-docker-deploy-shadowsocks.html">https://www.iots.vip/post/free-docker-deploy-shadowsocks.html</a></p>
<p><a href="https://www.zhihu.com/question/263537989">https://www.zhihu.com/question/263537989</a></p>
<p><a href="https://www.redhat.com/zh/topics/containers/what-is-docker">https://www.redhat.com/zh/topics/containers/what-is-docker</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>wall</title>
    <url>/2022/10/04/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/walls/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="6945a8d3b66a28153a6e583bc8abc453aec36c416d04d13efc5eab232db952dd"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>对Git与GitHub的探索</title>
    <url>/2022/09/24/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/%E5%AF%B9Git%E4%B8%8EGitHub%E7%9A%84%E6%8E%A2%E7%B4%A2/</url>
    <content><![CDATA[<p>好软件</p>
<span id="more"></span>

<h2 id="Git第一版书籍地址"><a href="#Git第一版书籍地址" class="headerlink" title="Git第一版书籍地址"></a>Git第一版书籍地址</h2><p><a href="http://iissnan.com/progit/">http://iissnan.com/progit/</a></p>
<p><a href="https://segmentfault.com/a/1190000023734704">参考教程</a></p>
<h2 id="Git-Pro-书籍"><a href="#Git-Pro-书籍" class="headerlink" title="Git Pro 书籍"></a>Git Pro 书籍</h2><p><a href="https://codechina_dev.gitcode.host/progit2/">https://codechina_dev.gitcode.host/progit2/</a></p>
<h2 id="GitHub搜索技巧"><a href="#GitHub搜索技巧" class="headerlink" title="GitHub搜索技巧"></a>GitHub搜索技巧</h2><p><a href="https://codeantenna.com/a/kgBjkAvYJz">https://codeantenna.com/a/kgBjkAvYJz</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 示例1：搜索仓库名包含javascript，并且stars数大于1000的项目</span><br><span class="line">in:name javascript stars:&gt;1000</span><br><span class="line"></span><br><span class="line"># 示例2：搜索描述中包含&quot;小程序&quot;，并且fork大于100，并且最近更新时间在2019-11-15之后的，并且使用开发语言为vue的项目</span><br><span class="line">in:description 小程序 fork:&gt;100 pushed:&gt;2019-11-15 language:vue</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>自带高级搜索：<a href="https://github.com/search/advanced">https://github.com/search/advanced</a></p>
<p>cd upload #进入名为upload的文件夹，提前将要上传的大文件放入该文件夹下<br>git init #创建本地仓库环境<br>git lfs install #安装大文件上传应用<br>git lfs track * #追踪要上传的大文件，<em>表示路径下的所有文件<br>git add .gitattributes #添加先上传的属性文件(要先上传属性文件，不然有可能失败)<br>git commit -m “pre” #添加属性文件上传的说明<br>git remote add origin <a href="https://github.com/cunko/Typro.rar.git">https://github.com/cunko/Typro.rar.git</a> #建立本地和Github仓库的链接<br>git push origin master #上传属性文件<br>git add * #添加要上传的大文件，</em>表示路径下的所有文件<br>git commit -m “Git LFS commit” #添加大文件上传的说明<br>git push origin master #上传大文件</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>软件使用</tag>
      </tags>
  </entry>
  <entry>
    <title>常用快捷键</title>
    <url>/2022/12/08/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/windows%E7%B3%BB%E7%BB%9F%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>个人理解</p>
<span id="more"></span>

<h2 id="虚拟桌面："><a href="#虚拟桌面：" class="headerlink" title="虚拟桌面："></a>虚拟桌面：</h2><blockquote>
<p>win10的虚拟桌面真是一个好东西，我们可以在不同的桌面做不同的事情，互不干扰。每个人都有自己的隐私，我们可以在桌面1里办公，在桌面2里看电影。在没其他人时，我们就切换到桌面2看看电影，放松放松；在有人的时候，我们再切换到桌面1办公。可将任务分别在不同的桌面运行，从而提高桌面整洁与速度，当一个桌面任务太多时使用第二桌面，第二桌面上的任务不会受到第一桌面的任务干扰，运行速度会提高，第一桌面的任务会被暂时冻结，就和苹果手机一样，后台任务都是 冻结状态直到你切换回后台任务。</p>
</blockquote>
<p>打开虚拟桌面的快捷键    win + Tab<br>新建虚拟桌面的快捷键  win + ctrl + D<br>切换虚拟桌面的快捷键    win + ctrl + 左&#x2F;右方向键<br>关闭当前虚拟桌面的快捷键  win + ctrl + F4<br>简单切换：Alt+Tab<br>小视图切换：Ctrl+Alt+Tab</p>
<h2 id="打开设备管理器："><a href="#打开设备管理器：" class="headerlink" title="打开设备管理器："></a>打开设备管理器：</h2><p>Win+X组合键或右键点击Win10开始按钮即可打开系统快捷菜单，在里面找</p>
<h2 id="常用快捷键："><a href="#常用快捷键：" class="headerlink" title="常用快捷键："></a>常用快捷键：</h2><p>调出运行对话框    win+r<br>启动剪贴板      win+v<br>返回桌面    esc+ctrl<br>一键返回桌面      win+d<br>撤销操作：Ctrl+z<br>恢复之前所撤销的操作：Ctrl+y<br>快速创建同级界面：Ctrl+n<br>召唤任务管理器：Shift+Ctrl+Esc<br>锁屏：Win+L<br>打开我的电脑：Win+e<br>放大镜：Win++&#x2F;-<br>快速关闭网页：Ctrl+W<br>恢复关闭的网页：Ctrl+Shift+T<br>强制关闭软件和关机：Alt+F4<br>软件透明化：Win+,<br>快速打开任务栏应用：Win+1~9<br>应用程序分屏：Win+&#x2F;一&gt;<br>文件多选：   点击其中一个文件，按Ctrl键依次点击选中</p>
<p>打开设置    win + i</p>
<p>打开控制面板：win + r   ,然后control</p>
<h2 id="截图录屏："><a href="#截图录屏：" class="headerlink" title="截图录屏："></a>截图录屏：</h2><p>window系统截图：  Shift+Win+s<br>微信截屏   alt+A<br>QQ录屏         Ctrl+alt+S<br>QQ截屏      ctrl+alt+A</p>
<h2 id="其它："><a href="#其它：" class="headerlink" title="其它："></a>其它：</h2><p>Devi++中代码对齐   Ctrl+shift+a<br>微软Xbox录屏     Win+g</p>
<p>对于习惯使用快捷键的朋友，这应该不陌生。这是是最快的恢复chrome已关闭网页的方法。很多人不知道Chrome浏览器撤销关闭页面的快捷键是什么，其实这是一个组合键，即Crtl+Shift+T。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>对Typora的探索</title>
    <url>/2022/09/24/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/%E5%AF%B9Typora%E7%9A%84%E6%8E%A2%E7%B4%A2/</url>
    <content><![CDATA[<p>好软件</p>
<span id="more"></span>

<h2 id="数学公式的表示"><a href="#数学公式的表示" class="headerlink" title="数学公式的表示"></a>数学公式的表示</h2><p><a href="https://blog.csdn.net/alwaysrun/article/details/115830269">https://blog.csdn.net/alwaysrun/article/details/115830269</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/261750408">https://zhuanlan.zhihu.com/p/261750408</a></p>
<h2 id="插入超链接"><a href="#插入超链接" class="headerlink" title="插入超链接"></a>插入超链接</h2><h3 id="图片插入超链接"><a href="#图片插入超链接" class="headerlink" title="图片插入超链接"></a>图片插入超链接</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[![](https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/wallhaven-9mjw51.png)</span><br></pre></td></tr></table></figure>

<p><a href="https://bz.zzzmh.cn/#anime"><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/wallhaven-9mjw51.png"></a></p>
<h3 id="文章内插入超链接"><a href="#文章内插入超链接" class="headerlink" title="文章内插入超链接"></a>文章内插入超链接</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[全国图书参考咨询联盟](http://www.ucdrs.superlib.net/)</span><br></pre></td></tr></table></figure>

<p>我的<a href="http://www.ucdrs.superlib.net/">全国图书参考咨询联盟</a><br>我的 [我]: “<a href="https://cunko.github.io/index.html#articles">https://cunko.github.io/index.html#articles</a></p>
<p>经常使用的网站有<a href="http://www.google.com/" title="Google">Google</a>、<a href="https://blog.csdn.net/" title="csdn">csdn</a>以及<a href="https://www.cnblogs.com/" title="博客园">博客园</a><br><a href="https://blog.csdn.net/" title="csdn">csdn</a>是一个不错的<a href="https://blog.csdn.net/">网站</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Google][1]</span><br><span class="line">[网站][]</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="Markdown-脚注"><a href="#Markdown-脚注" class="headerlink" title="Markdown 脚注"></a>Markdown 脚注</h2><p><a href="https://m.imooc.com/wiki/markdownlesson-markdownfootnote">https://m.imooc.com/wiki/markdownlesson-markdownfootnote</a></p>
<h2 id="这是一段放大文本"><a href="#这是一段放大文本" class="headerlink" title="这是一段放大文本"></a><big>这是一段放大文本</big></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;big&gt;这是一段放大文本&lt;/big&gt;</span><br><span class="line">&lt;small&gt;这是一段缩小文本&lt;/small&gt;</span><br></pre></td></tr></table></figure>

<p><small>这是一段缩小文本</small></p>
<p><big>这是一段放大文本</big></p>
<h3 id="多彩文本"><a href="#多彩文本" class="headerlink" title="多彩文本"></a>多彩文本</h3><p><font color=orange>这是一段橘色文本</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;font color=orange&gt;这是一段橘色文本&lt;/font&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>color 里的颜色支持 英文单词，**<a href="http://c.runoob.com/front-end/55">16进制 48</a>，<a href="https://www.runoob.com/cssref/func-rgb-css.html">rgb 31</a>，<a href="https://www.runoob.com/cssref/func-rgba.html">rgba 18</a>**</li>
</ul>
<p><font color=teal><strong>这是一段加粗的水鸭色文本</strong></font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;font color=teal&gt;**这是一段加粗的水鸭色文本**&lt;/font&gt;</span><br></pre></td></tr></table></figure>

<table><tr><td bgcolor="#ADD8E6">python共有六大基础数据类型：分别是数值，字符串，列表，元组，字典，集合。</td></tr></table>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#ADD8E6&quot;&gt;python共有六大基础数据类型：分别是数值，字符串，列表，元组，字典，集合。&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure>

<table><tr><td bgcolor="#ADD8E6">python共有六大基础数据类型：分别是数值，字符串，列表，元组，字典，集合。</td></tr></table>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#ADD8E6&quot;&gt;python共有六大基础数据类型：分别是数值，字符串，列表，元组，字典，集合。&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure>



<h2 id="Emoji"><a href="#Emoji" class="headerlink" title="Emoji"></a><strong>Emoji</strong></h2><p>用一对 : 包裹，里面是 <strong>Emoji</strong> 符号的 <strong>语义化文本</strong> ( <strong>Typora编辑器</strong> 中，输入 <code>:</code> 就会带提示器 )</p>
<ul>
<li><strong>Windows系统</strong> 用户 <strong>win + .</strong> 就可以输入 Emoji 了</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:smile:</span><br><span class="line">:sweat:</span><br></pre></td></tr></table></figure>

<p>:smile:</p>
<p>:sweat:</p>
<h2 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h2><ul>
<li><p>可以使用 HTML中 <strong>空格</strong> 的 <strong>字符实体</strong> </p>
</li>
<li><pre><code> &amp;nbsp
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 若要添加 **多个** 空格，就输入多个 </span><br><span class="line"></span><br><span class="line">这里有    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;6个空格分隔</span><br><span class="line"></span><br><span class="line">## 换行</span><br><span class="line"></span><br></pre></td></tr></table></figure>
&lt;br&gt; 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">00&lt;br&gt;22&lt;br&gt;</span><br><span class="line"></span><br><span class="line">33&lt;br&gt;</span><br><span class="line"></span><br><span class="line">44&lt;br&gt;</span><br><span class="line"></span><br><span class="line">55</span><br><span class="line"></span><br><span class="line">## 嵌入</span><br><span class="line"></span><br><span class="line">### 嵌入音频</span><br><span class="line"></span><br><span class="line">- 嵌入都是依赖 **HTML标签** 实现的</span><br><span class="line"></span><br></pre></td></tr></table></figure>
&lt;audio controls=&quot;controls&quot; preload=&quot;none&quot; src=&quot;音频链接地址&quot;&gt;&lt;/audio&gt;
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;audio controls=&quot;controls&quot; preload=&quot;none&quot; src=&quot;音频链接地址&quot;&gt;&lt;/audio&gt;</span><br><span class="line"></span><br><span class="line">### 嵌入视频</span><br><span class="line"></span><br></pre></td></tr></table></figure>
&lt;video width=&quot;600&quot; height=&quot;420&quot; controls&gt;
&lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;
&lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;
&lt;source src=&quot;movie.webm&quot; type=&quot;video/webm&quot;&gt;  
&lt;/video&gt;
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;video width=&quot;600&quot; height=&quot;420&quot; controls&gt;   &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;   &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;   &lt;source src=&quot;movie.webm&quot; type=&quot;video/webm&quot;&gt;   &lt;/video&gt;</span><br><span class="line"></span><br><span class="line">- width ( 宽度 ) height ( 高度 ) ，可以自己设置，直接输入数字即可，单位默认是 px(像素)</span><br><span class="line">  也可以使用 **百分比**</span><br><span class="line">  **`width=100%`** 代表水平撑满整个窗口</span><br><span class="line">  **`height=50%`** 代表垂直撑满半个窗口</span><br><span class="line">- **Video标签** 支持的视频格式 ：MP4 ogg webm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## markdown里的标题居中显示</span><br><span class="line"></span><br><span class="line">Markdown 不能直接设置标题居中，但是可以通过将标题放在一个 div 元素中，然后使用 CSS 设置 div 的 text-align 属性为 center 来实现标题居中的效果。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
&lt;div style=&quot;text-align: center;&quot;&gt;  &lt;big&gt;&lt;big&gt;&lt;big&gt;# 这是一个居中的加大标题  &lt;/big&gt;&lt;/big&gt;&lt;/big&gt; &lt;/div&gt;
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div style=&quot;text-align: center;&quot;&gt;  &lt;big&gt;&lt;big&gt;&lt;big&gt;# 这是一个居中的加大标题  &lt;/big&gt;&lt;/big&gt;&lt;/big&gt; &lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
&lt;div style=&quot;text-align: center; font-weight: bold; font-size: 28px;&quot;&gt; # 这是一个居中的加粗标题 &lt;/div&gt;
</code></pre>
</li>
</ul>
<pre><code>
&lt;div style=&quot;text-align: center; font-weight: bold; font-size: 28px;&quot;&gt; # 这是一个居中的加粗标题 &lt;/div&gt;



&gt; The posts&#39; _layout_ has been set to `post` by default, so there is no need to add the variable _layout_ in the Front Matter block.
&gt; &#123;: .prompt-tip &#125;



&gt; The benefit of reading the author information from the file `_data/authors.yml`&#123;: .filepath &#125; is that the page will have the meta tag `twitter:creator`, which enriches the [Twitter Cards](https://developer.twitter.com/en/docs/twitter-for-websites/cards/guides/getting-started#card-and-content-attribution) and is good for SEO.
&gt; &#123;: .prompt-info &#125;



&gt; Once the position is specified, the image caption should not be added.
&gt; &#123;: .prompt-warning &#125;
</code></pre>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>软件使用</tag>
      </tags>
  </entry>
  <entry>
    <title>对手机配置的理解</title>
    <url>/2022/09/05/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/%E5%AF%B9%E6%89%8B%E6%9C%BA%E9%85%8D%E7%BD%AE%E7%9A%84%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<p>个人理解</p>
<span id="more"></span>

<p>手机性能最重要的指标就是中央处理器，也就是CPU，其次是运行内存的大小，机身内存大小随意。</p>
<p>手机的cpu不仅仅是处理数据运算的cpu，而是集成了很多东西在一起的，里面不仅有cpu还有GPU还有基带等等，GPU就是显卡。</p>
<p>画质越好的游戏就越吃显卡，GPU性能的高低直接决定你玩游戏流不流畅，也就是帧数有多少，</p>
<p>帧数的意思是在一秒钟里能刷新多少张图片，60帧意思是在一秒钟里能刷新60次，电影<a href="https://www.vipcn.com/zt/dsjgbyxhj/">电视剧</a>动画都是由一张张图片快速切换链接起来的，所以帧数直接决定游戏体验了</p>
<p>如果游戏优化好，那就对手机配置要求会更友好点，如果优化一般般的话……GPU性能不行的手机估计帧数会比较低，内存不够的手机会黑屏闪退。</p>
<p>个人理解</p>
]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>前端css入门作业</title>
    <url>/2023/07/08/%E5%89%8D%E7%AB%AF%E4%BD%9C%E4%B8%9A/2023-07-08-%E5%89%8D%E7%AB%AFcss%E5%85%A5%E9%97%A8%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<p>前端课程</p>
<span id="more"></span>

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230715103350.png"></p>
<h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">313px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> slategray solid;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: gainsboro;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.button</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">85px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: transparent <span class="built_in">url</span>(<span class="string">&quot;https://img1.baidu.com/it/u=166831438,1114233507&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=439&amp;h=194&quot;</span>) center/<span class="number">85px</span> <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">name</span>=<span class="string">&quot;d1&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>请注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: gray&quot;</span>&gt;</span>已有账号？<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration: none&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    用户注册部分--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span> <span class="attr">style</span>=<span class="string">&quot;line-height: 40px;&quot;</span> &gt;</span></span><br><span class="line">        用户名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&#x27;user&#x27;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">style</span>=<span class="string">&quot;width: 252px;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        手机号 <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;10010&quot;</span>&gt;</span>10010<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;10086&quot;</span>&gt;</span>10086<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入手机号&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">style</span>=<span class="string">&quot;width: 187px&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        密<span class="symbol">&amp;emsp;</span>码 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">style</span>=<span class="string">&quot;width: 252px&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        验证码 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;yzm&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入验证码&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;    &quot;</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">style</span>=<span class="string">&quot;color: gray&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: gray&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xy&quot;</span>&gt;</span>阅读并接受协议 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注<span class="symbol">&amp;emsp;</span><span class="symbol">&amp;emsp;</span><span class="symbol">&amp;emsp;</span><span class="symbol">&amp;emsp;</span>册&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">style</span>=<span class="string">&quot;width: 315px;background: lightskyblue;border-radius: 5px&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="老师代码："><a href="#老师代码：" class="headerlink" title="老师代码："></a>老师代码：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">450px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">217</span>,<span class="number">216</span>,<span class="number">216</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">5%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">30%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#e3e2e2</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span>, <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span>,<span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">129</span>,<span class="number">129</span>,<span class="number">129</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.forme</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>:<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>:<span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e2e0e0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">             <span class="attribute">height</span>:<span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.user</span>,<span class="selector-class">.pwd</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">270px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        select &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e2e0e0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">              <span class="attribute">height</span>:<span class="number">27px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.phone</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">202px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.yzm</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">185px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.ipt</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>:<span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    垂直对齐*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;2.png&#x27;</span>) center/<span class="number">70px</span> <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.test</span> &#123;</span></span><br><span class="line"><span class="language-css">               <span class="comment">/*    垂直对齐*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.sp1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: -<span class="number">1px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.zc</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">330px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:white;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>请注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>已有账号？<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    用户注册部分--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;forme&quot;</span>&gt;</span></span><br><span class="line">        用户名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&#x27;user&#x27;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">class</span>=<span class="string">&quot;user&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        手机号 <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;10010&quot;</span>&gt;</span>10010<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;10086&quot;</span>&gt;</span>10086<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入手机号&quot;</span> <span class="attr">class</span>=<span class="string">&quot;phone&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        密<span class="symbol">&amp;emsp;</span>码 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        验证码 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;yzm&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入验证码&quot;</span> <span class="attr">class</span>=<span class="string">&quot;yzm&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ipt&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xy&quot;</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sp1&quot;</span>&gt;</span>阅读并接受协议<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> <span class="attr">class</span>=<span class="string">&quot;zc&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="学生代码："><a href="#学生代码：" class="headerlink" title="学生代码："></a>学生代码：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>旺财基金会<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;实例.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;a1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;a2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>请注册<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>已有帐号？<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;a3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>账户名<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;mi_nema&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入账户名&quot;</span> <span class="attr">class</span>=<span class="string">&quot;c1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;sjh&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sjh&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>+86<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;mi_sjh&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入手机号&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>密<span class="symbol">&amp;emsp;</span>码<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;mi_pas&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">class</span>=<span class="string">&quot;c1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;syzm&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入验证码&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot; &quot;</span> <span class="attr">name</span>=<span class="string">&quot;tyzm&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>阅读并接受协议 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> <span class="attr">id</span>=<span class="string">&quot;zc&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>css代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#a1</span>&#123;</span><br><span class="line">    <span class="comment">/*盒子大小  width:宽（x）  height: 高（y）*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">550px</span>;</span><br><span class="line">    <span class="comment">/*盒子背景*/</span></span><br><span class="line">    <span class="comment">/*background-color: cyan;*/</span></span><br><span class="line">    <span class="comment">/*边框  颜色/大小/类型*/</span></span><br><span class="line">    <span class="attribute">border</span>: black <span class="number">1px</span> solid;</span><br><span class="line">    <span class="comment">/*边框的弧度  等于 50% 时会成一个圆*/</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="comment">/*盒子位置 上 左 */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> <span class="number">60px</span>;</span><br><span class="line">    <span class="comment">/*设置背景 url 是路径 center 是居中处理/ 宽/ 高*/</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://tse2-mm.cn.bing.net/th/id/OIP-C.7L9-UomGzb26idUPhXY4FwHaHa?w=180&amp;h=180&amp;c=7&amp;r=0&amp;o=5&amp;dpr=1.3&amp;pid=1.7&quot;</span>) center/<span class="number">350px</span> <span class="number">550px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#a2</span>,<span class="selector-id">#a3</span>&#123;</span><br><span class="line">    <span class="comment">/*设置距离，不让字体紧贴边框*/</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#zc</span>&#123;</span><br><span class="line">    <span class="comment">/*设置注册按钮*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">326px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: cyan;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.c1</span>&#123;</span><br><span class="line">    <span class="comment">/*设置登录和密码的输入框*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">260px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="comment">/*上*/</span></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="comment">/*下*/</span></span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">8px</span> ;</span><br><span class="line">    <span class="comment">/*!*z左*!*/</span></span><br><span class="line">    <span class="comment">/*margin-left: 5px;*/</span></span><br><span class="line">    <span class="comment">/*!*右*!*/</span></span><br><span class="line">    <span class="comment">/*margin-right: 5px;*/</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: black <span class="number">1px</span> solid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">select<span class="selector-attr">[name=sjh]</span>&#123;</span><br><span class="line">    <span class="comment">/*手机号下拉框*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">43px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">8px</span> ;</span><br><span class="line">    <span class="attribute">border</span>: black <span class="number">1px</span> solid;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[name=mi_sjh]</span>&#123;</span><br><span class="line">    <span class="comment">/*手机号输入框*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">211px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">8px</span> ;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: black <span class="number">1px</span> solid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[name=syzm]</span>&#123;</span><br><span class="line">    <span class="comment">/*验证码输入框*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">165px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">8px</span> ;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: black <span class="number">1px</span> solid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[name=tyzm]</span>&#123;</span><br><span class="line">    <span class="comment">/*验证码图片框*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">31px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">border</span>: black <span class="number">1px</span> solid;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://pic4.zhimg.com/v2-17a03b9627aa8f850628c14550a0544a_r.jpg&quot;</span>) center/<span class="number">90px</span> <span class="number">23px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="comment">/*取消下划线*/</span></span><br><span class="line">    <span class="attribute">text-decoration</span>:none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">form</span> <span class="selector-tag">input</span>&#123;</span><br><span class="line">    <span class="comment">/*改变透明度*/</span></span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">form</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="comment">/*改变p标签的上下边距*/</span></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">5px</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="comment">/*设置字体颜色*/</span></span><br><span class="line">    <span class="attribute">color</span>: darkgray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端练习</tag>
      </tags>
  </entry>
  <entry>
    <title>模拟开车</title>
    <url>/2023/03/13/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/%E6%A8%A1%E6%8B%9F%E5%BC%80%E8%BD%A6/</url>
    <content><![CDATA[<p>想象一下</p>
<span id="more"></span>

<p>想象一下，首先，你打开了车门，坐上驾驶座上，简单调试一下座椅，就要系上安全带，自动挡只有油门和刹车(左边大的是刹车，右边小的是油门），启动点火，现在用右脚把刹车踩到底，挂挡（<strong>自动挡汽车有档位一般为P（停车挡）、R（后退挡）、N（空挡）、D（前进挡）、S（运动模式）五个档位，此外还有M（手动）、和L（低速）</strong>），放手刹，缓慢松开刹车，汽车开始起步，这时需考虑：</p>
<p><strong>1.减速和停车踩刹车；加速踩油门；（注意无论是踩刹车还是踩油门都要尽可能缓慢，这样可以把车开稳）</strong></p>
<p><strong>2.超车和转弯需要提前打转向灯（转向灯上右下左）；</strong></p>
<p><strong>3.超车要从右边超；</strong></p>
<p><strong>4.等红灯时间太长，可以先踩把刹车踩到底，然后挂空挡拉手刹，再松刹车；</strong></p>
<p><strong>5.在发动机和变速箱条件相同的情况下，S挡可以比D档行驶得更快，在超车和上坡无力时可以使用</strong></p>
<p>需要停车下来时，刹车踩到底，挂空挡N档，再挂P档（按一下就行），拉手刹（扣一下），熄火，下车。</p>
<p>加油时注意要熄火，油箱口打开按钮在方向盘下面。</p>
<p>网上参考步骤：</p>
<p>自动挡开车起步7个步骤（机械钥匙启动）</p>
<p>第一步，将点火钥匙转到第二格，至电源档，让汽车电脑系统开始自检，至少6秒以上；</p>
<p>第二步，踩下脚刹，将档位从P挡拉到N档；</p>
<p>第三步，松开脚刹，将点火钥匙转到点火档启动发动机；</p>
<p>第四步，长时间停放后，建议原地热车1-2分钟；</p>
<p>第五步，踩下脚刹，将档位从N挡拉到D档，松开手刹（电子手刹直接短按按钮即可）；</p>
<p>第六步，缓慢放开脚刹，起步；</p>
<p>第七步，根据路况，平稳踩踏油门加油，安全上路。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>浏览器--插件</title>
    <url>/2023/02/12/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/%E6%B5%8F%E8%A7%88%E5%99%A8--%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<p>优化体验</p>
<span id="more"></span>

<h2 id="微软浏览器："><a href="#微软浏览器：" class="headerlink" title="微软浏览器："></a>微软浏览器：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230212203613.png"></p>
<h2 id="谷歌浏览器："><a href="#谷歌浏览器：" class="headerlink" title="谷歌浏览器："></a>谷歌浏览器：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230212204719.png"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230212204711.png"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230212204658.png"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230212204920.png"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230212204737.png"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230212204828.png"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230212204728.png"></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑初始配置</title>
    <url>/2023/03/13/%E5%85%B6%E5%AE%83%E6%95%99%E7%A8%8B/%E7%94%B5%E8%84%91%E5%88%9D%E5%A7%8B%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>个人理解</p>
<span id="more"></span>

<h2 id="基本原则："><a href="#基本原则：" class="headerlink" title="基本原则："></a>基本原则：</h2><p>将电脑450g固态内存分为俩个盘，其中c盘250g；<br>所有文件夹及文件名称尽可能简洁易懂；<br>注意下载路径尽可能与c盘分离；</p>
<h2 id="下载参考："><a href="#下载参考：" class="headerlink" title="下载参考："></a>下载参考：</h2><p>下载翻墙软件，谷歌浏览器<br>网易云音乐，stream及其壁纸软件，任务栏透明工具<br>网站环境配置，Git，PicGo<br>pycharm, typora<br>阿里云网盘,  oss, bandizip<br>QQ，微信<br>有道翻译词典，爱思助手<br>PS，pr，剪映<br>VM虚拟机，比特彗星<br>破解版滴答清单<br>Internet download manager</p>
<h2 id="重装-win11-系统："><a href="#重装-win11-系统：" class="headerlink" title="重装 win11 系统："></a>重装 win11 系统：</h2><h3 id="如何删除电脑盘符"><a href="#如何删除电脑盘符" class="headerlink" title="如何删除电脑盘符"></a>如何删除电脑盘符</h3><p>在 Windows 操作系统中，要删除电脑上的某个盘符，可以按照以下步骤进行：</p>
<ol>
<li>打开“计算机”或“文件资源管理器”。</li>
<li>找到您要删除的驱动器，右键单击它，然后选择“管理”。</li>
<li>在打开的“计算机管理”窗口中，选择“磁盘管理”选项卡。</li>
<li>找到您要删除的驱动器，右键单击它，然后选择“删除卷”。</li>
<li>在弹出的“删除卷”对话框中，确认要删除该卷，并单击“是”按钮。</li>
</ol>
<p>请注意，在删除驱动器之前，一定要备份其中重要的数据，因为删除后数据将无法恢复。同时，也要确保您不会意外删除操作系统安装所在的驱动器，否则可能会导致系统无法正常运行。</p>
<h3 id="如何给电脑重新分配磁盘空间"><a href="#如何给电脑重新分配磁盘空间" class="headerlink" title="如何给电脑重新分配磁盘空间"></a>如何给电脑重新分配磁盘空间</h3><p>在 Windows 操作系统中，要给电脑重新分配磁盘空间，可以按照以下步骤进行：</p>
<ol>
<li>打开“计算机”或“文件资源管理器”。</li>
<li>找到您要重新分配磁盘空间的驱动器，右键单击它，然后选择“管理”。</li>
<li>在打开的“计算机管理”窗口中，选择“磁盘管理”选项卡。</li>
<li>找到您要重新分配磁盘空间的驱动器，右键单击它，然后选择“收缩卷”或“扩展卷”，具体选项取决于您要释放空间还是添加空间。</li>
<li>如果您要收缩卷，则在弹出的“收缩”对话框中输入要释放的空间量，然后单击“收缩”按钮。</li>
<li>如果您要扩展卷，则在弹出的“扩展卷向”对话框中选择要添加的空间量，然后单击“扩展”按钮。</li>
</ol>
<p>请注意，在重新分配磁盘空间之前，一定要备份其中重要的数据，因为操作可能会导致数据丢失。同时，也要注意，某些磁盘空间不能被收缩或扩展，具体取决于磁盘分区的结构和文件系统类型。</p>
<h3 id="一个新电脑刚安装完Win11系统一般会占多少G内存"><a href="#一个新电脑刚安装完Win11系统一般会占多少G内存" class="headerlink" title="一个新电脑刚安装完Win11系统一般会占多少G内存"></a>一个新电脑刚安装完Win11系统一般会占多少G内存</h3><p>40GB左右 </p>
<p>如何用u盘安装win11</p>
<h3 id="什么样的磁盘分区的结构和文件系统类型可以被收缩或扩展"><a href="#什么样的磁盘分区的结构和文件系统类型可以被收缩或扩展" class="headerlink" title="什么样的磁盘分区的结构和文件系统类型可以被收缩或扩展"></a>什么样的磁盘分区的结构和文件系统类型可以被收缩或扩展</h3><p>在 Windows 操作系统中，可以对大多数 NTFS 和 FAT32 文件系统的磁盘分区进行收缩或扩展操作，但有一些情况可能会受到限制：</p>
<ol>
<li>磁盘分区中有无法移动的文件：如果分区中有某些文件无法移动，例如 Windows 操作系统文件或正在使用的程序文件等，可能会导致无法收缩分区。这些文件也可能会影响扩展操作的可用空间。</li>
<li>磁盘分区是系统分区：如果磁盘分区是 Windows 操作系统的安装分区，那么可能无法在运行的 Windows 系统中对其进行扩展操作。这时需要使用第三方的分区工具或从启动盘中运行 Windows 安装程序来进行分区操作。</li>
<li>磁盘分区是动态磁盘：如果磁盘分区是 Windows 动态磁盘，那么可能无法在基本磁盘上运行的 Windows 操作系统中对其进行收缩或扩展操作。这时需要使用 Windows 自带的磁盘管理工具或第三方的分区工具来进行动态磁盘的操作。</li>
</ol>
<p>因此，在进行磁盘收缩或扩展操作之前，应该备份其中重要的数据，并检查磁盘分区的结构和文件系统类型，以确保可以进行所需的操作。</p>
<h3 id="我想给我的系统盘C盘扩容，我要如何做"><a href="#我想给我的系统盘C盘扩容，我要如何做" class="headerlink" title="我想给我的系统盘C盘扩容，我要如何做"></a>我想给我的系统盘C盘扩容，我要如何做</h3><p>如果您想要给 Windows 操作系统所在的系统盘 C 盘扩容，可以按照以下步骤进行：</p>
<ol>
<li>首先备份您的重要数据，以防止数据丢失。</li>
<li>通过运行磁盘清理工具和卸载不必要的程序等方式，清理系统盘上的一些无用文件和程序，以腾出一些空间。</li>
<li>下载并安装第三方的分区管理软件，例如 MiniTool Partition Wizard、EaseUS Partition Master、Acronis Disk Director 等，这些工具都具有可视化的界面和易于操作的功能，可以帮助您进行磁盘分区的扩容操作。</li>
<li>打开分区管理软件，选择您的系统盘 C 盘所在的磁盘分区，右键单击该分区，然后选择“扩展分区”或“调整分区大小”等选项。</li>
<li>在弹出的窗口中，可以将空闲的磁盘空间分配给系统盘 C 盘。具体操作取决于您使用的分区管理软件，通常需要将未分配的空间或其他磁盘分区的空间合并到系统盘 C 盘。</li>
<li>完成扩容操作后，重新启动计算机，您应该能够看到系统盘 C 盘已经增加了相应的容量。</li>
</ol>
<p>需要注意的是，在扩展系统盘 C 盘之前，一定要仔细阅读分区管理软件的说明文档，以避免出现数据丢失或系统无法启动等问题。此外，扩展系统盘 C 盘的操作有一定的风险，建议在保证数据安全的前提下进行操作。</p>
<h3 id="推荐一下是中文版的且评价比较高的分区管理软件"><a href="#推荐一下是中文版的且评价比较高的分区管理软件" class="headerlink" title="推荐一下是中文版的且评价比较高的分区管理软件"></a>推荐一下是中文版的且评价比较高的分区管理软件</h3><p>以下是一些中文版且评价比较高的分区管理软件：</p>
<ol>
<li>MiniTool Partition Wizard：这是一款免费的分区管理工具，具有直观的用户界面和易于操作的功能，支持扩展、收缩、合并、移动、复制和格式化分区等操作。</li>
<li>EaseUS Partition Master：这是一款功能强大的分区管理软件，也提供了免费版和付费版。它支持调整分区大小、合并、分割、转换分区类型、克隆分区和数据恢复等操作。</li>
<li>AOMEI Partition Assistant：这是一款免费的分区管理工具，支持调整分区大小、扩展、收缩、合并、移动、复制和格式化分区等操作。此外，它还提供了更高级的功能，例如动态调整分区大小、转换分区类型、克隆分区和数据备份等。</li>
</ol>
<p>这些软件在中文界面的设计上比较友好，使用起来也比较简单。当然，不同的软件有着不同的特点和适用场景，您可以根据自己的需求进行选择。在使用这些软件进行操作之前，一定要仔细阅读操作说明，以避免出现数据丢失或系统无法启动等问题。</p>
<h2 id="基础："><a href="#基础：" class="headerlink" title="基础："></a>基础：</h2><p>电脑用户名最好是英文</p>
<p>卸载迈克菲</p>
<p>禁用UGI动画</p>
<p>取消任务栏部分组件</p>
<h2 id="软件安装："><a href="#软件安装：" class="headerlink" title="软件安装："></a>软件安装：</h2><h3 id="programming"><a href="#programming" class="headerlink" title="programming"></a>programming</h3><p>​	pycham<br>​	VS code<br>​	VS<br>​	Git<br>​	python</p>
<h3 id="file-handling"><a href="#file-handling" class="headerlink" title="file handling"></a>file handling</h3><p>​	PS<br>​	PR<br>​	Adobe PDF<br>​	Format factory</p>
<h3 id="social-entertainment"><a href="#social-entertainment" class="headerlink" title="social entertainment"></a>social entertainment</h3><p>​	QQmusic<br>​	wechat<br>​	Telegram<br>​	Netfix<br>​	steam</p>
<h3 id="First-toolbox"><a href="#First-toolbox" class="headerlink" title="First toolbox"></a>First toolbox</h3><p>​	Auto  CAD<br>​	Everything<br>​	7-Zip<br>​	Clash for window<br>​	IDM<br>​	English Dictionary<br>​	browser<br>​		Google<br>​		Edeg<br>​	Potplayer</p>
<h3 id="Second-toolbox"><a href="#Second-toolbox" class="headerlink" title="Second toolbox"></a>Second toolbox</h3><p>​	Koodo Reader<br>​	Typora<br>​	XM<br>​	aliyupan<br>​	sunflower<br>​	dida list</p>
<h3 id="Third-toolbox"><a href="#Third-toolbox" class="headerlink" title="Third toolbox"></a>Third toolbox</h3><p>​	PicGo<br>​	Downkyi<br>​	TranslucentTB<br>​	Snipaste<br>​	Upscayl<br>​	Keyviz<br>​	Umi-OCR</p>
]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>前端css提升作业</title>
    <url>/2023/07/08/%E5%89%8D%E7%AB%AF%E4%BD%9C%E4%B8%9A/2023-07-08-%E5%89%8D%E7%AB%AFcss%E6%8F%90%E5%8D%87%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<p>前端课程</p>
<span id="more"></span>

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230715104618.png"></p>
<p>代码为：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    取消小黑点*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">30px</span> <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    设置图片的宽高和盒子一致*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pic</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    设置小圆点所在的外部边框*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.btn</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>:<span class="number">86%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>:<span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: -<span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">75px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*border: 1px solid red;*/</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    小圆点*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.btn</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid transparent;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: darkgray;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>:<span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>:<span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*vertical-align: middle;*/</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    左右箭头*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.prev</span>,<span class="selector-class">.next</span> &#123;</span></span><br><span class="line"><span class="language-css">             <span class="attribute">width</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*border: 1px solid red;*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gainsboro;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>:<span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>:-<span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:grey;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.prev</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top-right-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">             <span class="attribute">border-bottom-right-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.next</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">             <span class="attribute">border-top-left-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">             <span class="attribute">border-bottom-left-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    背景图--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;pic&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    小圆点--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    左右箭头--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端练习</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql基础</title>
    <url>/2023/05/08/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0/01mysql%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>MySQL在过去由于性能高、成本低、可靠性好，已经成为最流行的开源数据库，因此被广泛地应用在<a href="https://zh.wikipedia.org/wiki/Internet">Internet</a>上的中小型<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E7%AB%99">网站</a>中。随着MySQL的不断成熟，它也逐渐用于更多大规模<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%AB%99">网站</a>和应用，比如<a href="https://zh.wikipedia.org/wiki/%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91">维基百科</a>、<a href="https://zh.wikipedia.org/wiki/Google">Google</a>和<a href="https://zh.wikipedia.org/wiki/Facebook">Facebook</a>等网站。非常流行的开源软件组合<a href="https://zh.wikipedia.org/wiki/LAMP">LAMP</a>中的“M”指的就是MySQL。</p>
<span id="more"></span>

<h2 id="数据库的概念"><a href="#数据库的概念" class="headerlink" title="数据库的概念"></a>数据库的概念</h2><p>广泛：存储数据的一个仓库，存储和记录信息，具有一定的检索功能</p>
<p>特指：计算机系统里面一种提供数据储存的检索软件</p>
<h2 id="数据库分类"><a href="#数据库分类" class="headerlink" title="数据库分类"></a>数据库分类</h2><p>关系型数据库（sql）：mysql—-二维表格。库，表，数据。格式是固定，安全性好，sql语法相似</p>
<p>非关系型数据线（nosql）：Redis，MongoDB—-灵活，语法不通用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">start开启  stop关闭</span></span><br><span class="line">service mysql status  #查看msyql服务是否开启</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">本地登录</span></span><br><span class="line">mysql -u用户名 -p密码</span><br><span class="line">mysql -uadmin -pqwe123</span><br><span class="line"></span><br><span class="line">mysql -u用户名 -p</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">此时它会继续让你输入密码，输入完成就可以进入了</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">远程登录</span></span><br><span class="line">mysql -hIP地址 -p端口 -u用户 -p密码</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">退出数据库   ctrl + z</span></span><br></pre></td></tr></table></figure>

<h2 id="mysql语句规范"><a href="#mysql语句规范" class="headerlink" title="mysql语句规范"></a>mysql语句规范</h2><p>1，关键字和函数名称全部大写</p>
<p>2，数据库名称，表名，字段名全部小写，用反引号包裹 </p>
<p>3，sql语句必须以分号结尾</p>
<h2 id="库级操作"><a href="#库级操作" class="headerlink" title="库级操作"></a>库级操作</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases;  # 查看所有库</span><br><span class="line">use 库名;  # 使用/进入某个库  use 库名;</span><br><span class="line">select database();   # 判断/查看正在使用那个库</span><br><span class="line">select user();  # 查看当前用户</span><br><span class="line"></span><br><span class="line">create database 库名;  # 创建数据库</span><br><span class="line">drop database 库名;  # 删除数据库</span><br></pre></td></tr></table></figure>

<h2 id="表级操作"><a href="#表级操作" class="headerlink" title="表级操作"></a>表级操作</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; create table student(   # student表名</span><br><span class="line">    -&gt; id int,  #id的字段名，及其int的数据类型</span><br><span class="line">    -&gt; name varchar(20)</span><br><span class="line">    -&gt; );</span><br><span class="line">    </span><br><span class="line">show tables;  # 查看当前库中所有表</span><br><span class="line">show tables from mysql;  # 查看对应数据库中的表</span><br><span class="line">show create table student;   # 查看创建时的标准命令</span><br><span class="line">desc student;  # 查看表结构</span><br><span class="line">drop table student;  # 删除表</span><br></pre></td></tr></table></figure>

<h3 id="修改表结构"><a href="#修改表结构" class="headerlink" title="修改表结构"></a>修改表结构</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 add age int;  # 增加一列字段</span><br><span class="line">alter table stu add age int;  # 增加一列字段</span><br><span class="line">alter table stu add(字段1 数据类型，字段2 数据类型.....);  # 新增多列</span><br><span class="line"></span><br><span class="line">alter table stu drop t3;  # 删除一列</span><br><span class="line">alter table stu drop t1,drop t2;   # 删除多列</span><br><span class="line"></span><br><span class="line">alter table stu modify t1 varchar(5);  # 修改字段数据类型</span><br><span class="line">alter table stu change t1 sex varchar(5);  # 修改字段名和数据类型</span><br><span class="line"></span><br><span class="line">alter table 旧表名 rename 新表名;  # 修改表名</span><br></pre></td></tr></table></figure>

<h2 id="表数据操作"><a href="#表数据操作" class="headerlink" title="表数据操作*"></a>表数据操作*</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 全字段插入，否则报错</span><br><span class="line">insert into stu values(1,&quot;xiaobai&quot;,18,&quot;man&quot;);</span><br><span class="line"># 指定部分字段添加</span><br><span class="line">insert into stu(id,name) value(2,&quot;东离&quot;);</span><br><span class="line"># 多数据插入</span><br><span class="line">insert into stu values (3,&quot;回车&quot;,25,&quot;man&quot;), (4,&quot;茜茜&quot;,18,&quot;woman&quot;);</span><br><span class="line"></span><br><span class="line"># 删除的时候一定要带上where后面的条件，否则删除这个表中所有数据</span><br><span class="line">delete from 表名 where 条件;</span><br><span class="line"></span><br><span class="line"># 更新数据也需要带条件，否则更新所有数据</span><br><span class="line">update stu set age=38 where id=2;  # 修改单个字段</span><br><span class="line">update stu set age=22,name=&quot;小白&quot; where id=1;  # 修改多个字段</span><br><span class="line"></span><br><span class="line"># 查找</span><br><span class="line">select * from stu;  # * 表示所有字段</span><br><span class="line">select name,sex from stu;  # 指定字段</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>前端表单作业</title>
    <url>/2023/07/08/%E5%89%8D%E7%AB%AF%E4%BD%9C%E4%B8%9A/2023-07-08-%E5%89%8D%E7%AB%AF%E8%A1%A8%E5%8D%95%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<p>前端课程</p>
<span id="more"></span>

<p>完成以下界面：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230709173910.png"></p>
<p>代码1为：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>作业<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>请注册<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>已有账号？<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;001&quot;</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;yhm&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">id</span>=<span class="string">&quot;001&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;002&quot;</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">selected</span>&gt;</span>+86<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;yhm&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入手机号&quot;</span> <span class="attr">id</span>=<span class="string">&quot;002&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;003&quot;</span>&gt;</span>密<span class="symbol">&amp;emsp;</span>码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;yhm&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请设置登录密码&quot;</span> <span class="attr">id</span>=<span class="string">&quot;003&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;004&quot;</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入验证码&quot;</span> <span class="attr">id</span>=<span class="string">&quot;004&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取验证码&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span>阅读并接受协议 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> <span class="attr">name</span>=<span class="string">&quot;f&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230709182056.png"></p>
<p>代码2为：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>请注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>已有账号？<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    用户注册部分--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        用户名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&#x27;user&#x27;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        手机号 <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;10010&quot;</span>&gt;</span>10010<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;10086&quot;</span>&gt;</span>10086<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入手机号&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        密<span class="symbol">&amp;emsp;</span>码 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        验证码 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;yzm&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入验证码&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取验证码&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xy&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span>阅读并接受协议 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230710215908.png"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端练习</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql表约束和表关系</title>
    <url>/2023/05/08/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0/02Mysql%E8%A1%A8%E7%BA%A6%E6%9D%9F%E5%92%8C%E8%A1%A8%E5%85%B3%E7%B3%BB%20/</url>
    <content><![CDATA[<p>在数据库里，表约束，表关系加上表结构的修改这三个部分都是属于表的结构的设置。</p>
<span id="more"></span>

<h2 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h2><table>
<thead>
<tr>
<th align="center">约束条件</th>
<th align="center">默认</th>
<th align="center">非空</th>
<th align="center">唯一</th>
<th align="center">自增长</th>
<th align="center">主键</th>
<th align="center">外键</th>
</tr>
</thead>
<tbody><tr>
<td align="center">关键字</td>
<td align="center">default</td>
<td align="center">not null</td>
<td align="center">unique key</td>
<td align="center">auto_increment</td>
<td align="center">primary key</td>
<td align="center">foreign key</td>
</tr>
</tbody></table>
<h3 id="非空约束-not-null"><a href="#非空约束-not-null" class="headerlink" title="非空约束(not null)"></a>非空约束(not null)</h3><p>数据库字段的某个值是否可以为空，<code>NULL</code>  字段值可以为空，<code>NOT NULL</code>  字段值不能为空。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># not null限制一个字段的值不能为空，insert的时候必须赋值</span><br><span class="line"># 如果表内有违规数据需要先把违约的数据删除之后再添加非空约束</span><br><span class="line">alter table stu modify name varchar(20) not null;</span><br><span class="line"></span><br><span class="line"># 规格数据不能插入</span><br><span class="line">insert into stu(stu_id) values(1);</span><br><span class="line"># 需要满足name字段不能为空</span><br><span class="line">insert into stu(stu_id,name) values(1,&#x27;xiaobai&#x27;);</span><br></pre></td></tr></table></figure>

<h3 id="唯一约束-unique-key"><a href="#唯一约束-unique-key" class="headerlink" title="唯一约束(unique key)"></a>唯一约束(unique key)</h3><p>唯一约束，该字段的值不重复，也就是字段的值在表中唯一<code>unique key</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 约束字段值是惟一的，在表里值是没有重复</span><br><span class="line"># 例如：身份证号码</span><br><span class="line"># 添加唯一约束</span><br><span class="line">alter table stu add unique key(stu_id);</span><br><span class="line">desc stu; #uni就是唯一约束</span><br><span class="line"></span><br><span class="line"># 唯一约束id字段的值重复了不能插入</span><br><span class="line">insert into stu(stu_id,name) values(1,&#x27;xiaobai&#x27;);</span><br><span class="line"></span><br><span class="line"># 删除唯一约束</span><br><span class="line">ALTERT TABLE tbl_name DROP &#123;INDEX|KEY&#125; index_name</span><br></pre></td></tr></table></figure>
<h3 id="主键约束-primary-key"><a href="#主键约束-primary-key" class="headerlink" title="主键约束(primary key)"></a>主键约束(primary key)</h3><p>主键约束，一个表里面只能设置一个主键约束，它的要求是非空且唯一</p>
<p>没有申明为主键，有唯一约束和非空约束，就会默认为主键</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># primary key = not null + unique key</span><br><span class="line"># 添加主键约束</span><br><span class="line">alter table student add primary key(stu_id);</span><br><span class="line">desc student; #PRI 主键</span><br><span class="line"></span><br><span class="line"># 删除主键约束</span><br><span class="line">ALTER TABLE tbl_name DROP PRIMARY KEY</span><br></pre></td></tr></table></figure>
<h3 id="自增长约束-auto-increment"><a href="#自增长约束-auto-increment" class="headerlink" title="自增长约束(auto_increment)"></a>自增长约束(auto_increment)</h3><p><code>AUTO_INCREMENT</code> 自动编号，且必须与主键组合使用,意味着一个表里面只能有一个自增长</p>
<p>默认情况下，起始值为1，每次的增量为1。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 添加自增长</span><br><span class="line">alter table stu change stu_id stu_id tinyint auto_increment;</span><br><span class="line"></span><br><span class="line"># 插入数据时，如果为自增长数据列没有指定一个数值,自增长</span><br><span class="line">insert into stu(name,age) values(&#x27;东离&#x27;,68);</span><br><span class="line"># 插入数据时，如果为自增长数据列明确指定了一个数值，则会出现两种情况</span><br><span class="line"># 情况一 插入的值与已有的值重复，就会出现错误信息,因为自增长和主键是联合使用；</span><br><span class="line">insert into stu values(2,&#x27;东离&#x27;,68);</span><br><span class="line"># 情况二 如果插入的值大于已有的值，则满足规则能插入数据，并使在下一个值将从这个新值开始递增。可以跳过一些编号。</span><br><span class="line">insert into stu values(6,&#x27;东离&#x27;,68);</span><br><span class="line">insert into stu(name,age) values(&#x27;东离&#x27;,68);</span><br><span class="line">select * from stu;</span><br><span class="line"># 如果最大值被删除了，插入新记录时，依然会从之前最大值往后插入</span><br><span class="line">delete from stu where stu_id=7;</span><br><span class="line">insert into stu(name,age) values(&#x27;东离&#x27;,68);</span><br><span class="line">select * from stu;</span><br></pre></td></tr></table></figure>
<h3 id="默认约束-default"><a href="#默认约束-default" class="headerlink" title="默认约束(default)"></a>默认约束(default)</h3><p>初始值设置，插入数据时，如果没有明确为字段赋值，则自动赋予默认值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 添加默认约束</span><br><span class="line">alter table stu alter age set default 18;</span><br><span class="line">desc stu;</span><br><span class="line">insert into stu(name) values(&#x27;wanzi&#x27;);</span><br><span class="line">select * from stu;</span><br></pre></td></tr></table></figure>
<p>以上5个约束是对表自身数据的约束，实际开发的时候建表的时候就要把约束建好</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table xb(</span><br><span class="line">	id int primary key auto_increment, #主键 自增长</span><br><span class="line">    name varchar(20) not null, #非空</span><br><span class="line">    age int default 18, #默认</span><br><span class="line">)auto_increment=100,charset=&#x27;utf8&#x27;;    #可以直接在括号后面设置自增长从那里开始</span><br><span class="line">desc xb;</span><br><span class="line">insert into xb(name) values(&#x27;xiaobai&#x27;),(&#x27;zilin&#x27;),(&#x27;wanzi&#x27;);</span><br><span class="line">select * from xb;</span><br></pre></td></tr></table></figure>

<h3 id="外键约束-foreign-key-："><a href="#外键约束-foreign-key-：" class="headerlink" title="外键约束(foreign key)："></a>外键约束(foreign key)：</h3><p>外键约束是约束的表与表之间的关联</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">foreign key(当前表外键) references 其他表名(其他表名主键)</span><br></pre></td></tr></table></figure>

<h2 id="表关系"><a href="#表关系" class="headerlink" title="表关系"></a>表关系</h2><h3 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 学院表</span><br><span class="line">mysql&gt; create table college(</span><br><span class="line">    -&gt; d_id int PRIMARY KEY AUTO_INCREMENT , # 主键自增长</span><br><span class="line">    -&gt; d_name varchar(20) not null</span><br><span class="line">    -&gt; );</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into college values</span><br><span class="line">    -&gt; (1,&quot;软件技术&quot;),</span><br><span class="line">    -&gt; (2,&quot;机电工程&quot;),</span><br><span class="line">    -&gt; (3,&quot;音乐学院&quot;);</span><br><span class="line"></span><br><span class="line">select * from college;</span><br><span class="line"></span><br><span class="line"># 学生表</span><br><span class="line">mysql&gt; create table stu(</span><br><span class="line">    -&gt; s_id int PRIMARY KEY AUTO_INCREMENT ,  # 主键自增长</span><br><span class="line">    -&gt; s_name varchar(20) not null,  # 非空</span><br><span class="line">    -&gt; dept_id int,</span><br><span class="line">    -&gt; constraint c_s foreign key(dept_id) references college(d_id) </span><br><span class="line">    -&gt; );</span><br><span class="line"># constraint 给外键约束起别名，方便之后查询删除外键约束</span><br><span class="line">desc stu;</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into stu(s_name,dept_id) values</span><br><span class="line">    -&gt; (&#x27;听风&#x27;,1),</span><br><span class="line">    -&gt; (&#x27;东离&#x27;,2),</span><br><span class="line">    -&gt; (&#x27;回车&#x27;,3),</span><br><span class="line">    -&gt; (&#x27;茜茜&#x27;,2);</span><br><span class="line"></span><br><span class="line">select * from student;</span><br><span class="line"># 外键约束，添加一个不存在的</span><br><span class="line">insert into stu(s_name,dept_id) values (&#x27;叩叩&#x27;,5); </span><br></pre></td></tr></table></figure>

<h3 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 学生详情表</span><br><span class="line">mysql&gt; create table stu_mes(</span><br><span class="line">    -&gt; sm_id int primary key auto_increment,</span><br><span class="line">    -&gt; sm_age int,</span><br><span class="line">    -&gt; sm_sex varchar(20),</span><br><span class="line">    -&gt; sm_phone int,</span><br><span class="line">    -&gt; stu_id int unique key,</span><br><span class="line">    -&gt; constraint s_sm foreign key(stu_id) references stu(s_id) on delete cascade);</span><br><span class="line"></span><br><span class="line"># on delete cascade </span><br><span class="line"># cascade 级联删除 set null 删除之后关联表字段设置为空</span><br><span class="line"># no action 和 restrict 拒绝删除，修改</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into stu_mes values</span><br><span class="line">    -&gt; (1,20,&#x27;男&#x27;,111,1),</span><br><span class="line">    -&gt; (2,68,&#x27;男&#x27;,222,2),</span><br><span class="line">    -&gt; (3,21,&#x27;女&#x27;,333,3),</span><br><span class="line">    -&gt; (4,22,&#x27;男&#x27;,444,4);</span><br><span class="line"></span><br><span class="line">select * from stu_mes;</span><br></pre></td></tr></table></figure>

<h3 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 课程表</span><br><span class="line">mysql&gt; create table course(</span><br><span class="line">    -&gt; c_id int primary key auto_increment,</span><br><span class="line">    -&gt; c_name varchar(20) not null);</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into course(c_name) values</span><br><span class="line">    -&gt; (&quot;python&quot;),</span><br><span class="line">    -&gt; (&quot;math&quot;),</span><br><span class="line">    -&gt; (&quot;music&quot;)</span><br><span class="line">    -&gt; ;</span><br><span class="line"></span><br><span class="line">select * from course;</span><br><span class="line"></span><br><span class="line"># 中间表</span><br><span class="line">mysql&gt; create table sel(</span><br><span class="line">    -&gt; s_id int,</span><br><span class="line">    -&gt; c_id int,</span><br><span class="line">    -&gt; primary key(s_id,c_id),</span><br><span class="line">    -&gt; constraint s_s foreign key(s_id) references stu(s_id),</span><br><span class="line">    -&gt; constraint c_c foreign key(c_id) references course(c_id)</span><br><span class="line">    -&gt; );</span><br><span class="line"></span><br><span class="line">desc sel;</span><br><span class="line"># 联合主键决定同一个人不能选择相同的课程</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into sel values</span><br><span class="line">    -&gt; (1,1),</span><br><span class="line">    -&gt; (1,2),</span><br><span class="line">    -&gt; (2,2);</span><br><span class="line"></span><br><span class="line">select * from sel;</span><br></pre></td></tr></table></figure>


<h2 id="数据库三范式"><a href="#数据库三范式" class="headerlink" title="数据库三范式"></a>数据库三范式</h2><p>一、不可多表头</p>
<p>二、依赖分离，形成表关系</p>
<p>三、在二的基础上实现非主属性在整个数据库中只出现一次</p>
<h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>事务由事务开始与事务结束之间执行的全部数据库操作组成。中间执行的全部数据库操作要么全部执行,要么全部不执行。</p>
<ul>
<li><strong>BEGIN</strong>; 开始一个事务</li>
<li><strong>ROLLBACK</strong>; 事务回滚（类似撤销操作）</li>
<li><strong>COMMIT</strong>;事务确认</li>
</ul>
<h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p>视图是一个临时生成的虚拟表。只是最终结果的显示，并不能对视图里面的数据进行增删改查。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 关联查询</span><br><span class="line">select * from stu inner join sel on stu.s_id=sel.s_id;</span><br><span class="line"></span><br><span class="line"># 视图 给关联查询最终的结果生成一个虚拟表</span><br><span class="line">create view s_c as 关联查询</span><br><span class="line"></span><br><span class="line">show tables;</span><br><span class="line"></span><br><span class="line">select * from s_c;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML基础</title>
    <url>/2023/07/08/%E5%89%8D%E7%AB%AF%E7%90%86%E8%AE%BA/2023-07-08-HTML%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>前端课程</p>
<span id="more"></span>

<pre><code>1.网页的三要素：
    HTML：网页的结构
    CSS：网页的样式
    JavaScript:网页的行为
2.网页的基本结构:

3.网页的元素：开始标签 + 内容 + 结束标签 
注：单标签；没有内容，没有结束

head元素是title元素的父元素。
title是head的子元素

4.属性：key=&quot;value&quot; 是写在开始标签内
</code></pre>
<h2 id="HTML介绍"><a href="#HTML介绍" class="headerlink" title="HTML介绍"></a>HTML介绍</h2><p>HyperText Marked Language，HTML 是一种标记语言，使用一套标记标签来描述网页，Web浏览器（如谷歌浏览器，Internet Explorer，Firefox，Safari）是用于读取HTML文件，并将其作为网页显示，标记标签也可以称为元素，不同的标签有不同的功能解释，用来表示不同的功能。HTML由 W3C制定的，W3C(World Wide Web Consortium)是一个非盈利性组织。</p>
<p>标签特点：</p>
<ul>
<li>HTML 标签是由尖括号包围的关键词</li>
<li>标签通常是成对出现的。标签对中的第一个标签是开始标签，第二个标签是结束标签。</li>
<li>标签不区分大小写， html5规定必须小写</li>
</ul>
<h2 id="内联元素和块级元素"><a href="#内联元素和块级元素" class="headerlink" title="内联元素和块级元素"></a>内联元素和块级元素</h2><h3 id="基本标签"><a href="#基本标签" class="headerlink" title="基本标签"></a>基本标签</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230709163620.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--声明html文件--&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;!--用于声明当前网站是英文网站还是中文网站--&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;!--头部标签，一些头部信息以及文档的一些相关配置信息--&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;!--   告诉浏览器，当前文本的字符编码都是utf-8 --&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;!--    定义文档标题--&gt;</span><br><span class="line">    &lt;title&gt;前端开班典礼&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;!--可视化区域--&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>



<h3 id="块级标签"><a href="#块级标签" class="headerlink" title="块级标签"></a>块级标签</h3><h4 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;这是段落标签&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<h4 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">有序列表：&lt;ol&gt;&lt;/ol&gt;</span><br><span class="line">无序列表：&lt;ul&gt;&lt;/ul&gt;</span><br><span class="line">定义列表：</span><br><span class="line">&lt;dl&gt;</span><br><span class="line">    &lt;dt&gt;&lt;/dt&gt; </span><br><span class="line">    &lt;dd&gt;&lt;/dd&gt;</span><br><span class="line">&lt;/dl&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="盒子"><a href="#盒子" class="headerlink" title="盒子"></a>盒子</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">盒子（需要定义宽高）,没有语义 是进行网页布局的。</span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h4 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">标题标签从大到小显示有h1-h6</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;这是h1标题标签&lt;/h1&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--段落标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落标签就是p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落标签就是p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--列表标签--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--有序列表 ol  start 从第几个开始  type 排序类型--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    li 列项--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一点<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第二点<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--无序列表 ul--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第三点<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第四点<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--定义列表 dl--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    dt 列表项--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>白富美<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    dd 对列表项的具体解释或者秒速--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>很白<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>很有钱<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>很好看<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--盒子 div 需要定义宽高--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border:1px solid red&quot;</span>&gt;</span>盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--标题标签 h1-h6--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>2级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>6级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230709164837.png"></p>
<h3 id="内联标签"><a href="#内联标签" class="headerlink" title="内联标签"></a>内联标签</h3><h4 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;a&gt;&lt;/a&gt;</span><br><span class="line">用于跳转链接页面</span><br></pre></td></tr></table></figure>

<h4 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img src=&quot;&quot;&gt;</span><br><span class="line">在网页中显示图片</span><br></pre></td></tr></table></figure>

<h4 id="加粗标签"><a href="#加粗标签" class="headerlink" title="加粗标签"></a>加粗标签</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;b&gt;&lt;/b&gt;</span><br><span class="line">字体加粗</span><br></pre></td></tr></table></figure>

<h4 id="斜体标签"><a href="#斜体标签" class="headerlink" title="斜体标签"></a>斜体标签</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;i&gt;&lt;/i&gt;</span><br><span class="line">字体倾斜</span><br></pre></td></tr></table></figure>

<p>例子：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--超链接标签 href属性中的属性值就是你要跳转的链接地址</span></span><br><span class="line"><span class="comment">target=&quot;_blank 新增页面</span></span><br><span class="line"><span class="comment"># 不跳转--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;a href=&quot;#https://www.baidu.com&quot; target=&quot;_blank&quot;&gt;百度一下&lt;/a&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#https://www.baidu.com&quot;</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--在当前页面中设置多个a标签作为锚点，跳转路径设置为要跳转的锚点的id属性值--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--锚点--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#buttom&quot;</span> <span class="attr">id</span>=<span class="string">&quot;top&quot;</span>&gt;</span>去底部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height:300px;width: 200px;border:1px solid red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height:300px;width: 200px;border:1px solid red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height:300px;width: 200px;border:1px solid red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height:300px;width: 200px;border:1px solid red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height:300px;width: 200px;border:1px solid red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height:300px;width: 200px;border:1px solid red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height:300px;width: 200px;border:1px solid red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#top&quot;</span> <span class="attr">id</span>=<span class="string">&quot;buttom&quot;</span>&gt;</span>去顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--图片标签 img 自闭合标签  src 图片路径  alt 图片找不到的时候显示的提示信息--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;11.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片加载失败&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--加粗标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>湖南诚趣教育<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span>的老师都很耐心<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--斜体标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>湖南诚趣教育<span class="tag">&lt;/<span class="name">i</span>&gt;</span>的老师都很耐心<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--文本标签 无语义，只是得到一个普通的文本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230710212437.png"></p>
<h3 id="内联元素和块级元素的区别"><a href="#内联元素和块级元素的区别" class="headerlink" title="内联元素和块级元素的区别"></a>内联元素和块级元素的区别</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230709170210.png"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--区别：1、在不设置宽高的前提下，块级标签的宽度始终和浏览器的可视化区域保持一致</span></span><br><span class="line"><span class="comment">2、设置宽高有效</span></span><br><span class="line"><span class="comment">3、块级标签独占一行，排列顺序从上到下</span></span><br><span class="line"><span class="comment">4、块级标签可以包含块级标签和内联标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px;height: 200px;border: 1px solid yellow&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 50px;height: 50px;border: 1px solid greenyellow&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 50px;height: 50px;border: 1px solid greenyellow&quot;</span>&gt;</span>再见<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--区别：1、内联标签宽度只与本身内容有关</span></span><br><span class="line"><span class="comment">2、设置宽高无效</span></span><br><span class="line"><span class="comment">3、内联标签同时存在，默认排序是从左到右，不换行</span></span><br><span class="line"><span class="comment">4、内联标签只能包含内联标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>  <span class="attr">style</span>=<span class="string">&quot;width: 200px;height: 200px;border: 1px solid yellow&quot;</span>&gt;</span>文明</span><br><span class="line"><span class="comment">&lt;!--    &lt;div style=&quot;width: 50px;height: 50px;border: 1px solid greenyellow&quot;&gt;再见&lt;/div&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>  <span class="attr">style</span>=<span class="string">&quot;width: 200px;height: 200px;border: 1px solid yellow&quot;</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;span  style=&quot;width: 200px;height: 200px;border: 1px solid yellow&quot;&gt;文本&lt;/span&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--转义字符--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--空格--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>请<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>注册<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--全角空格 （宽度刚好是一个中文宽度）--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>请<span class="symbol">&amp;emsp;</span>注册<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><p>介绍：表单是搜集用户数据信息的各种表单元素的集合区域</p>
<p>作用：用于收取用户数据并向后台发送，前后交互的方式之一</p>
<p>应用：登录注册，搜索，文件上传等</p>
<h3 id="表单属性"><a href="#表单属性" class="headerlink" title="表单属性"></a>表单属性</h3><p>entype<br>设置编码格式<br>默认：application&#x2F;x-www-form-urlencoded<br>上传文件：multipart&#x2F;form-data<br>不建议使用：text&#x2F;plain</p>
<p>method<br>以什么方法提交（get，post），默认使用get方法</p>
<p>action<br>提交的路径默认使用当前页面</p>
<h3 id="表单包含元素"><a href="#表单包含元素" class="headerlink" title="表单包含元素"></a>表单包含元素</h3><p>input           输入框</p>
<p>textarea        文本输入输入域</p>
<p>select       下拉框</p>
<p>fieldset         分组，定义一组相关的表单元素，并使用外框包含起来</p>
<p>label        定义 input元素的标签</p>
<h3 id="input常用type属性"><a href="#input常用type属性" class="headerlink" title="input常用type属性"></a>input常用type属性</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230710215439.png"></p>
<p>例子：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--form表单中的输入框只有写在form表单中才会生效，注释掉form表单，虽然样式还是会渲染出来，但是不会生效了--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;../model1/01-基础标签.html&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    input</span></span><br><span class="line"><span class="comment">    text password （不显示）文本输入</span></span><br><span class="line"><span class="comment">    placeholder  提示属性--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    前后端交互中，针对用户输入，不加name属性，后端接收不到值--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    label标签中的for属性会去寻找整个form表单中id属性值一致的，达到自动选中输入框--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;user&quot;</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&#x27;user&#x27;</span> <span class="attr">id</span>=<span class="string">&#x27;user&#x27;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    br 换行标签--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密<span class="symbol">&amp;emsp;</span>码 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;password&#x27;</span> <span class="attr">name</span>=<span class="string">&#x27;pwd&#x27;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    性别 radio 单选框  name保持一致，代表分组--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    前后端交互中，针对用户选择，不加value属性，后端接受不到值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;man&quot;</span>&gt;</span>男</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;woman&quot;</span>&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    爱好  复选框 checkbox--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;fish&quot;</span>&gt;</span>摸鱼</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;fredd&quot;</span>&gt;</span>放假</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;study&quot;</span>&gt;</span>学习</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    文件上传 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    accept声明只上传某一类文件类型  image有很多种情况  *表示多种--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">value</span>=<span class="string">&quot;files&quot;</span> <span class="attr">accept</span>=<span class="string">&quot;image/*&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    文本输入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;test&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;10&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    下拉框 select--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--下拉选项 option</span></span><br><span class="line"><span class="comment">    selected 默认选项 当属性名和属性值保持一致的时候，可以不写属性值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;yd&quot;</span>&gt;</span>10086<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;lt&quot;</span> <span class="attr">selected</span>&gt;</span>10010<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    按钮--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮1&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    提交--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    重置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>运行结果为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230710214344.png"></p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>定义</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;table&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure>

<p>作用：主要以表格形式来展示数据</p>
<p>组成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;th&gt;表头&lt;/th&gt;</span><br><span class="line">&lt;tr&gt;行&lt;/tr&gt;</span><br><span class="line">&lt;td&gt;列&lt;/td&gt;</span><br><span class="line">表身tbody正规要写一般忽略</span><br><span class="line">表脚tfoot一般不写</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>例子：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--border=&quot;1&quot; 加上边框</span></span><br><span class="line"><span class="comment">cellspacing=&quot;0&quot; 设置单元格之间无间隔--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    th 表头--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    colspan合并列，其实就是让当前的单个单元格占据原本的3个单元格的位置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;3&quot;</span>&gt;</span>学生成绩表<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    tr 行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        td 列--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        rowspan合并行，其实就是让当前的单个单元格占据原本的2个单元格的位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>89<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>34<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>56<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        td 列--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;td&gt;69&lt;/td&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>24<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>76<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        td 列--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>69<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>39<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>78<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>运行为：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230709170414.png"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端理论</tag>
      </tags>
  </entry>
  <entry>
    <title>极客日记</title>
    <url>/2022/11/24/%E7%BD%91%E7%BB%9C%E7%A2%8E%E7%89%87/2022-11-24-%E6%9E%81%E5%AE%A2%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>网络技术常识</p>
<span id="more"></span>

<h2 id="什么是-CSS"><a href="#什么是-CSS" class="headerlink" title="什么是 CSS?"></a>什么是 CSS?</h2><p> CSS 指层叠样式表 (<strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets)</p>
<p>样式定义<strong>如何显示</strong> HTML 元素，<strong>可以用于给文档添加样式</strong>—— 比如改变标题和链接的颜色及大小。 它也可用于创建布局—— 比如将一个单列文本变成包含主要内容区域和存放相关信息的侧边栏区域的布局。 它甚至还可以用来做一些特效，比如动画</p>
<h2 id="什么是IP地址？"><a href="#什么是IP地址？" class="headerlink" title="什么是IP地址？"></a>什么是IP地址？</h2><p>（全称Internet Protocol Address），又译为网际协议地址、互联网协议地址。是网际协议中用于标识发送或接收数据报的设备的一串数字。</p>
<h2 id="什么是黑客口中的探针？"><a href="#什么是黑客口中的探针？" class="headerlink" title="什么是黑客口中的探针？"></a>什么是黑客口中的探针？</h2><p>黑客使用的探针通常是指用于侦查、扫描、攻击或渗透目标系统的工具或软件。这些探针旨在获取目标系统的信息、漏洞和弱点，以便黑客能够进行进一步的攻击或渗透。以下是一些常见的黑客探针类型：</p>
<p>端口扫描工具： 这些工具用于扫描目标系统上开放的网络端口。Nmap是一个常见的端口扫描工具，它可以帮助黑客识别目标系统上的开放端口和正在运行的服务。</p>
<p>漏洞扫描器： 漏洞扫描器用于扫描目标系统以查找已知的安全漏洞。例如，OpenVAS和Nessus是常用的漏洞扫描工具，它们可以帮助黑客找到目标系统上可能的漏洞。</p>
<p>网络嗅探工具： 这些工具用于监听和分析网络流量，以便黑客捕获敏感信息，如用户名、密码等。Wireshark是一个广泛使用的网络嗅探工具。</p>
<p>后门和远程访问工具： 后门是一种允许黑客在未来访问系统的方式，而无需重新入侵。远程访问工具（如Metasploit、Netcat、Meterpreter）则允许黑客远程控制目标系统。</p>
<p>木马： 木马是一种伪装成合法程序但实际上包含恶意功能的软件。黑客可以将木马植入目标系统，从而获取系统控制权。</p>
<p>社会工程工具： 社会工程是一种通过欺骗和诱导人们来获取敏感信息的技术。黑客可以使用钓鱼邮件、钓鱼网站等工具来诱使用户提供用户名、密码等信息。</p>
<p>请注意，这些工具在未经授权的情况下使用是非法的，违反了法律和伦理准则。探讨黑客工具的目的应该是为了了解如何保护自己的系统免受潜在的威胁，而不是为了从事恶意活动。</p>
<h2 id="什么是Ajax？"><a href="#什么是Ajax？" class="headerlink" title="什么是Ajax？"></a>什么是Ajax？</h2><p>Ajax（Asynchronous JavaScript and XML）是一种用于在网页上实现异步通信的技术。它通过使用 JavaScript 在不需要刷新整个网页的情况下与服务器进行数据交换，从而实现了更加流畅和动态的用户体验。虽然名称中包含”XML”，但实际上，Ajax 在数据交换方面并不一定非要使用 XML 格式，而可以使用其他数据格式，比如 JSON。</p>
<p>使用 Ajax，网页可以通过发送异步请求来获取数据或更新内容，而无需重新加载整个页面。这种技术在 Web 应用程序中非常常见，用于加载新的数据、提交表单、显示实时更新等等。典型的 Ajax 请求会使用 JavaScript 的 XMLHttpRequest 对象来实现。</p>
<p>优点：</p>
<p>用户体验更流畅：由于只更新部分页面内容，用户无需等待整个页面重新加载，可以获得更快的响应。<br>节省带宽：由于只传输所需的数据，而不是整个页面，可以减少数据传输量。<br>动态更新：允许网页在不刷新整个页面的情况下动态地更新内容，从而实现更多的交互和实时性。</p>
<p>缺点：</p>
<p>SEO 难度：由于搜索引擎爬虫难以解析使用 Ajax 加载的内容，可能会对搜索引擎优化造成一些挑战。<br>浏览器兼容性：不同浏览器可能对 Ajax 的支持和实现存在差异，需要开发人员做适当的兼容性处理。</p>
<p>需要注意的是，虽然 Ajax 是一种强大的技术，但在开发过程中也需要注意安全性和性能等问题。随着时间的推移，还涌现出了许多基于 Ajax 的框架和库，如jQuery、React、Angular 和 Vue.js 等，用于更方便地处理异步通信和前端开发。</p>
<h2 id="什么是OCR？"><a href="#什么是OCR？" class="headerlink" title="什么是OCR？"></a>什么是OCR？</h2><p>OCR（Optical Character Recognition，光学字符识别）是一种技术，用于将印刷或手写的文本内容转换成机器可识别的文本数据。它是通过扫描图像或文档，然后将其中的文字内容转化为数字文本的过程。OCR技术在许多领域都有广泛的应用，包括数字化档案、文档管理、图书馆管理、自动化办公等。</p>
<p>OCR的基本过程通常包括以下步骤：</p>
<ol>
<li>图像获取：从扫描仪、相机或其他图像源获取图像。</li>
<li>预处理：对图像进行一些处理，例如去除噪声、调整图像亮度和对比度，以提高识别的准确性。</li>
<li>特征提取：在图像中识别字符的边缘、轮廓和其他特征，以便将其与已知字符进行匹配。</li>
<li>字符识别：将提取的特征与已知字符集进行比较，以确定每个字符的可能性。这可能涉及到机器学习、神经网络等方法。</li>
<li>后处理：对识别结果进行进一步处理，例如校正错误、合并字符等，以提高整体识别准确性。</li>
<li>输出：生成机器可读的文本数据，作为最终的识别结果。</li>
</ol>
<p>OCR技术的准确性在很大程度上取决于图像质量、字体、语言和使用的OCR引擎等因素。近年来，随着深度学习技术的进步，OCR的准确性有了显著的提升，能够在各种不同场景下更准确地识别字符。</p>
<p>许多软件和服务都提供OCR功能，可以处理印刷文本、手写文本甚至是印刷体和手写的混合文本。如果您需要进行OCR识别，可以寻找适合您需求的OCR工具或库，例如Tesseract、ABBYY FineReader、Adobe Acrobat等。</p>
]]></content>
      <categories>
        <category>知识碎片</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>css入门</title>
    <url>/2023/07/08/%E5%89%8D%E7%AB%AF%E7%90%86%E8%AE%BA/2023-07-08-css%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>前端课程</p>
<span id="more"></span>

<h2 id="CSS介绍与基本使用"><a href="#CSS介绍与基本使用" class="headerlink" title="CSS介绍与基本使用"></a>CSS介绍与基本使用</h2><h3 id="css介绍："><a href="#css介绍：" class="headerlink" title="css介绍："></a>css介绍：</h3><p>​	CSS 指层叠样式表 (Cascading Style Sheets)，定义如何显示 HTML 元素的计算机语言</p>
<h3 id="css作用："><a href="#css作用：" class="headerlink" title="css作用："></a>css作用：</h3><p>​	可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。<br>​	让页面更加美观</p>
<h3 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h3><ul>
<li>直接写在标签style属性</li>
<li>写在style 标签内 </li>
<li>使用外部 .css 文件</li>
</ul>
<h3 id="css的引入："><a href="#css的引入：" class="headerlink" title="css的引入："></a>css的引入：</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    优先级：行内样式 &gt; 内部样式 = 外部样式（就近原则）--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    外部样式：写在head中，通过link标签来进行引入  rel表示的引入的是css样式表  href里面填写的是文件路径</span></span><br><span class="line"><span class="comment">    优点：完全实现了结构分离，可以控制整个站点</span></span><br><span class="line"><span class="comment">    缺点：需要引入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;01-css的引入.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--内部样式：在head中增加style，然后给这个标签设置样式</span></span><br><span class="line"><span class="comment">    优点：结构分离</span></span><br><span class="line"><span class="comment">    缺点:并没有彻底实现结构分离，只能控制当前页面--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--行内样式：直接写在标签中</span></span><br><span class="line"><span class="comment">缺点：没有实现样式结构分离，只能控制一个标签</span></span><br><span class="line"><span class="comment">优点：书写方便，权重高--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color:green&quot;</span>&gt;</span>今天开始学习css<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>今天开始学习css<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h2><h3 id="css选择器介绍"><a href="#css选择器介绍" class="headerlink" title="css选择器介绍:"></a>css选择器介绍:</h3><p>作用:    指定元素添加样式，精准且效率高</p>
<p>优先级:   选择器有权重差别，当多个选择器同时选择一个标签引发冲突时，需要看优先级</p>
<p>选择器分类:    </p>
<p>简单选择器：<br>    id选择器 	class选择器 	标签选择器<br>复杂选择器：<br>    子代选择器<br>    后代选择器<br>    兄弟选择器<br>    相邻选择器<br>    群组选择器<br>    属性选择器<br>伪类选择器</p>
<h3 id="简单选择器"><a href="#简单选择器" class="headerlink" title="简单选择器:"></a>简单选择器:</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--简单选择器：id，class，标签选择器--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    优先级：id选择器 &gt; class选择器 &gt; 标签选择器--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">         <span class="comment">/*标签选择器*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*     class选择器，针对每一个元素，都具有class属性，至于属性值是需要自定义的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    通过class去选中它，.作为标识符， 名字</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    class属性值能够重复*/</span></span></span><br><span class="line"><span class="language-css">         <span class="selector-class">.p1</span> &#123;</span></span><br><span class="line"><span class="language-css">             <span class="attribute">color</span>:yellow;</span></span><br><span class="line"><span class="language-css">         &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*     id选择器 #作为标识符   id属性值具有唯一性*/</span></span></span><br><span class="line"><span class="language-css">         <span class="selector-id">#p2</span> &#123;</span></span><br><span class="line"><span class="language-css">             <span class="attribute">color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">         &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是基础选择器<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>这是基础选择器1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>这是基础选择器2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是基础选择器3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>文本1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>文本2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="复杂选择器："><a href="#复杂选择器：" class="headerlink" title="复杂选择器："></a>复杂选择器：</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*层次选择器  颜色可以被继承*/</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*复杂选择器*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*子代选择器*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &gt; <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    后代选择器(孙辈，子代）*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*div span&#123;*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    color:green;*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*&#125;*/</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    兄弟选择器(向下运行）*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.p1</span> ~ <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    相邻选择器  相邻的一个*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.p1</span> + <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: rosybrown;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    属性选择器 针对name 可以指定name */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span><span class="selector-attr">[name=<span class="string">&#x27;sp&#x27;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: saddlebrown;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    群组选择器*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>,<span class="selector-tag">p</span>,<span class="selector-class">.p1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: purple;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    全选选择器 优先级最低*/</span></span></span><br><span class="line"><span class="language-css">    * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是基础选择器<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>这是基础选择器1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>这是基础选择器2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>这是基础选择器3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sp&quot;</span>&gt;</span>文本1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">name</span>=<span class="string">&quot;sp1&quot;</span>&gt;</span>文本2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="伪类选择器："><a href="#伪类选择器：" class="headerlink" title="伪类选择器："></a>伪类选择器：</h3><ul>
<li>link           未访问时的状态</li>
<li>hover          鼠标悬浮时的状态</li>
<li>active            鼠标点击时的状态</li>
<li>visited             鼠标点击松开后的状态</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*伪类选择器，主要作用于a标签*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*未访问时*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: rosybrown;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    鼠标悬浮时*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    鼠标点击时*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    鼠标点击过后*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: gray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">          <span class="comment">/*  id个数不同，     id优先*/</span></span></span><br><span class="line"><span class="language-css">      <span class="comment">/*id相同，     class优先*/</span></span></span><br><span class="line"><span class="language-css">          <span class="comment">/*id,class相同，    标签*/</span></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="优先级总结"><a href="#优先级总结" class="headerlink" title="优先级总结:"></a>优先级总结:</h3><ul>
<li><p>复杂选择器      </p>
<p>  id 个数不等，id越多，优先级越高<br>  id相同，class越多，优先级越高<br>  id，class都相同，则标签越多，优先级越高</p>
</li>
<li><p>普通选择器         id &gt; class &gt; 标签</p>
</li>
<li><p>都相同的情况下满足就近原则</p>
</li>
</ul>
<h2 id="CSS字体-x2F-文本"><a href="#CSS字体-x2F-文本" class="headerlink" title="CSS字体&#x2F;文本"></a>CSS字体&#x2F;文本</h2><h3 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式:"></a>字体样式:</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230715103304.png"></p>
<h3 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式:"></a>文本样式:</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230715103319.png"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    字体样式*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    字体类型*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: 幼圆;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    字体粗细 300-700(bold)*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    字体大小*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    字体样式  斜体*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-style</span>: italic;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    颜色*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: purple;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    字体样式大小写：针对英文*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    font-variant: all-small-caps;  全部大写*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    font-variant: all-petite-caps;   短身大写*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    font-variant: full-width;  对短*/</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    复合样式*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    顺序：字体样式 字体大小写 字体粗细 字体大小 字体类型*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font</span>:italic <span class="number">300</span> <span class="number">24px</span> 仿宋;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    文本样式*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    对齐方式  居中对齐*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    text-align: center;*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    缩进两个中文长度  em相当于中文字符的宽度的倍速*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*   字体行高*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    词距*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">word-spacing</span>: <span class="number">70px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    字距*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">letter-spacing</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    下划线*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    text-decoration: underline;*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    删除线*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: line-through;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    取消下划线*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>:none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是开始给字体 设置样式了  Rs ss<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是文本样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>







<h2 id="CSS背景样式的设置"><a href="#CSS背景样式的设置" class="headerlink" title="CSS背景样式的设置"></a>CSS背景样式的设置</h2><h3 id="背景样式"><a href="#背景样式" class="headerlink" title="背景样式:"></a>背景样式:</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230715103333.png"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    背景颜色 transparent 透明*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: purple;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    背景图片*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;../model1/1.jpg&quot;</span>);</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    背景图片大小*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-size</span>: <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    取消平铺 no-repeat*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-repeat</span>: no-repeat;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    背景定位 居中 center top bottom right left*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: center;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    复合样式*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    背景颜色 背景图片 是否需要平铺 背景定位/背景大小*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: transparent <span class="built_in">url</span>(<span class="string">&quot;../model1/1.jpg&quot;</span>) no-repeat center/<span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    边框*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> blue solid;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    边框弧度*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    border-radius: 10px;*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">15%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端理论</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL查询</title>
    <url>/2023/05/09/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0/03mysql%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<p>MySQL 数据库使用SQL SELECT语句来查询数据。你可以通过 mysql&gt; 命令提示窗口中在数据库中查询数据，或者通过PHP脚本来查询数据。</p>
<span id="more"></span>



<h1 id="MySQL查询"><a href="#MySQL查询" class="headerlink" title="MySQL查询"></a>MySQL查询</h1><h2 id="单表查询"><a href="#单表查询" class="headerlink" title="单表查询"></a>单表查询</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 全字段查询</span><br><span class="line">select * from xb;</span><br><span class="line"></span><br><span class="line"># 指定字段查询</span><br><span class="line">select name,age from xb;</span><br><span class="line"></span><br><span class="line"># where条件查询</span><br><span class="line">select * from xb where age=18 and name=&quot;小白&quot;;</span><br><span class="line"></span><br><span class="line"># like模糊查询 % 匹配任意多个字符 _ 匹配任意一个字符</span><br><span class="line">select * from xb where name like &#x27;小%&#x27;;</span><br><span class="line"></span><br><span class="line"># as取别名</span><br><span class="line">select co.c_id from course as co;</span><br></pre></td></tr></table></figure>

<h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><p>无条件连接：第一张表的每一项都会和另一张表的每一项依次组合。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 没有条件的连接查询，没有很大的意义</span><br><span class="line"># 笛卡尔坐标轴 a表的每一项都和b表所有项匹配</span><br><span class="line">select * from stu inner join college;</span><br><span class="line">select * from stu,college;</span><br></pre></td></tr></table></figure>

<p>有条件连接：+on子句，根据条件来进行连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 带条件多表查询 通过主外键关联然后去查询</span><br><span class="line">select * from stu inner join college on stu.dept_id=college.d_id;</span><br><span class="line">select * from stu as s inner join college as c on s.dept_id=c.d_id;</span><br><span class="line"></span><br><span class="line"># 也可以where</span><br><span class="line">select * from stu as s,college as c where s.dept_id=c.d_id;</span><br></pre></td></tr></table></figure>

<h3 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h3><p>左右连接，效率更优，选择优先小表为主表</p>
<h4 id="左连接"><a href="#左连接" class="headerlink" title="左连接"></a>左连接</h4><p> <code>A left join B</code> 会以左边的A表为主，展式左边A表的所有数据，展式右边B表中符合<code>ON</code>子句中条件的数据，没有为空。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from stu as s left join college as c on s.dept_id=c.d_id;</span><br></pre></td></tr></table></figure>

<h4 id="右连接"><a href="#右连接" class="headerlink" title="右连接"></a>右连接</h4><p><code>A right join B</code>右连接和左连接类似，只是作用相反</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from stu as s right join college as c on s.dept_id=c.d_id;</span><br></pre></td></tr></table></figure>

<h4 id="全连接"><a href="#全连接" class="headerlink" title="全连接"></a>全连接</h4><p>union all左右连接的组合</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from stu as s left join college as c on s.dept_id=c.d_id</span><br><span class="line">    -&gt; union all</span><br><span class="line">    -&gt; select * from stu as s right join college as c on s.dept_id=c.d_id;</span><br></pre></td></tr></table></figure>

<p>union左右连接的组合+去重</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from stu as s left join college as c on s.dept_id=c.d_id</span><br><span class="line">    -&gt; union</span><br><span class="line">    -&gt; select * from stu as s right join college as c on s.dept_id=c.d_id;</span><br></pre></td></tr></table></figure>

<h2 id="字表查询"><a href="#字表查询" class="headerlink" title="字表查询"></a>字表查询</h2><p>在一个SQL语句中出现两个SQL语句，就是子表查询</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># join on</span><br><span class="line">mysql&gt; select * from college c join</span><br><span class="line">    -&gt; (select stu_id,s_name,sm_age,sm_sex,sm_phone,dept_id from stu s join stu_mes sm on sm.stu_id=s.s_id)</span><br><span class="line">    -&gt; as e on e.dept_id=c.d_id;</span><br><span class="line">    </span><br><span class="line"># where</span><br><span class="line">mysql&gt; select * from stu s where s.dept_id=</span><br><span class="line">    -&gt; (select d_id from college c where c.d_name=&#x27;机电工程&#x27;);</span><br></pre></td></tr></table></figure>

<h2 id="查询的其他操作"><a href="#查询的其他操作" class="headerlink" title="查询的其他操作"></a>查询的其他操作</h2><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p><code>order dy</code>，<code>asc</code>升序(默认)   <code>desc</code>降序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 以年龄进行排序</span><br><span class="line">select * from stu_mes order by sm_age;  # 默认升序</span><br><span class="line">select * from stu_mes order by sm_age desc;  # desc降序</span><br></pre></td></tr></table></figure>

<h3 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h3><p>限制显示的行数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from stu_mes order by sm_age desc limit 3;  # 限制显示三行</span><br><span class="line">select * from stu_mes order by sm_age desc limit 1,2;  # 从下标为1开始显示两行</span><br></pre></td></tr></table></figure>

<h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><p><code>GROUP BY</code>，常用于分组统计</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 使用group by后，会按照group by后面的字段进行分组，且必须是明确的字段，不能是*，因此select后面也不能是*</span><br><span class="line">select c.d_id,c.d_name,count(*) from college c join stu s on c.d_id=s.dept_id group by c.d_id,c.d_name;  # 统计每个学院里面有多少学生个数。</span><br><span class="line"></span><br><span class="line"># having对分组查询的结果进行二次筛选</span><br><span class="line"># 注意：having后的字段必须是select后出现过的</span><br><span class="line">select c.d_id,c.d_name,count(*) from college c join stu s on c.d_id=s.dept_id group by c.d_id,c.d_name having count(*)&gt;1;</span><br></pre></td></tr></table></figure>

<h1 id="mysql函数（了解）"><a href="#mysql函数（了解）" class="headerlink" title="mysql函数（了解）"></a>mysql函数（了解）</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 把null处理成自己指定的数据</span><br><span class="line">select *,ifnull(stu.dept_id,420) from stu;</span><br><span class="line"></span><br><span class="line"># 字符串长度截取</span><br><span class="line"># left是从左边开始截取</span><br><span class="line">select *,left(s_name,1) from stu;</span><br><span class="line"># right是用右边开始截取</span><br><span class="line">select *,right(s_name,1) from stu;</span><br><span class="line">#substring也是字符串截取，但是可以指定起始位置 </span><br><span class="line">select *,substring(s_name,2,1) from stu; # 从位置2开始截取1个字符</span><br><span class="line"></span><br><span class="line"># 字符串拼接</span><br><span class="line">select *,concat(s_name,s_id) from stu;</span><br></pre></td></tr></table></figure>

<h1 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h1><p>1.尽量避免整表扫描，如SELECT *<br>2.建立合适的索引</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table stu add index(s_name);  #给stu表的字段s_name字段添加索引</span><br></pre></td></tr></table></figure>

<p>3.使用合适的存储引擎<br>InnoDB：支持事务，mysql默认引擎，安全性高速度慢<br>4.在JOIN中，尽量用小表LEFT JOIN 大表<br>5.除非十分必要，尽量不要使用ORDER BY(排序),GROUP BY (分组)和 DISTINCT(去重)，尽量用索引来代替</p>
<h1 id="学习方向"><a href="#学习方向" class="headerlink" title="学习方向"></a>学习方向</h1><p>基本操作(增删改查），整理清楚</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果对数据库感兴趣可以参考以下的学习路线：</span><br><span class="line">1.先去理解数据库的索引，视图等功能</span><br><span class="line">2.考虑分区分页等存储问题</span><br><span class="line">3.考虑主从，分布式的实现方法和原理</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>css提升</title>
    <url>/2023/07/09/%E5%89%8D%E7%AB%AF%E7%90%86%E8%AE%BA/2023-07-09-css%E6%8F%90%E5%8D%87/</url>
    <content><![CDATA[<p>前端课程</p>
<span id="more"></span>

<h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><h3 id="盒子模型简介"><a href="#盒子模型简介" class="headerlink" title="盒子模型简介"></a>盒子模型简介</h3><p>各部分解释</p>
<p>1，Margin(外边距) - 清除边框外的区域，外边距是透明的。<br>2，Border(边框) - 围绕在内边距和内容外的边框。<br>3，Padding(内边距) - 清除内容周围的区域，内边距是透明的。<br>4，Content(内容) - 盒子的内容，显示文本和图像</p>
<p>box model</p>
<p>所有HTML元素可以看作盒子，在CSS中，”box model”这一术语是用来设计和布局时使用。</p>
<p>包含内容</p>
<p>边距，边框，填充，和实际内容。</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230718102100.png"></p>
<h3 id="边框样式"><a href="#边框样式" class="headerlink" title="边框样式"></a>边框样式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: rosybrown;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    边框*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    边框颜色*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    border-color: purple;*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*!*    边框类型  solid  实线   dotted 点线 dashed 虚线*!*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    border-style: dashed;*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*!*    边框宽度*!*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    border-width: 3px;*/</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*   复合样式(定义的元素四条边都是一样的样式) */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    border: 2px red solid;*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    可以分别针对上下左右边框进行定义*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: blue <span class="number">1px</span> solid;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: yellow <span class="number">1px</span> solid;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-left</span>: black <span class="number">1px</span> solid;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-right</span>: red <span class="number">1px</span> solid;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h3 id="内边距样式"><a href="#内边距样式" class="headerlink" title="内边距样式"></a>内边距样式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    内边距*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    padding-top: 20px;*/</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    复合样式 将四个属性一起设置*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    padding: 20px;*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    二个参数  上下  左右*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    padding: 20px 30px;*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    三个参数 上 左右  下*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*      padding: 20px 30px 10px;*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    四个参数 上 右 下 左 （顺时针）*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span> <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="内联块元素"><a href="#内联块元素" class="headerlink" title="内联块元素"></a>内联块元素</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;clear.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/*&lt;!--        块级元素转换为内联元素--&gt;*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*内联元素转为块级元素*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">             <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*display: block;*/</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*内联块元素  设置宽高有效  不会独占一行*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>www<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>www<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>内联块元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="外边距样式"><a href="#外边距样式" class="headerlink" title="外边距样式"></a>外边距样式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    外边距*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    二个参数  上下  左右*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    三个参数 上 左右  下*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*    四个参数 上 右 下 左 （顺时针）*/</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h2 id="css浮动"><a href="#css浮动" class="headerlink" title="css浮动"></a>css浮动</h2><p>浮动介绍</p>
<p>CSS 的 Float（浮动），会使元素向左或向右移动，其周围的元素也会重新排列。</p>
<p>特点</p>
<p>1，使元素脱离文档流，按照指定的(左右)方向移动<br>2，遇到父级边界或者相邻元素停下来<br>3，浮动元素不占空间</p>
<p>设置浮动</p>
<p>设置浮动会使元素漂浮起来，最终渲染效果是从上往下看</p>
<p>高度坍塌:<br>父元素不设置高度，靠子元素撑起高度，当所有子元素都浮动，此时所有子元素脱离文档流，父元素认为自己内部没有元素了，导致父元素没有高度</p>
<p>解决办法:<br>1，给父级设置高度（固定化不推荐）<br>2，给父级添加一个空的div填充物（固定化不推荐）<br>3，给父级添加overflow: hidden（超出部分隐藏，对宽高有一定限制，不推荐）<br>4，选择器选中父级使用伪元素（最优选择）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*设置浮动，浮动只有左右*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*右浮*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*float: right;*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*1、遇到父级边界或者相邻元素就停下来</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            2、脱离文档流，在原本页面不占位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            3、任何元素都可以浮动，加上浮动之后具有内联块元素特性*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*方式三：超出部分影响*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*.box3 &#123;*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    overflow: hidden;*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*&#125;*/</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*方法四：伪元素*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    转换为块级元素*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    清除浮动，但是本质上还是浮动*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">clear</span>:both;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>:<span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--方法二：给父级元素设置高度--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    方法一：加一个盒子（填充物）--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="css定位"><a href="#css定位" class="headerlink" title="css定位"></a>css定位</h2><h3 id="静态定位"><a href="#静态定位" class="headerlink" title="静态定位"></a>静态定位</h3><p>静态定位：默认在什么位置就在什么位置，设置无效</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">         <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">          <span class="comment">/*   静态定位 默认在哪个地方就在哪个地方 设置无效*/</span></span></span><br><span class="line"><span class="language-css">          <span class="attribute">position</span>: static;</span></span><br><span class="line"><span class="language-css">             <span class="attribute">top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h3><p>相对定位：相对之前位置的移动</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    相对定位  参照物是相对于本身之前的位置*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    没有脱离文档流*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>:<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: navajowhite;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h3><p>绝对定位<br>1，会脱离文档流。<br>2，父相子绝<br>       父级盒子没有加定义的时候，元素的参照物对象是浏览器<br>       父级盒子设置了定位的时候的时候，元素的参照物对象是父级元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: greenyellow;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    绝对定位  父相子绝*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    1、父类元素设置了定位的时候，子元素的参照物对象是父级元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        2、父类元素没有设置定位，就会一层一层找定位，如果有，就以定位为参照物，如果没有，就以浏览器为参照物*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    绝对定位脱离文档流*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>:<span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: navajowhite;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h3><p>固定定位：参照物是浏览器</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    固定定位*/</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    参照物是浏览器  脱离了文档流*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">         <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: navajowhite;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="层级"><a href="#层级" class="headerlink" title="层级"></a>层级</h3><p>当多个盒子覆盖时，可以设置层级, 显示层级最大的，默认是1</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*取消小圆点*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>:none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.li1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/*    显示层级增大*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">2</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.li2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.li3</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.li4</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">         <span class="comment">/*    接下来给所有的子盒子设置绝对定位*/</span></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    这里要注意，这和css浮动是有区别的，而不是所谓的碰到边界就停止</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    而是进行覆盖叠加*/</span></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    那么就给其加层级，层级默认都是为1*/</span></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*    谁的层级最大,谁就具有主导地位*/</span></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;li1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;li2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;li3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;li4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="重置样式"><a href="#重置样式" class="headerlink" title="重置样式"></a>重置样式</h2><p>原因：在使用浏览器显示所渲染页面时，本身浏览器就自带了一些样式，导致最终效果和自己所写样式不一致</p>
<p>解决办法：使用别人提供的 ResetCSS 来去掉浏览器的样式</p>
<p>参考ResetCSS：<a href="https://meyerweb.com/eric/tools/css/reset/">https://meyerweb.com/eric/tools/css/reset/</a></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* http://meyerweb.com/eric/tools/css/reset/</span></span><br><span class="line"><span class="comment">   v2.0 | 20110126</span></span><br><span class="line"><span class="comment">   License: none (public domain)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-tag">div</span>, <span class="selector-tag">span</span>, applet, <span class="selector-tag">object</span>, <span class="selector-tag">iframe</span>,</span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>, <span class="selector-tag">p</span>, <span class="selector-tag">blockquote</span>, pre,</span><br><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">abbr</span>, acronym, <span class="selector-tag">address</span>, big, <span class="selector-tag">cite</span>, <span class="selector-tag">code</span>,</span><br><span class="line"><span class="selector-tag">del</span>, <span class="selector-tag">dfn</span>, <span class="selector-tag">em</span>, <span class="selector-tag">img</span>, <span class="selector-tag">ins</span>, <span class="selector-tag">kbd</span>, <span class="selector-tag">q</span>, s, <span class="selector-tag">samp</span>,</span><br><span class="line">small, strike, <span class="selector-tag">strong</span>, sub, <span class="selector-tag">sup</span>, tt, <span class="selector-tag">var</span>,</span><br><span class="line"><span class="selector-tag">b</span>, u, <span class="selector-tag">i</span>, center,</span><br><span class="line"><span class="selector-tag">dl</span>, <span class="selector-tag">dt</span>, <span class="selector-tag">dd</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">li</span>,</span><br><span class="line"><span class="selector-tag">fieldset</span>, <span class="selector-tag">form</span>, <span class="selector-tag">label</span>, <span class="selector-tag">legend</span>,</span><br><span class="line"><span class="selector-tag">table</span>, <span class="selector-tag">caption</span>, <span class="selector-tag">tbody</span>, <span class="selector-tag">tfoot</span>, <span class="selector-tag">thead</span>, <span class="selector-tag">tr</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span>,</span><br><span class="line"><span class="selector-tag">article</span>, <span class="selector-tag">aside</span>, <span class="selector-tag">canvas</span>, <span class="selector-tag">details</span>, embed,</span><br><span class="line"><span class="selector-tag">figure</span>, <span class="selector-tag">figcaption</span>, <span class="selector-tag">footer</span>, <span class="selector-tag">header</span>, <span class="selector-tag">hgroup</span>,</span><br><span class="line"><span class="selector-tag">menu</span>, <span class="selector-tag">nav</span>, output, ruby, <span class="selector-tag">section</span>, <span class="selector-tag">summary</span>,</span><br><span class="line"><span class="selector-tag">time</span>, <span class="selector-tag">mark</span>, <span class="selector-tag">audio</span>, <span class="selector-tag">video</span> &#123;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="number">100%</span>;</span><br><span class="line">   <span class="attribute">font</span>: inherit;</span><br><span class="line">   <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* HTML5 display-role reset for older browsers */</span></span><br><span class="line"><span class="selector-tag">article</span>, <span class="selector-tag">aside</span>, <span class="selector-tag">details</span>, <span class="selector-tag">figcaption</span>, <span class="selector-tag">figure</span>,</span><br><span class="line"><span class="selector-tag">footer</span>, <span class="selector-tag">header</span>, <span class="selector-tag">hgroup</span>, <span class="selector-tag">menu</span>, <span class="selector-tag">nav</span>, <span class="selector-tag">section</span> &#123;</span><br><span class="line">   <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">   <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ol</span>, <span class="selector-tag">ul</span> &#123;</span><br><span class="line">   <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span>, <span class="selector-tag">q</span> &#123;</span><br><span class="line">   <span class="attribute">quotes</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">blockquote</span><span class="selector-pseudo">:after</span>,</span><br><span class="line"><span class="selector-tag">q</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">q</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">   <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">   <span class="attribute">content</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">   <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">   <span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="中线标准"><a href="#中线标准" class="headerlink" title="中线标准"></a>中线标准</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/dd76376f8807e65a6cab2fe3eb793ca.png"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端理论</tag>
      </tags>
  </entry>
  <entry>
    <title>我对学习的理解</title>
    <url>/2022/09/24/%E6%96%87%E5%AD%A6%E5%AD%A6%E4%B9%A0/2022-09-24-%E6%88%91%E5%AF%B9%E5%AD%A6%E4%B9%A0%E7%9A%84%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<p>有趣的想法</p>
<span id="more"></span>

<p>我认为一个人的精力是十分有限的，留给学习的就更少了，于是我的需求是<strong>如何更快更有效的学习</strong>，以下为我的观点：</p>
<ul>
<li><strong>简洁</strong>是智慧的灵魂</li>
<li>不要刻意求快，如果你只想快点结束它，代表你一点也不关心它了</li>
<li><strong>系统性学习</strong>，建立属于自己的知识树，分支可参考<strong>章节</strong>，<strong>主题</strong>，以及<strong>what</strong>（是什么，自己的话简述概念）&#x2F;<strong>how</strong>（怎么样，适用范围，方法原理，具体步骤，应用的过程）&#x2F;<strong>why</strong>（为什么，它能解决啥问题，应用的结果）</li>
<li>理解知识最好的方法就是举一个例子</li>
<li>记忆类的知识学起来要<strong>随意</strong>，也就是时间要随时随地，碎片化，<br>理解类的知识学起来要<strong>刻意</strong>，也就是分配一段全神贯注且足够长的时间</li>
<li>学习知识最重要的是要明白它<strong>能解决什么问题</strong>，掌握知识是我们的手段，目的是解决问题，手段为目的而服务</li>
<li>节约时间最好的方式就是学习<strong>经典</strong></li>
<li>学会类比学习，减少重复输入，知识<strong>共性</strong>，知识<strong>特性</strong></li>
<li>语言的作用是<strong>表达</strong>，单词和短语的作用是构成句子，句子也是表达，所以你应该你学习的单词和短语组成句子，<strong>去表达你想表达的一切</strong>，而不是单纯的无脑背。</li>
<li>要学会<strong>分解</strong>，难的都是由简单的组成</li>
<li><strong>不要强迫</strong>自己，想学就学</li>
<li>注意要用到<strong>思维能力</strong>（分析、推理、归纳、总结、联想、创造……）</li>
<li><strong>质疑一切</strong>，不要轻易相信权威，是个人就会犯错</li>
</ul>
<p>编程随想的学习观点：</p>
<p><a href="https://program-think.blogspot.com/2013/09/knowledge-structure.html">https://program-think.blogspot.com/2013/09/knowledge-structure.html</a></p>
<p><a href="https://program-think.blogspot.com/2019/10/Systematic-Learning.html">https://program-think.blogspot.com/2019/10/Systematic-Learning.html</a></p>
]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>思考</tag>
      </tags>
  </entry>
  <entry>
    <title>提问的智慧</title>
    <url>/2022/09/24/%E6%96%87%E5%AD%A6%E5%AD%A6%E4%B9%A0/2022-09-24-%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/</url>
    <content><![CDATA[<p>有趣的想法</p>
<span id="more"></span>

<p><a href="https://zhaochenyang20.github.io/2022/03/16/CS/others/how_to_ask_a_question/">https://zhaochenyang20.github.io/2022/03/16/CS/others/how_to_ask_a_question/</a></p>
<p><a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md">https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md</a></p>
]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>思考</tag>
      </tags>
  </entry>
  <entry>
    <title>编程的智慧</title>
    <url>/2022/09/24/%E6%96%87%E5%AD%A6%E5%AD%A6%E4%B9%A0/2022-09-24-%E7%BC%96%E7%A8%8B%E7%9A%84%E6%99%BA%E6%85%A7/</url>
    <content><![CDATA[<p>有趣的想法</p>
<span id="more"></span>

<p><a href="http://www.yinwang.org/blog-cn/2015/11/21/programming-philosophy">http://www.yinwang.org/blog-cn/2015/11/21/programming-philosophy</a></p>
]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>思考</tag>
      </tags>
  </entry>
  <entry>
    <title>思考-0</title>
    <url>/2022/09/05/%E6%96%87%E5%AD%A6%E5%AD%A6%E4%B9%A0/%E6%80%9D%E8%80%83-0/</url>
    <content><![CDATA[<p>有趣的想法</p>
<span id="more"></span>

<p>告诉我知识，我会忘，教导我知识，我只会记得，让我深入其中，我才能真正学习<br>热情与好奇，是实现一切可能的基石.<br>你不能强迫一个人爱上你，但你可以制造机会<br>规则存在的意义就是快速的帮你做出选择<br>比如，游戏就是有一套规则，然后我们用规则去答题<br>今日不肯埋头，明日何以抬头<br>学到知识了，就要想想做点不一样的事，即没学前办不到的事情<br>问题是学习的目的，学习要问出来<br>先有想法再把它做出来<br>找到你心中真正的热爱，并追求它，把每一天当做最后一天去度过<br>每个人都应该学习如何为计算机写程序，因为它能教你如何思考<br>要有问题，就讲出来，不然就是你的问题<br>念念不忘,必有回响,有一口气,点一盏灯。<br>各花各有各花香，各山各水各有灵，人各有道，道不同不相为谋 ，我们还年轻，单纯爱情，一味金钱，过度片面，我们要知道，我们的意义是什么<br>天下没有众生平等这种说法，谁强谁就可以俯视一切<br>“努力吧，用高傲的目光俯视弱者。”<br>那估计你怎么都不会当上强者。何为强者？能同情弱者，不断超越自己，才叫强者。</p>
<p>成人幼儿园，就业蓄水池。仅此而已，不要想太多。  要么盯准自己的目标钻，要么练习通用技能(英语，数三，通史，写作，office，交际攒局，演讲，推销，玩，等等)   其实只是之前的经济太热了，工科互联网，文科自媒体。都能找到还凑合的工作岗位，现在这些还算凑合的岗位都不好找了，自然压力很大。而且这长衫也不好脱啊，现在工厂都不太招人，骑手都满员。  脱不脱都不好找工作</p>
<p>想赢不一定要有实力和本钱，最重要要有信心和胆识。放弃就一定是输。尝试还有一半机会。这世上有个东西叫“运气”，有了它没什么不可能的</p>
<p>如何从易劳体质变成高精力人群</p>
<p>1.目标感</p>
<p>（1）了解自己，知道自己想要的是什么，做一定的取舍；</p>
<p>（2）明白自己想要的是什么，明白自己的优势和劣势，了解自己在大环境里的水平，去做自己适合的或者自己喜欢的或者自己想要做的事；</p>
<p>（3）减少既要又要的不满足心态；</p>
<p>（4）懂得拒绝；</p>
<p>（5）定期做复盘，舍弃一些自己不好的原生的习惯，学一些新的好习惯；</p>
<p>（6）把所有的时间精力都放在自我提升上。</p>
<p>2.环境</p>
<p>（1）选择去高能量（图书馆、咖啡厅、展览）的环境，减少负能量环境；</p>
<p>（2）断舍离（定期把家里不需要的，不再用的东西丢掉）；</p>
<p>（3）与负能量太多的人保持距离；</p>
<p>（4）少听悲伤的音乐。</p>
<p>3.让身体的精力变多</p>
<p>运动、均衡饮食、睡眠、适当化妆。</p>
<p>4.保持高能量的心态</p>
<p>（1）心理暗示-多给自己正面的反馈；</p>
<p>（2）课题分离（分清楚这件事情是别人的责任还是你的责任）；</p>
<p>（3）感恩日志（每天列出3个感恩的东西）；</p>
<p>（4）学会分辨哪些建议可以听&#x2F;不用听（选择性的听）；</p>
<p>（5）学会接纳自己（只要你做你自己，就没有人能比得过你）</p>
<p>（6）不要在意自己不能控制的东西&#x2F;大环境你不可调控的东西（对自己不满意的地方要么接受要么改变）</p>
<p>（7）要把重心放在解决问题或者看中问题上，而不是情绪的发泄上。</p>
<pre><code>    把关注点放在自己身上，放在自己可控、可改变的东西上，让我们一起改变自己吧！
</code></pre>
<p>得一日，尽人事，听天命</p>
<p>身怀旷世之志，岂能空老于林泉之下</p>
<p>这来来往往的皆是过客，能结伴同行的才是真的，那天风很温柔，花很浪漫，你很特别</p>
<p>技巧是术，思想是道。有道无术，生万术，有术无道，止于术。</p>
<p>人生最大的風險，是只有一次的人生卻做不了自己想做的事情</p>
<p>不需要建议，不想要认同，只要你喜欢，那就值得</p>
<p>要想学本事，就要勤看，勤问，勤做</p>
<p>女人和小孩可以犯错，但打野不行—-猴.科里昂         以棍之名</p>
<p>成败有时 不可丧志 山高路远 愿君扶摇直上</p>
<p>马斯克说的非常正确，这才是教育，学一样东西应该是从实际中学习，从宏观到微观，现在很多课程一开始就在讲基础 ，枯燥又记不住</p>
]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>思考</tag>
      </tags>
  </entry>
  <entry>
    <title>我喜欢的话</title>
    <url>/2022/11/19/%E6%96%87%E5%AD%A6%E5%AD%A6%E4%B9%A0/2022-11-19-%E6%88%91%E5%96%9C%E6%AC%A2%E7%9A%84%E8%AF%9D/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="c973dd46b26ec97c7ebf2eec1a3cabd2468391ae31d0594329f79ee1d714e283"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>思考</tag>
      </tags>
  </entry>
  <entry>
    <title>思考-1</title>
    <url>/2022/09/04/%E6%96%87%E5%AD%A6%E5%AD%A6%E4%B9%A0/%E6%80%9D%E8%80%83-1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="8302255590df54f205c80673096f20118d6064f9d600986adfa8770fddf6b1b1">10d79030e8222445804370796b90fca1f15c3bf8192e45c3734106fc7a9b94dc069eec7c99e2b6e3b55dfd59ffa10680c8129975487e381a0f696838239156de9c3f53d07a0324743434fdb9450b73439f73ee4de71682a1dd1233035ca3efbc5d76fa63a888b49aad86db31280b7995df374529a461f993ebeff61503b8c2e816bfb2d4648e0a69f1ac87bae5249c39a987b3d4256b87b357ad2dfd2e34905ca81c273561a2dc266606b5f2c7984f7aec55537bd4db4e9cb470ad59ec630406e829304a7547a5e27ed042dcfa13fb02f4beda4f9051c8e32005842af420c10382a202a69409edda6012630c7aebefbb2a13076ad054eaf84041d8bf6dbfdd4077f05733a43d8363c3d25cf952e6da89ec2d8a1cfba0adfef371c7939cb8b6afbf0e33a4cdb302a4165a841696788ee3c8414b67643bed4e18c2115c2f4d5961495ecd44ec7aa9c4069fe55feb33beedd57901f7ea8616d1be76965e2210cb2d244c2789f618a8b496ad5e6107763be940c2c6151cca0eb3725714dd1894770f082615e65070f51c31b1f493c162e5112a16fa9d593eed12c8a67b686510ee1060109036dd3158621144b9d49c6725ff447137daae0815cf0a496345ee0fa98f39e8056b851355194bdae2beea495d40a771a22cc2daa089be1ffb2da2f99bdb21cf3706de2b85e8fc58cf18d47017361df73918f4a6664dc1e74716e5ac6b508e4e3dbc39ef54a5860976a8cc4386e25bc132f6ddc24452b6b83bb4702316b562aec1fecbb393585f3f643821368fe989c850ce8e389d18fed47914a30363a28ac9c9411cf75229b2bf33bee56be400516f287a1c2f822433dbe426751e105d763fca95bc996f8b9a853d0f61e56c2fb225fcf1ed453a7260b6c081b4a6cbb627ca6098baa228d2535e5a0dfd4a53fe6dd76f2a6836673a0d79c64fce9bf5d5f7e94197279a089147f104af2df49f9e8691d5b1aadef8f61f2dc65e83b64c2409cbf25dbe2eb52a4c7ae5452692564855cf8a581904ad76db004e74d4a36d37cec1bb1d7a57ea796fcadc5ea72905dbfa71db157d4937678e83d2036cbe0e54f8837894615e3440570249418bb95301e7d6ef1fb6c6fe415950d2f8c5b654cea464dd88867f2cdf560a7c52765d5e84c804ac70cda5f72a4d220d7abd5e171a15fc410f7ac2e3a9f25b17297468610d1ae72672d407286ac643f87ca710727f822af0a465ec2fb6cceb5683abebe5a49d59979aa79340e7a899457d1cda2c0ccf94fcd7867145aaa0d9a8a1bc29dd81beafe18e2c8a63f897706179cda3e6d9c41753c3145d421d3c5f7b22893f4848ee8ecf28d66c57cafac786797376938510ff5fa60c6b75ff7999a940ec97a43c501023160c74bd42e177f8ade9d3b10bca97f9d403f20652fcd29a2ed976e257e9321e629fc9a5d56fa1ee6e14c5e614c413ed684a96d0649dd76839f69860a17fea5625fef9a185c71a9410b7be0789d5da88dcb3e12ee7929f4b8e66a30b2ab96cb4a384de722c02b30c446602bc08ee92b18034f6de09e7635a20b422359775eec186f8efccd532a711e5858d873f10baa76ced49c7a29f39982bff943ddb360eac2d005a4e5e2ab298f6292a3f2ebe1429ddc848e1edc1fcc07f9a95ac532348510f84459901bfbe6fec5f05ce614b08eb554feeede326f25f0546cc3efdc39f7bf062eaa9115895f338abf6c4e1de0d3cf93ffcaab96e14194d268b64521366c7fa10ffbaf770259cc1923712dccf430a5a3d1b1eceee97e8c8ac71dce3118e8cdc2796137c18ec8cdc4a2a0badae2963d3634e1e16491208d6a3c449cbaaf69a12e8c9af2d537b683d3b0f48e1b98a0f5ef9cee0e9fd5c50c6506173a37dcb3d88b9cd2bf0b47e56adf27924c7d28ca2d66c429396cfc6f6254a71bc561e83f1842c85701e5bf1190f82cfb05955ed29ab51d37538c65a899b5d14c95c847a864cf9b9e5498171cffb9750d2c013cc1824ce457e75b9703b9ae543acd0b25b879e6c615447bc0ba963979a06e73ec545ff19f772b814071cd794ba3e52749fbe792004c0bc54597373de4aef908553c56ad0bf7f08d1f7c4478ed03632681a4da8fefb1995032e27908264a5fb4df0eef10174866374da6ba88d3c43f9731116c01fbf27108cf83b5073d0a76789a8cefb5ab10ce4388aeaff9937fafe11ee04d0e7a4b4610f3f79eaf1e797b39acf89c3f9a4d121584cc655c6fac073bf55937f555f8f163e94cb6c94f92f9e1104a551f7effc400d9ea330b377e06816b5e718065864531aab43d30bcd84e321ed8f69ad6968ae351b7970d1dae10dce77670ed7b73d30902701245c9902dea8fc259a9d70b1c55e725f611d8a1b2c2fd810fe34c1fce83962facbaf82c446200f23e8bff82c6761b229f79d081f9066af2484ffc7c26b5a95c6bdfb47c5ee01b27730121c7247e8815ab209f4fcf3f7036bb0f891bfdb5d173faf660eb09536f530f0a2dc0518829940ed7f5312eb706d77ef2be2eaf19a240c441861a5d5b2339ed03ebfcfb35e2f432c23cb649617793bed2bfdaff57d3a99062705332655aa87dca2731b05a18c5e63a3995263dfadcb7febe2dcf4785b91e25f8737e29ed5685842eec86513b5b20d25395cd0eb6809da1b3bc860ac14efad4327ab151540504cdc128f5e651dc18912f17978b57589056aeff180904575a2e57b2940c8782513e18ba5f5d739e3e37e07a1efb10113b9fc8682daf7cce9e956fc5c7bf14c5aaabc5c25d668d4897ab83aa03eebb5faf826901bfac90538746499679e24a2911462d835294561914cf2a1b586c520068270fe84d558e0ca73cf2bc078d050be712216ccaa61d1c3681f04a5d2e38e1f0c9dfd6fa7c8e47c86ca54e2a876767a91329badaee40e3e62c57ae4be23c19f53b2c10547049d9dd9f0fdc44e55218d4236c0d92a975cca30be6a90ac0f8845388ffe385961a9e76983fedc6267c6b0000e5e2c2e65db4cfa785a921baab68fde74a48430698ca4a7531937e6224df6342751fe4d6afe81ed79dd09bf464e35147acfa2195e82b1de50809bef233a0868a3088405ef8fd889f176839f11d4fc413e3e2dd846859e841b73149e63bc54350ea3b617325aad19dbb7560876eb0be0d8496e1e5d200be4578abb57cc4078f8b9a482117bdffb1ecef9addb7c8a53ba99934f1485d911675ff61acdcdbdacc7b040a89c6e7cc3648c0e93fa65aec69b40288ca886690a881b244349e1f427c4b38113c660695fe424a4a6b683441b80b45d0a3cf7a7470b9ae1fae7a96b5e79e17ab2b87461f15fd474c0c7fad3eb953a675f18aff3f7253e83460b14b7e6b04c972a60ce11b68a68ba65bd7e825a355be02f0e514080390881dcf6ebaaff580b6a3854ce784f6e1628f365cab9fd2c44f8c973217a67b1daa4990cafeee18d451760f501b0c32bbc384e61232ea6b7eb0f052e5157de68b46eb7dc867e16323070614eaffbe1e90e0400b3e6c30d7523733eca9846accbb22e3355daf2f1d86fe91ea762eceb01abc2b0a6342cbad3b42ce033bcdfda69d60db35ea2e9202ef1a186e9743dc71f72ee59bacccd1a3a18d4e05c74232683228c6af6488b8c009abf94a052a769de153e98a0716d7e0c06d1c641f427775112240a2e67488f030af66087a9a4373759529f43c6392d7fb6863c618c85a83677a122e0f50f7796944e458939e4f22eb7d379e34850c2f29867e9ba9f5d1a9ebf50a12a46dc8f82e37b731523989ba2e974b8a7913de32d0c392d56d28bd60f0dfb7e117de937fab714cf9fdd1c0a37459f96115188c0531c7db62d1fd6de27412878d9566496a4110180360356cfb6c3d969e565d86e9785299295c1ce5125ae432cae98d842c77eb7c2a1f5f558ea215104e1cb93652ee70047dbb9273ad7ca35ed37d92cbbdf78f46cca027b44fc9ac274a7a447605210845589246ba224a5cad9e91284f3116cef2126db6a1071ce23b8b6aec78da16d85cbb07a48ef300ad90c7478b148819b043f11ffcd429e9e36b1ee42c8336bc7e6356c519872fb5415c03b94d2025644fde8aab848e21d753c6f2f186b617532a5e06126390c22b9590bb1e1de3767dd04b7f7931b47af12c7eab231cc919b85e152b30e5f8a0085d770be8b309823e318eb75ba024547b74ed292e318e7815209b07c21884fbec420e2496874a28a31202c8beabfc52d0d6ed8e3694fb6f4252962879eecf09d40844718284e931f257c85e017729b65556b58c598c6579a2ac337fd1dfc27b7dcdf3b99b5a192449b403097b78b9e9a3b93661b67a0dbf5417589bf7d5f80e47c39b1b647ac7c8e539033b278c8ca838b020268695c6474b4e7e8885eeeb68d66079c1fe2af33c2634da2c46ad0e0f0cf19e9d0331aae1fe703edbdff0f8e032aa9be4b19e03073c885679892ba30220bd0354519d793970680c03cb0ca1ad3ec27f0a5d637697d4b15a4f04ffef01c7b954f2b3f13010fe30a6442f82d13d0ac60a5a331666650aa3dababaf392e70d4e67eee65c723bec06282e5c3f5e06ebc6baf678defaf91378942e8ff0e2b07910a4d9515925899c18ed9f2930b6fc2ce4e05981f909fde92d164d5fb0da8738d15e8911f227193d91312e876676697ec2cdee7599871d64d0545e021bd3f5c755a18a73d10cb32124383142f071510935f4b5bcdc7469463650772c0d663f019749f22ca6490a8d4e6780b5889a72064d82419dcbbb581669594638412dc784849c1accaf1a6ebe2c3d9b8e506a435c6aeb8de1fe94985e51eaefff3bed932046e4842d2dc672c4d0ff02851fd93321eb380733e906023bbd9a7d04ed256449eaff93a9bc531eba52423f055067c3804412e4b</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>思考</tag>
      </tags>
  </entry>
  <entry>
    <title>我喜欢的古诗</title>
    <url>/2022/09/24/%E6%96%87%E5%AD%A6%E5%AD%A6%E4%B9%A0/%E6%88%91%E5%96%9C%E6%AC%A2%E7%9A%84%E5%8F%A4%E8%AF%97/</url>
    <content><![CDATA[<p>有趣的想法</p>
<span id="more"></span>

<p>我见青山多妩媚，料青山见我应如是. 愿你我有岁月可回首，且以深情共白头. 锦瑟无端五十弦 ，一弦一柱思华年. </p>
<p>有缘千里来相会 ，无缘对面不相逢。<br>墙里秋千墙外道， 墙外行人，墙里佳人笑。 笑渐不闻声渐悄。 多情却被无情恼。<br>山无陵，江水为竭，冬雷阵阵，夏雨雪，天地合，乃敢与君绝！<br>浮生恰似东流水，日月东流人不知。 世界微尘里，吾宁爱与憎。 汝之蜜糖，吾之砒霜。<br>林花谢了春红，太匆匆，无奈朝来寒雨晚来风，胭脂泪， 相留醉，几时重？自是人生长恨东流水。 不是冤家不聚头 ，冤家相聚几时休？ 早知死后无情义、索把生前恩爱勾。<br>无往不平形于外、高山仰止蕴其内，空谷藏峰之象。 劳谦虚己，则附之者众、骄慢倨傲，则去之者多， 杖非凡品，鸽本异种，竟茶毒若此，令人扼腕！可又怨得了 谁呢？俗话说,天才放错了地方就是垃圾。冯唐易老，李广 难封，时耶？命耶？明球暗投，徒兴邹阳之叹：广陵散尽， 益增嵇康之悲。<br>大丈夫生于天地间，岂能郁郁久居于人下<br>大丈夫之志，应随长江东奔大海 何苦怀恋与温柔之乡。<br>大丈夫处事，碌碌无为，与朽木腐草何异<br>剑气纵横三万里，一剑光寒十九洲。<br>今日无事，勾栏听曲。书不成字，纸短情长。马行千里，不洗尘沙。虽不能至，心向往之。<br>浮生若梦，为欢几何。前途似海，来日方长。道阻且长，行则将至。家人闲坐，灯火可亲。<br>一念放下，万般自由。人走茶凉，随遇而安。<br>天有不测风云  人有旦夕祸福  天不得时日月无光  地不得时草木不长  故成大事者  非运不可自通也   因人有三衰六旺  故有起起落落因人有顽强意志  顾能对抗百年  终有一天你会明白  得到未必得到  失去也未必失去 所以我们的眼睛 不能只看 我们能看到的地方。<br>各花各有各花香，各山各水各有灵，人各有道，道不同不相为谋 ，我们还年轻，单纯爱情，一味金钱，过度片面，我们要知道，我们的意义是什么<br>红豆有毒却表相思，后来才知，相思入骨便无药可医，明知相思苦，偏要苦相思，若问相思为何苦，只因相思已入骨。<br>未曾清贫难成人 不经世事永天真 人情似纸张张薄 世事如棋局局新成功不是永恒的 失败也只是暂时的，百无一用为有忧日后注定成凡人，而成大事者 以静观其变以静为动 己为良师心为良友 即使命由天定但运由己握。<br>宠辱不惊,看庭前花开花落;去留无意,望天上云卷云舒。<br>风一更，雪一更，聒碎乡心梦不成，故园无此声</p>
<p>屈身守分，以待天时</p>
]]></content>
      <categories>
        <category>文学</category>
      </categories>
      <tags>
        <tag>思考</tag>
      </tags>
  </entry>
  <entry>
    <title>思考-2</title>
    <url>/2022/09/04/%E6%96%87%E5%AD%A6%E5%AD%A6%E4%B9%A0/%E6%80%9D%E8%80%83-2/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="4dbce45b27e115195f7509814c6098de75b7449b27f38521953e3dbae594c43e"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>思考</tag>
      </tags>
  </entry>
  <entry>
    <title>我喜欢的现代诗</title>
    <url>/2022/09/24/%E6%96%87%E5%AD%A6%E5%AD%A6%E4%B9%A0/%E6%88%91%E5%96%9C%E6%AC%A2%E7%9A%84%E7%8E%B0%E4%BB%A3%E8%AF%97/</url>
    <content><![CDATA[<p>有趣的想法</p>
<span id="more"></span>

<p>浮世万千， 不得有三， 水中月，镜中花，梦中你。 月可求，花可得，唯你求而不得。 终是自古空余恨，好梦由来最易醒。 辞别再无相见日，终是一人渡春秋。</p>
<p># 致离别 我们相遇在夏天， 如今又要走向各自的夏天， 在滚烫的青春中， 最沸腾的一章结束了， 同疫情共成长的你们， 留下了积极阳光和责任担当， 你们是新时代的中国青年， 必将绽放出最绚丽的青春之花， 那么， 在这个蝉鸣不止的夏天， 勇敢说再见吧，</p>
<p>我不去找你, 不是我不想你 更不是我不爱你, 而是你给我的感觉, 像是我在打扰你。</p>
<p>我们曾如此渴望命运的波澜,到最后才发现，人生最曼妙的风景，竟是内心的淡定与从容。我们曾如此期盼外界的认可,到最后才知道，世界是自己的，与他人毫无关系。</p>
<p>我是一位老人，净说些老话。对于时代，我是落伍者，没有什么良言贡献给现代婚姻。只是在物质至上的时代潮流下，想提醒年轻的朋友，男女结合最最重要的是感情，双方互相理解的程度。理解深才能互相欣赏、吸引、支持和鼓励，两情相悦。门当户对及其他，并不重要。</p>
<p>年轻时曾和费孝通讨论爱因斯坦的相对论，不懂，有一天忽然明白了，时间跑，地球在转，即使同样的地点也没有一天是完全相同的。现在我也这样，感觉每一天都是新的，每天看叶子的变化，听鸟的啼鸣，都不一样，new experience and new feeling in everyday.</p>
<p>隐约雷鸣，阴霾天空，但盼风雨来，能留你在此 隐约雷鸣，阴霾天空，即使天无雨，我亦留此地，如果下雨了，你愿意留下吗？即使不下雨，我也在这里啊</p>
]]></content>
      <categories>
        <category>文学</category>
      </categories>
      <tags>
        <tag>思考</tag>
      </tags>
  </entry>
  <entry>
    <title>My Memory</title>
    <url>/2023/01/04/%E7%94%9F%E6%B4%BB/My%20Memory/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="ff79aff215b2e39fe162e149fb910540177755b12784f66fed0b67172d633f2c">10d79030e8222445804370796b90fca1299caaed89011030d169a7911c64919244fd35308b08b94155ef1c72f44a77aa1282610cecdf2fbe2cb57b9e0bdc45c11b1b28973912cadef2cd388be857cfa34e1360522644c220e8290fa6ca71d72c6b41c03768c2363073556517658461ddd4c43513be56bb5f9cd9ada62caefafc30ceab216c6506c623dc7684abe60414c669cb90bb1a2309f1b31abff3deb5c3707ad3dfef8e95dd12b10b7711760ad370e985cce9ee69fe522c697e7d14004cc257045ac4245635b70e6d505d9d2067df01690223eb7f7a6363bbf79989c38b02a0d0ce21478f42e689ab62e270708f66b3fb4e75e1baec2448f388edda121c813b4bfeaf64c360b2d98a15e7901e7382ca0a46115ba68cb364abae9592aba94fee56f55dbddcb9f950f711c853f5554d1e825e024fc96ae69be8773d77d48369c4550a1abe35c493c832c1a3620d2f3f2a4a3c31de5761caed1e427054f959e979373995037c0ecf87403bb5738db0a8ddabfe903f1dc59bbf7fb60ed498622cf262fc24e4cae6717e31ed72b972d2efb9f00d3a705974eebe4079a048a72322215dc90ff6e6c60faa403455c2203acefd94aeae0aab56b86586be3f19e34244d22bac92b8d68b8f55d9293bc77def9dccd04f6b42785bb311f93582f1446ba37a80b707bcef488f77e59144aa93e9aa2317b26ad69e917445990a7d7d788a76f217bfeba7ffc9fadfd9292fd6dc63b8f14d4dac8eac7fd7655b4055ddd1cddda9e13d7ba20411f37f4c6fb9ed901a5a49991343335467149f70673cde6465688e5f7e6d130680ad68d3bc0e858f0a735a142e4e0cb572659b4670ac9ea2633931286c9b294fe64a12c38c3f8aaecc3d5e5784a51566bb4e4aeb46fdf693de6ce34bba9b53e378ed88db2fb3b81a724a06d2afe48b83e84b8e10597d5e8d47cf0e5dff704b8ea2e804d4aa8d14d3cea017fc60a80fe3ccdae3475d6b6021c65a94fdba016590bbb70306b3fd21396a0d9538ce519fadfa3dba4e7755f989e01827d98e046831e027b4fb6e18445e770cdb225b288a68a011cc572f2811b2d7982184642dfad48c696b91002ddda4cd14c55928341245a80278eafaab03bb3491a1b79101fa40c699639520c512890481e830f08f7672568a493d6036e658fc0ec146874961536f9cb79db195985bacb5f7fdcc8bd7bee964a4a410c99692b116435bc3cdf650076ddfca266c00339bab6854a3896d012fb4f342d825190efcd4867bdedb8b162a3051d3883933af486feb74feea12be693e1158a861cf15893072158bdbe42117c45f0aa03460c275b6029049ad3a2f945921132766022b52971cc8d76de2b7d07375706c8861e4f3c324028a44e9aa90f655187ca3d22753389c34a05c25e09b0f15c6064947b25399dab2d0bf35076da2c2bc60536b6c96fb8452179fa391304ff0a0e03aafe057b8640167f1ec5e509b0a282333bc39ecefd0dcc2f873e71efcb9a95051ffc2292779c63442a966ef1c2cd59ff4ff96adb4636e459bb3b325caaf933e0782d4af081cd6a6aa6a093952659abdbac2c2496f450e8f4e9edb1e1d89de339cfba1fdd22b51aa1ea896bcbefe9077cf13469a5f9cefe98eb0debd5900536885374cd1d902c428aeffd96be939c8ad439aec16b7758b9bfe485a3b6db6d9fb2ad1f6722148ba55101016e591ce3103f34c64597a0ac9fd49f71175096d86605efcf846bf5874705560ed2f6bdac0a31e1a6e5662daaaeabbb2e7bd9ab200d32fcb0161c995e9409c8cf4fa564be2d9182cf96aa00fea320c9a286cbe26fb8e8d050134913b0ec8065d0cb698fbf1c2061701d12264115f10eec98f79eaed4ce37a5eb692572b1fd89710bd09feb12d15020baad99d30a84309f88040114c88acc1f0785fce8e58d8c38109099320e7fa3e38287185e7230b0d61b46a57b1b9b7998cc85d1039fae56aac5f4de3db8cf8f973b5e5232076d65321c0a2383a0354b6836609ebbf3887645c5de1d73f0f81af1acdd5cd5d4994dab609d4ab290d053868a6f31f9b5ba083b32231e03183fcffac2449515e960fa851740c68ee1bea9055141a481dd06db600f1f0f8b8f7316bb8a1f65a7bda7d53bea2b5d563bb83fc828a9541ab4bf5f641e63bca6de681b47be70f45913679d4d58b8a3ea67bcd6576be9ecc1c01429ee4c506560ad52eef793ce7ca460916c45d8a9bf353d4cb1310c3a4642c993fdf60a11141eadc0441a42c6b87f06abd358f38481ff1b2441ab2e8</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>My honor</title>
    <url>/2023/01/04/%E7%94%9F%E6%B4%BB/My-honor/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="b2d9e1781fb1bad2e9c9d9b275383d3dff59faec44ae4c5630e036f1568bd55c">10d79030e8222445804370796b90fca1299caaed89011030d169a7911c64919244fd35308b08b94155ef1c72f44a77aa1282610cecdf2fbe2cb57b9e0bdc45c117c6c88565fdab0ae1224f73e0eb6ceca24098aacfa1ce5059fe752399ec398fa7c8de491b88d0251292c03af4ca07167a109537b18fbccc9de6be3b2f1dd2d5115423c2bfcd6e43bbde6286e6fb4c12f44da459d227bb6a0f67d9bd5c8f15c4610c2db8a12860bf7c8a54ade57e739c3a8a1d96d2ff771db1285a50577c0b01d7f82bb1080cf8145bd42554d65683c48d66dbda4bafc67bee730a140286f3429b9032b10b341b16399374020ae418ba8cd56f8ea46c41a8e1028b66397702b0bf1c669f2bdfc3a8b0d92359c470fab5214f7dbcd520a367049bba1d2b7ee12185e85d60e744267a95922a77c735c3bea2563c43e79f7bcaa653ad38063bce1375854ac666443938d8fdba3f6bc93f24f3206bbcc230fe7563e34a95c5fdd4de755bc75526d02c381f406b4de03b93532e206d0b5f8ab99a10d604e8ffa893897dce88a776b9942e68208efa198ad93d90f1763e85e96fcea9a1c1f737cf3250fd397f1352a08914508adf743887c4270f4f58a6a0838dd59c17f36106c2e8c7206a9133b9bf97c2c8993791e805d76fc9810b28e3aec8111d5ed426c19b8f40a8ec0415b817f72cf989f0c943e723204550a08b3b5ae64e00ad6704f7408e499f975bf07dfc14ba12e120cb5715adb4a7ea4f55d9861bf907989f6b21e136d4694bf0c800694c2d75fe893d21d9bef2e457a6eb950d434bdecdb35403e3932e98386941aa477bbcc4d388141601687d436397b62e6e0e694d97cdaae9171fd1a877b7a829c9e4ead3d410cc9cd39b9efaf00157d86c0ec1cf816c0d0745db38146599543278653363fdb3be0a0e9d27341b42e9d810fd5fcf7fa5e7ecfa62d5235b4950325501d9a4adb2ec3791db4a79b388fab0099395887d69e0f874494b8bab1a45b033a2e59fba2ad5d85863e779170b53053112562752c7d7bd4bd59704185f490f61ee841e2e69bdc9747546a1247d77d591659823fac42c47dcb2d013aec49189d59782004e55938bd2c5128f9b8ece2509c4bfd59b574eda992e12179f924d08bce6fb4635db40fe93ccf9</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>My plan</title>
    <url>/2023/05/25/%E7%94%9F%E6%B4%BB/My-plan/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="873e669b4e3b63e4cf57274f17b4ad0cecb9669570de60e22d8a1a1bbb2db033">10d79030e8222445804370796b90fca1299caaed89011030d169a7911c64919244fd35308b08b94155ef1c72f44a77aa1282610cecdf2fbe2cb57b9e0bdc45c1af11234ff201837d16d670d9fec1ddfeb6342627b0078c3a5831d55c7446539814692fd72e9ce7f3be4b246b6f06d3163dd8ba91db5cc585b246d07bf286240b4497fa9ac879261ba9a8240897cb659d6ab905a0a9b6f9bb85348f4c9221a856d7f6445ea383cccab889d977c9947c9e868509887e59f9fdb59947247c6677691d59b3c2d8a0bff10a5c6ad6ec8f203caa53e5269f36d305ee6ad61bcd4328d6b99d1cedf66c95480ddeccfe3b914dbf8a19083c7a437a541004c74c8bc8aa820ae23e3e0c729fe76812de8f3b455da51dcc6b0794eb992c25a486bf0b5d60974596ca096da2ad364a474801a79c9df5e4f42d077a73182efead5ef099db95f637bd6be4347fd3f4134b32b774972f9a356a22e91947d3140f854265f529fde321232435b78a268c3d463611d52e6e475e6dcb5b8f0900aee2e8d3049659457b225db50d309a5adb6c4aede65bdf317ec21b0974373b2d08c92764cffc7bea38d50ae6d7c220e27da04d7595649335ec74c3b9b0b73c41d4162fc33336d8b28ccebc8b9d9e2145360c1356dd7feb854a15858a69b0dcc95d927e7e8e54066ee517b058e8dae3eacea3cf02d818bd8ec04de06b002da3370754506134ac48a9bc0ba43812462b744b0c1d2add1c2d799a092eb57ffcfd98d1d2ec1fd5a1c9f666983d9f1e6c3b4167917edc7e393698e0fe7834a85a9118af54dac1960015267c1197809c859d717e82c73dc61035b2b75f09e63b20feb8da19e28cf1afe469d8b7ee4e787aabc060dc26c5f5b08f2ebba055411f7ba017c2581faf13c6594c8c03f890f94ac4cfacda940e7cc868d1c4b551fa3a8721454a55bfdb7207b158a07d152fad129c5ef14398b3ba15c04ce227603a620c3edcdd546f1b0ba99fec73b41bd0360e0642868d9ec6a0ecbf0c9997e41246c6d8184729a9aea47eaa11f5eef1c1efa6f25ff836c9d3c9a80449d9095782c47a3e7b855f2106e0d9c357152cd73675b2d8d28112f7606e37ee43df07293dd6adc907134c27174f7c4b42452df321d2695a33e8781f26b2a6e67191f846410e91eddd714c08ddcc783f2f967c950a6e53563354a2150c592e9bdbbf72212144f181c8271376690c7b33e59f34eb02abd7dc26b342205b634105fbd6e97b9697eb142a50c12e3693aff115e71c93109a6a39274c7b8830cd811f2fc96f29c5756dce01e408384e95f1e7d46f0b6f4fa7eff32adde653a464cbe06d23791319fb3bc9f05c63d9b289365a5b274330c93cdb9f4f4228d6cfc5aabf43dde8a6dedd7618a8b3f61a0bc983f5f0f9c7fd10f6a3a65d27df5143cd708514dd6146ff25ca43ac2bb612cb4e1441409093818af6896b52a870b8b28858888e6fbee3e62a9187b2934a4dbe7cb145648c7a4a94b7a35815fb151c32a3832874111c704442fe6476d40227466d910503c08caf346e21bb161c96f7fb951fa6cf62e724a33deeddea225fa8fc0f6c8a2c5e8c7416e74c4b489c53dddd0580c0a41b00b85ec17d036b7b768921f79a80ec0d83dbad2d7399a5771e09b13701116476ff4835305b95e0b467ff3959642718019c11bc8d75a2668a86e91ead1c753e9a763cd77900a6634202eae371853087b88a9f4d8a347ab4d836029aaf4851ccd2fafe1282997b9353dd189a5d656e00f217119cc311daf508431055e79e9375683c826739f4a652032b3575f01bc802e7a3e0433bebdb20fe0c90bd1c842b0237cc48a1483532cbe4df8848c4d2e9760d</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>常见连词</title>
    <url>/2023/01/04/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/2023-01-04-%E5%B8%B8%E8%A7%81%E8%BF%9E%E8%AF%8D/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="表并列："><a href="#表并列：" class="headerlink" title="表并列："></a>表并列：</h2><table>
<thead>
<tr>
<th>and &#x3D; as well as</th>
<th>both…..and….</th>
<th>not only … but also…</th>
</tr>
</thead>
<tbody><tr>
<td>either…. or …</td>
<td>neither…..nor</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="表递进："><a href="#表递进：" class="headerlink" title="表递进："></a>表递进：</h2><table>
<thead>
<tr>
<th>besides</th>
<th>in addition</th>
<th>what’s more</th>
</tr>
</thead>
<tbody><tr>
<td>moveover</td>
<td>furthermore</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="表转折："><a href="#表转折：" class="headerlink" title="表转折："></a>表转折：</h2><table>
<thead>
<tr>
<th>but</th>
<th>yet</th>
<th>however</th>
</tr>
</thead>
<tbody><tr>
<td>although</td>
<td>though</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="表原因："><a href="#表原因：" class="headerlink" title="表原因："></a>表原因：</h2><table>
<thead>
<tr>
<th>because</th>
<th>since</th>
<th>as</th>
</tr>
</thead>
<tbody><tr>
<td>for</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="表结果："><a href="#表结果：" class="headerlink" title="表结果："></a>表结果：</h2><table>
<thead>
<tr>
<th>so</th>
<th>thus</th>
<th>therefore</th>
</tr>
</thead>
<tbody><tr>
<td>as a result</td>
<td>as a consequence</td>
<td>so…. that…</td>
</tr>
<tr>
<td>such….that ….</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="表条件："><a href="#表条件：" class="headerlink" title="表条件："></a>表条件：</h2><table>
<thead>
<tr>
<th>if</th>
<th>unless</th>
<th>as long as</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="表举例："><a href="#表举例：" class="headerlink" title="表举例："></a>表举例：</h2><table>
<thead>
<tr>
<th>for example</th>
<th>for instance</th>
<th>such as</th>
</tr>
</thead>
<tbody><tr>
<td>like</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="表总结："><a href="#表总结：" class="headerlink" title="表总结："></a>表总结：</h2><table>
<thead>
<tr>
<th>in a word</th>
<th>in short</th>
<th>in conclusion</th>
</tr>
</thead>
<tbody><tr>
<td>in brief</td>
<td>in summary</td>
<td>to sum up</td>
</tr>
<tr>
<td>to conclude</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="表时间："><a href="#表时间：" class="headerlink" title="表时间："></a>表时间：</h2><table>
<thead>
<tr>
<th>when</th>
<th>while</th>
<th>as soon as</th>
</tr>
</thead>
<tbody><tr>
<td>since</td>
<td>at present</td>
<td>before</td>
</tr>
<tr>
<td>after</td>
<td>not …until…</td>
<td>at the same time</td>
</tr>
<tr>
<td>finally</td>
<td>at  last</td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语词汇</tag>
      </tags>
  </entry>
  <entry>
    <title>常见句型</title>
    <url>/2023/01/06/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/2023-01-06-%E5%B8%B8%E8%A7%81%E5%8F%A5%E5%9E%8B/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<p>have sth done 让…..被做                  Have you ever done STH.?你曾经做过某事吗？</p>
<p>have&#x2F;let&#x2F;make  sb do 让某人做某事</p>
<p>used to do sth  过去常常做某事               I used to travel by air when I was a boy.当我是小孩的时候，我常常坐飞机。</p>
<p>used to doing sth  习惯于做某事            I am used to travelling by air.我习惯了做飞机出行</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语词汇</tag>
      </tags>
  </entry>
  <entry>
    <title>英语格言</title>
    <url>/2023/01/05/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/2023-01-05-%E8%8B%B1%E8%AF%AD%E6%A0%BC%E8%A8%80/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c912fd8850a885562a4e2bdc0ea6d8d.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/311ea6c93afe07e3620dd022cad6245.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2a5f508303adaca158ab64996ab6e42.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9326893c8e7b99db4f4f038cb70fab3.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c34f5b3d561b679972a93dc24ef7ab1.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7ee90109d16e2a70782d7547d8c848b.jpg"></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语词汇</tag>
      </tags>
  </entry>
  <entry>
    <title>动词过去式/过去分词表</title>
    <url>/2023/01/04/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/%E5%8A%A8%E8%AF%8D%E8%BF%87%E5%8E%BB%E5%BC%8F%E8%BF%87%E5%8E%BB%E5%88%86%E8%AF%8D%E8%A1%A8/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d684c2fb-56c7-4264-b726-e3421713e212.jpg"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c6fb9744-e703-4e7c-90ef-54276423d5ac.jpg"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5240a579-4a9f-4c3b-912e-46c8e74f055e.jpg"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/35d1cccd-75b5-49e9-af1c-319f85d6781c.jpg"></p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语词汇</tag>
      </tags>
  </entry>
  <entry>
    <title>英语表达1</title>
    <url>/2023/01/04/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/2023-01-04-%E8%8B%B1%E8%AF%AD%E8%A1%A8%E8%BE%BE1/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<p>welcome to the Internet<br>How can a knight not understand the queen’s summons<br>ask for help<br>Confidence is already in tatters<br>field operations<br>I want to be a hacker We will organize a counterattack<br>for example The most important thing to do is to do<br>It’s doesn’t matter Knowledge is useful only in one case,That’s when it’s used.<br>I want to protect her, but I don’t seem to be able to I don’t know what I should do</p>
<p>I envy them very much,But that doesn’t change anything<br>I received a gift, but I didn’t accept it<br>you should put things where you can find them again<br>Debug your program.<br>Throw it out the window<br>none of your business graceful lady<br>build relationship Under Construction<br>turn right I want to change the world<br>turn left way back home</p>
<p>Final Most Valuable Player<br>Product description<br>advanced industry<br>I love this one. It’s a child’s natural joy</p>
<p>All adults are once children<br>All children are on their way to becoming adults<br>Hope that each of us, have a child does not need a reason to be happy</p>
<p>Cypherpunk enjoy yourself<br>You’re too slow. Repeat the glory<br>places of interest asshole<br>come up with make an achievement</p>
<p>Sometimes struggles are exactly what we need in our life<br>We need a common topic of conversation<br>no access point has been discovered yet<br>achieve success press the button<br>climax Repeat the glory<br>Sometimes struggles are exactly what we need in our life We need a common topic of conversation<br>no access point has been discovered yet I want to change the world</p>
<p>If this is the initial configuration, the server should not be running.<br>stay hungry stay foolish<br>With the development of science and technology.</p>
<p>video chat Sign a contract<br>It’s time to say goodbye Human Resource<br>What really matters is not what you said but what you did learn by doing<br>I’m sorry, even though I still love you, but I can’t anymore Open the door to a new world</p>
<p>He behaved like a true gentleman.<br>What is their main source of income?<br>They suffer from health problems<br>A blind cat caught a dead rat.<br>Let’s consider this point further<br>She will have her own viewpoint on the matter.<br>If you love a person, shall stand before and her (him) equal status.<br>I don’t know if you’re a negative or positive influence on me<br>I refuse to answer it. I am ready.<br>appreciate disadvantage advantage<br>foreign currency advanced industry<br>cruel compete loyal</p>
<p>I refuse to answer it.<br>Don’t hesitate<br>As the police got better, it became harder to escape<br>After all , no one knows me better than me.<br>source code Too young, too simple, sometimes naive<br>Object Storage Service I think that’s the right thing to do<br>double doubt<br>wait a moment sooner and later<br>become because</p>
<p>It makes us more energetic<br>It brought us closer together</p>
<p>I have always believed that simplicity and elegance are paramount, regardless of success or not</p>
<p>Thinking more is all questions, and doing more is all answers，Don’t hesitate，do what you think is right</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语词汇</tag>
      </tags>
  </entry>
  <entry>
    <title>英语试卷分析</title>
    <url>/2023/01/07/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/2023-01-07-%E8%8B%B1%E8%AF%AD%E8%AF%95%E5%8D%B7%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="阅读理解："><a href="#阅读理解：" class="headerlink" title="阅读理解："></a>阅读理解：</h2><p>找合适题目时，要概况全面且足够具体</p>
<h2 id="完形填空："><a href="#完形填空：" class="headerlink" title="完形填空："></a>完形填空：</h2><h2 id="英译汉选择："><a href="#英译汉选择：" class="headerlink" title="英译汉选择："></a>英译汉选择：</h2><p>四个选项大部分一样，找那些不同的部分跟题目的关键单词是否对应就行</p>
<h2 id="英译汉："><a href="#英译汉：" class="headerlink" title="英译汉："></a>英译汉：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6414ca32b734864572a5a369795888e.jpg"></p>
<h2 id="改错："><a href="#改错：" class="headerlink" title="改错："></a>改错：</h2><p>无从下手时，看动词，考虑时态，语态，虚拟，非谓语</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语词汇</tag>
      </tags>
  </entry>
  <entry>
    <title>单词积累1</title>
    <url>/2023/01/04/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/%E5%8D%95%E8%AF%8D%E7%A7%AF%E7%B4%AF1/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<p>I downloaded a movie.          我下载了一部电影</p>
<p>Please tell me what you think.       请告诉我你的想法</p>
<p>I am very interested in computer games.   我对电脑游戏很感兴趣</p>
<p>Catch opportunities is the key to success.   抓住机遇是成功的关键</p>
<p>She came into a fortune when her uncle died.     她在叔叔去世后继承了一大笔财产。</p>
<p>Can you send me an E-mail .   你能给我发一封电子邮件吗</p>
<p>I was afraid she would reject me.   我很害怕她会拒绝我</p>
<p>If you want to learn, you need to see, ask and do.     要想学本事，就要勤看，勤问，勤做</p>
<p>You don’t need advice, you don’t want approval, if you like it, it’s worth it.     </p>
<p> 不需要建议，不想要认同，只要你喜欢，那就值得</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语词汇</tag>
      </tags>
  </entry>
  <entry>
    <title>单词积累2</title>
    <url>/2023/01/04/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/%E5%8D%95%E8%AF%8D%E7%A7%AF%E7%B4%AF2/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="one"><a href="#one" class="headerlink" title="one"></a>one</h2><p>1.<strong>be busy in doing sth</strong> 忙于做sth eg: we are busy in learning English.</p>
<p>2.<strong>ist结尾一般表示职业</strong></p>
<p>eg：violin 小提琴 violinist 小提琴家 science 科学 scientist 科学家</p>
<p>art artist 艺术家 dental牙齿的 dentist牙医</p>
<p>3.<strong>There is no free lunch</strong> 天下没有免费的午饭</p>
<p>4.<strong>finish doing sth</strong> 完成做sth eg:I finish remembering sixty words 我背了60个单词</p>
<p>5.<strong>show off</strong> 炫耀 eg: He always shows off hes beautiful girlfriend.</p>
<p>6.<strong>draw a&#x2F;the conclusion</strong> 得出结论 eg: we draw a conclusion that it is really hot .</p>
<p>7.tell a story &#x2F; tell stories tell a joke &#x2F; lie</p>
<p>8.<strong>person 人 people （集体名词）人，人们，民族</strong></p>
<p>a person 一个人 a people 一个民族</p>
<p>two persons 俩个人 two peoples 俩个民族 two people 俩个人</p>
<p>\9. quite 相当 quiet 安静的</p>
<p>silence n. silent adj. 沉默的 keep silence 保持沉默</p>
<p>10.station 车站 question 问题</p>
<p>\11. by +交通工具 乘坐</p>
<p>12.<strong>between</strong> (俩者之间） <strong>among</strong>(三者或以上） 介于。。。。之间</p>
<p>eg: The secret between you and me</p>
<p>Xiaoming sits between you and me</p>
<p>\13. <strong>be afraid to do sth</strong> 害怕做sth</p>
<p>eg: I am afraid to meet English teacher</p>
<p>\14. like prep.像 v.喜欢 look like 看起来像 eg : You look like a dog&#x2F;fool.</p>
<p>\15. leave v.离开 过去式 left</p>
<p><strong>leave for +地点</strong> 离开去某地 <strong>leave + 地点</strong> 离开某地</p>
<p>eg: I will leave for shanghai 我将要去上海</p>
<p>I will leave shanghai 我将离开上海</p>
<p>\16. <strong>come true</strong> 实现 eg: Your dream will come true</p>
<p>\17. arrive in china 到达中国 arrive at station&#x2F;airport 车站&#x2F;机场</p>
<p>\18. <strong>be strict with</strong> 对某人要求严格</p>
<p>\19. forget &#x2F; remember <strong>doing</strong> sth 忘记&#x2F;记得<strong>做过</strong>某事</p>
<p>forget &#x2F; remember <strong>to do</strong> sth 忘记&#x2F;记得<strong>去做</strong>某事</p>
<p>I forget <strong>locking(做过）</strong>the door 我忘记锁过门</p>
<p>I forget <strong>to lock(去做）</strong>the door 我忘记锁门</p>
<p>\20. <strong>follow &#x2F; obey the law</strong> 遵守法律 <strong>break the law</strong> 违背法律</p>
<p>lawyer律师 legal 合法的 illegal 非法的</p>
<p>21.luck dog 幸运儿</p>
<p>\22. <strong>keep healthy &#x2F; fit</strong> 保持健康 <strong>keep quiet</strong> 保持安静 <strong>keep silence</strong> 保持沉默</p>
<p>\23. <strong>learn from</strong> 向。。。。学习 eg：we should learn from our monitor(班长）</p>
<p>24.save water 节约用水 save 救助</p>
<p>\25. <strong>The + adj 表示一类人</strong> eg: The young&#x2F;old&#x2F;poor&#x2F;rich&#x2F;blind(失明的）&#x2F;deaf（失聪的）&#x2F;stupid&#x2F;silly</p>
<p>26 .famous 著名的 nervous 紧张的 dangerous 危险的 delicious</p>
<p>\27. message 信息（可数） information 信息 (不可数） news 新闻（不可数）</p>
<p>\28. north 北方 east 东方 west 西方 south 南方</p>
<p>\29. <strong>study hard</strong> 努力学习 <strong>work hard</strong></p>
<p>hard task&#x2F;work 艰难的任务 （形修名，副修动）</p>
<p>\30. try one’s best to do sth 尽最大努力做sth eg: I will try my best to wake up my deskmate.</p>
<p>31.<strong>keep a diary</strong> 写一篇日记 （单数可数名词不能单独使用，要加冠词a&#x2F;an) keep diaries 写日记</p>
<p>\32. act v.行动 action n.行动 actor 男演员 actress 女演员 active 积极的</p>
<p>33.decision n.决定 <strong>decide to do sth</strong> 决定做sth</p>
<p><strong>make a decision</strong> 做一个决定 <strong>make decisions</strong> 做决定</p>
<p>eg： I decision to remember 100 words today .</p>
<p>I make a decision to remember 100 words today.</p>
<p>\34. <strong>trader</strong> n.商人 <strong>trade</strong> n.贸易 v. 做生意 <strong>business</strong> n.商业</p>
<p>35.cleaner 清洁工 singer 歌手</p>
<p>36.beautiful careful wonderful</p>
<p>37.difference .n 差异 different adj 有差别的 be different from 和。。。不同</p>
<p>\38. top n.顶部 adj.最高的 on the top of …… 在。。。。。顶部 top student 尖子生</p>
<p>39.an umbrella 一把雨伞 an hour 一个小时 an honest boy</p>
<p>a university 一所大学 a useful book a European 一个欧洲人</p>
<p>\40. work（不可数） n&#x2F;v job （可数） n 工作</p>
<p>41.be full of 充满 eg: our class is full of laughte</p>
<p>\42. at least 至少 at last 最后</p>
<p>\43. careful 小心的，认真的</p>
<p>careless will result in failure. 粗心导致失败</p>
<p>failure results from careless 失败来自于粗心</p>
<p>\44. although 虽然 through 穿过</p>
<p>eg:Although you are a fool , I don’t mind playing with you.</p>
<p>\45. dentist 牙科医生 dental 牙齿的 dental decay 蛀牙</p>
<p>\46. 到达 arrive in +大地方 arrive at +小地方</p>
<p>get to + 地方 reach + 地方</p>
<p>\47. beyond&#x2F;out of one’s reach 够不到</p>
<p>The switch(开关） on the wall was out of the child’s reach</p>
<p>48.<strong>draw a</strong> &#x2F; <em>accive at</em> &#x2F; <strong>come to</strong> &#x2F; <em>reach a</em> conclusion 达成结论</p>
<p>49.In fact &#x2F; as a matter of fact 事实上</p>
<p>\50. break out 爆发 break down 出故障 break up 分手，破碎 break in 打断</p>
<p>break v.打碎，违背 过去式broke 过去分词broken</p>
<h2 id="two"><a href="#two" class="headerlink" title="two"></a>two</h2><ul>
<li>share……with….. 与。。。。分享</li>
<li>choose v.选择 choose to do sth 选择做sth</li>
<li>I choose xiaoming to answer my question</li>
</ul>
<p>\2. service n.服务 serve v.服务 voluntary service志愿服务 servant 仆人 waiter 侍者</p>
<p>3.create v.创造 creator 创造者 creative 创造的</p>
<p>4.common 普通的 common sense 常识</p>
<p>we have nothing in common 我们没有任何相同的地方</p>
<p>have something in common with sb 与某人有共同之处</p>
<p>5.<strong>make up 编造</strong> make up a story <strong>make up for 弥补</strong></p>
<p>\6. plan 计划 plan to do sth 计划做sth</p>
<p>7.hope&#x2F;wish to do sth 希望做sth wish sb to do sth 希望某人去做sth</p>
<p>8.stand up 起立 can’t stand&#x2F;bear doing 不能容忍做sth put up with 容忍</p>
<p>\9. happen 发生 happen to do sth 碰巧做sth</p>
<p>you happen to see</p>
<p>10.In this way 以这种方式&#x2F;挡道 In a&#x2F;some way 在某种程度上</p>
<p>by the way 顺便说一下 on the way 在去。。。的路上</p>
<p>out of the way 不挡道 In the way 挡道</p>
<p>11.put out 扑灭 put on 穿上 put on weight 增重 lose weight 减肥</p>
<p>put up 举起，搭建 put off 推迟 put away 放好 put down 放下 write down 记下</p>
<p>put up your hands &#x2F; raise your hands举起你的手</p>
<p>put up with (doing) sth &#x2F;sb 容忍某人某物</p>
<p>catch up with 赶上 come up with 提出 keep up with 与。。。保持同步</p>
<p>12.expect sb to do sth 期望sb做sth</p>
<p>I expect you to remember 100 words.</p>
<p>13.culture n. 文化 cultural 文化的 agriculture n. 农业</p>
<p>\14. known &#x2F;famous 著名的</p>
<p>xiaomi is famous as our monitor</p>
<p>15.succeed in doing sth 成功做某sth</p>
<p>16.reason n. 原因 reasonable 合理的 unreasonable</p>
<p>17.cinema &#x2F; theater 电影院 film&#x2F;movie 电影</p>
<p>18.be lost in thought 陷入沉思 wangnan is lost in thought</p>
<p>19.ready 乐意的 be ready to sth 愿意做某事</p>
<p>\20. simple&#x2F;easy 简单的</p>
<p>\21. take sb’s place 代替 I want somebody to take my place 我想要某人取代我的位置</p>
<p>22.army 军队 soldier 军人</p>
<p>23.cook 厨师，煮 cookie 饼干 cooker 厨具</p>
<p>24.drive v.驾驶 driver 驾驶员</p>
<p>25.fall 倒塌 fall in love with 陷于爱情 fall asleep 睡着 fall ill 生病</p>
<p>26.possible 可能的 impossible as soon as 一。。。就</p>
<p>you should run as soon as possible你应该尽可能的跑</p>
<p>27.shake hands 握手</p>
<p>28.add ……to…. 把。。加到。。。上面</p>
<p>I want to add salt to your wound 我想在你的伤口撒盐</p>
<p>29.add to 增加 add up 总计</p>
<p>30.celebrate v. celebration n. 庆祝</p>
<p>31.mix up 混合</p>
<p>32.fill v.充满 full adj.满的</p>
<p>be full of …. 充满了。。。 fill…..with…. 用。。。充满。。。</p>
<p>your brain is full of knowledge知识</p>
<p>you fill your wallet with air</p>
<p>33.be covered with 被。。。覆盖</p>
<p>your head is covered with green hat</p>
<p>\34. prepare 准备 prepare for sth 为。。。作准备 prepare to do sth 准备做sth</p>
<p>35.invite v. invitation n. 邀请</p>
<p>invite sb to do sth 邀请某人做某事</p>
<p>sb be invited to do sth 某人被邀请做某事</p>
<p>xiaoming invites a beauty to have dinner in the dininghall.</p>
<p>The beauty is invited to have dinner in the dininghall by xiaoming.</p>
<p>36.catch up with …. 赶上。。。。</p>
<p>xiaoming can’t catch up with xiaoqiang ,xiaoming <strong>comes up with</strong> a good idea.想出</p>
<p>The beatuy can’t <strong>put up with</strong> xiaoqiang.容忍</p>
<p>37.keep up with 与。。。保持同步</p>
<p>38.look after &#x2F; take care of 照顾</p>
<p>39.turn down 调低 turn up 调高 turn on 打开 turn off 关闭</p>
<p>turn over 移交，反转 turn in &#x3D; hand in 上交 take turns to do sth 轮流</p>
<p>by turns 轮流 we take turns to clean the classroom</p>
<p>40.advice n. 建议（不可数） advise v. suggestion(不可数）</p>
<p>\41. agent n.代理人 agency n. 代理 guide v. 引路 n.导游</p>
<p>42.normal 正常的 abnolmal 反常的</p>
<p>\43. unless &#x3D; if not 除非</p>
<p>\44. understand v. understanding adj.&#x2F;n. 理解 misunderstand v. 误解</p>
<p>45.careless 粗心的 careful 小心的</p>
<p>46.make a mistake 犯一个错误 make mistakes</p>
<p>47.by chance &#x2F; by accident 偶然的</p>
<p>I met my ex-girlfriend in the street by accident 我在街道上偶然的遇到了我的前女友</p>
<p>\48. solve 解决 &#x3D; deal with 处理</p>
<p>\49. measure 措施 take measures&#x2F;steps to do sth 采取措施做sth</p>
<p>\50. pollution n. pollute v. 污染</p>
<p>air pollution 空气污染 environment pollution 环境污染</p>
<h2 id="three"><a href="#three" class="headerlink" title="three"></a>three</h2><p>1.alone adv. 单独的（客观上） lonely adj. 孤独的（心理上的）</p>
<p>he lives alone ,but he never feels lonely 他独自居住，但他从来不感觉孤独</p>
<p>2.suit n.西服 v.适合（风格，款式） fit v.适合 adj.适合的（颜色，尺寸）</p>
<p>\3. dress v.穿衣 n.连衣裙 dress up 打扮</p>
<p>4.interviewer 采访者 interviewee 被采访者</p>
<p>5.employer 雇主 employee 雇员</p>
<p>6.predict v. prediction n. 预言</p>
<p>\7. out of style&#x2F;fashion 过时的</p>
<p>8.in style &#x2F; fashion 时尚的</p>
<p>\9. origin 起源 original 原始的</p>
<p>\10. except 把。。。除外（不包括） besides 除了（包括）</p>
<p>11.fail v. failure n. 失败 fail to do sth 未能做sth</p>
<p>I fail to pass the exam</p>
<p>12.In return 作为回报</p>
<p>13.pressure n. 压力（精神上的） stress n. (物理上的）</p>
<p>\14. exit &#x2F; export 出口 port 港口 airport 机场</p>
<p>15.include 包括 exinclude 不包括</p>
<p>\16. push 推 pull 拉</p>
<p>\17. send v. 派遣 send out 发送 sent 过去式&#x2F;过去分词</p>
<p>\18. compare v. 比较</p>
<p>compare A with B 把A和B做比较</p>
<p>compare A to B 把A比作B</p>
<p>19.free adj.adv. 免费的，自由的 freedom n.自由 freely adv.</p>
<p>20.imagine v. imagination n. 想象</p>
<p>imagine doing sth 想象做sth you imagine flying in sky</p>
<p>\21. strange adj. 陌生的 stranger n.陌生人</p>
<p>22.run away 逃跑 run out of 用光</p>
<p>we run out of the electricity</p>
<p>\23. accident 事故 traffic accident 交通事故</p>
<p>\24. change v&#x2F;n. 改变 n.零钱 charge v.收费，谴责，充电 flash charge 快充</p>
<p>25.modern 现代的 modernize 使现代化的</p>
<p>26.kill 杀死 kill me heal me 了解我</p>
<p>murder 谋杀 murderer 凶手</p>
<p>\27. on the playground 在操场上</p>
<p>\28. take place 发生 take over 接管 take out 取出 take off 起飞</p>
<p>take away 拿走 take in 吸收 take up 占据（时间，空间，room），从事</p>
<p>take care of 照顾 take after 像 take it for granted 认为理所当然</p>
<p>someone takes it for granted that parents shoud give him money .</p>
<p>(复合不定代词作主语，谓语动词用三单）</p>
<p>29.destroy v.破坏（彻底的） damage v&#x2F;n 损坏（可修复的）</p>
<p>30.terrible 可怕的 terrorist 恐怖分子</p>
<p>\31. mean v. 打算 adj.小气的</p>
<p>mean&#x2F;plan to do sth 计划做sth mean doing 意味着</p>
<p>I missed the bus ,so it mean waiting another ten minutes,but i didn’t mean to wait so long,I went to work by taxi</p>
<p>\32. disappoint v. 使失望 disappointment n.失望 appoint 任命 appointment n.约定</p>
<p>to one’s disappointment &#x2F; surprise 让某人很失望，吃惊的是</p>
<p>\33. get over 克服 over come v.克服</p>
<p>\34. graduation n. 毕业 graduate n. 大学毕业生</p>
<p>35.volunteer 志愿者 voluntary 志愿的</p>
<p>36.rural adj.乡下的 countryside n.乡下</p>
<p>37.fortunately 幸运地 unfortunately 不幸的 fortune 机遇</p>
<p>38.influence v&#x2F;n.影响 have an effect &#x2F; influence on 对。。。有影响</p>
<p>39.In return 作为回报</p>
<p>40.collect v.收集 <strong>raise</strong> v.筹集，举起 collection n.收藏品</p>
<p>raise your hands &#x3D; put up your hands 举起你的手 raise 升起（日，月，雾fog）</p>
<p>41.particular adj. 特别的；讲究的</p>
<p>in particular 尤其 eg：he likes ugly girls in particular</p>
<p>be particular about 对。。。挑剔 eg：he is particular about his shoes</p>
<p>42.play an important role in …… 在。。。中起重要作用</p>
<hr>
<p>43.certain adj.当然的 certainly adv.</p>
<p>44.right now &#x3D; right away &#x3D; at once 立刻，马上 immediately 立刻</p>
<p>\45. solution n.解答</p>
<p>The solution &#x2F; key <strong>to</strong> problem 问题的解决办法&#x2F;关键</p>
<p>The answer <strong>to</strong> the question这个问题的答案</p>
<p>The key to the door 门的钥匙</p>
<p>46.annoy v, 使生气 annoyed adj.恼怒的 annoying adj.讨厌的</p>
<p>47.normal adj. 正常的 abnormal adj.反常的</p>
<p>48.allow v.允许 allow允许&#x2F;advise建议&#x2F;permit允许&#x2F;forbid禁止 <strong>doing</strong> 建议做某事</p>
<p>allow&#x2F;advise&#x2F;permit&#x2F;forbid <strong>sb to do</strong> 建议某人做某事</p>
<p>sb be allowed&#x2F;advised&#x2F;permitted&#x2F;forbidden 某人被建议做某事</p>
<p>\49. public n. 公众 in public 公众场合</p>
<p>we should wear masks面具，口罩 in public places.</p>
<p>50.drop v. 掉下 drop by 顺便拜访</p>
<h2 id="four"><a href="#four" class="headerlink" title="four"></a>four</h2><p>1.pick v. 采 pick up捡起，接送 pick out 挑选</p>
<p>2.receive &#x2F; accept 接受</p>
<p>3.advantage n.优点 disadvantage 劣势 shortcoming n.缺点</p>
<p>in advance &#x3D; ahead of time 提前</p>
<p>4.popular adj. 流行的,受欢迎的 be popular with &#x2F; among us . 在。。。中受欢迎</p>
<p>kong yalong is popular with &#x2F; among us .</p>
<p>\5. cost v. 价值，花（物） spend，花(钱，时间）on sth spend in doing sth</p>
<p>pay……for 为。。。付钱 It take &#x2F; took sb 时间to do sth sb 花时间做sth</p>
<p>It took me two minutes to question kong yalong .</p>
<p>this dress costs 200 yuan</p>
<p>I spent 200 on this dress</p>
<p>I paid 200 for this dress.</p>
<p>6.stage n. 舞台，阶段</p>
<p>7.native adj.本地的</p>
<p>8.encourage v.鼓励 disencourage 使泄气</p>
<p>encourage sb to do 鼓励某人做sth</p>
<p>sb be encourage to do sth sb 被鼓励做sth</p>
<p>9.progress n. 进步 make progress 取得进步</p>
<p>10.mention v.提及</p>
<p>11.require v.要求 requirement n. 必要条件</p>
<p>12.quarter 四分之一 three quarters 四分之三</p>
<p>13.population n. 人口</p>
<p>The population of zhengzhou is larger than that of zhumadian</p>
<p>14.nature自然 natural 自然的 culture文化 cultural文化的</p>
<p>15.through （内部） over （高空） past 经过（一侧） cross v. 经过（表面）</p>
<p>16.traffic n.交通 traffic accident 交通事故 traffic lights 红绿灯</p>
<p>the traffic is heavy .交通繁忙 the rain is heavy .&#x2F; It rains heavily</p>
<p>heavy 重的，大量的，繁忙的，汹涌的</p>
<p>17.challenge n.挑战 chance机会 choice选择 change改变 charge充电，收费，指控</p>
<p>18.matter v. 重要n.事件</p>
<p>what’s the matter ? &#x2F; what’s up？ &#x2F; what happened? 怎么了？ It doesn’t matter.没关系</p>
<p>19.afraid adj. 害怕的 be afraid of doing &#x2F; be afraid to do 害怕做sth</p>
<p>I am afraid that ……..我恐怕 I am afraid that I can’t help you.</p>
<p>\20. secret n.秘密 secretary n.秘书</p>
<p>21.term n. 学期，期限，任期</p>
<p>22.impress v. 使印象深刻 n.印象 impression n.印象</p>
<p>leave a deep impression on &#x2F; upon sb 给sb留下深刻印象</p>
<p>This beautiful and clean city has left a deep impression on foreign tourists.</p>
<p>这个漂亮干净的城市给外国游客留下了深刻的印象</p>
<p>23.trouble n. 困难 get into trouble 陷入困境 in trouble 在困境中 make trouble 制造麻烦</p>
<p>24.deal v. 处理 deal with &#x2F; solve</p>
<p>25duty 职务 on duty 值日</p>
<p>26.development n. 发展，发育 develop v.发展，开发，逐渐养成</p>
<p>with the development of economy,随着经济的发展</p>
<p>develop a good habit &#x2F;get into a bad habit 养成一个好&#x2F;坏习惯</p>
<p>we should develop a habit of taking notes我们应该养成一个做笔记的习惯。</p>
<p>27.make up one’s mind 做决定</p>
<p>28.each other 彼此</p>
<p>29.hear from….. 收到。。。。来信</p>
<p>30.sold out 卖完</p>
<p>31.be face with… 面对…..</p>
<p>32.soldier army join the army 参军</p>
<p>33.insect n.昆虫，卑鄙的人</p>
<p>34.daily daily life &#x2F;everyday life 日常生活 we study English every day</p>
<p>35.death n. die v. dead adj. deadly adj. 死亡 eg:deady weapon 致命的武器</p>
<p>36.afford v. 买的起 can’t afford (to do) sth 负担不起（做）sth</p>
<p>37.decision n. decide v.决定 <strong>make a decision</strong> make decisions</p>
<p><strong>decide to do sth</strong> make up one’s mind to do sth 下定决心做sth</p>
<p>\38. attention n. 注意，专心 pay attention to (doing) sth</p>
<p>you should pay attention to your study</p>
<p>object to (doing) sth 反对做sth</p>
<p>look forward to (doing) sth 期望</p>
<p>I am looking forward to hearing form you .</p>
<p>39.waste v. 浪费</p>
<p>40.concentrate v. 集中 concentrate on 集中注意力于…..上 focus on 集中</p>
<p>41.design 设计 present n.礼物 v. 赠送 at present 目前</p>
<p>42.voluntary adj. 自愿的 voluntary service 志愿服务</p>
<p>43.mess n. in a mess &#x3D; in disorder 混乱</p>
<p>44.sleepy adj.困倦的 asleep adj.睡着的 fall asleep 睡着</p>
<p>45.awake adj.醒着的 v.唤起 wake v.醒来 wake up 叫醒</p>
<p>46.reply v. 回复 reply to</p>
<p>47.obey v. 服从</p>
<p>48.achieve v. 完成 come ture 实现</p>
<p>49.importance n.重要 important</p>
<p>50.succeed v. 继承，接管 take over</p>
<p>succeed in doing sth 成功做某事</p>
<p>success n. successful adj.</p>
<h2 id="five"><a href="#five" class="headerlink" title="five"></a>five</h2><p>1.point n.要点 v.瞄准</p>
<p>there is no point &#x2F;sense in doing sth 做…..没有意义</p>
<p>2.medical adj. 医学的 medical field 医学领域 medicne n. 医学，药物 take medicine 吃药</p>
<p>dakang, It’s time to take medicine大郎，吃药了</p>
<p>3.research n.调查</p>
<p>4.tie n. 鞋带 v.系</p>
<p>5.necklace n. 项链</p>
<p>6.worry n. 烦恼 v.</p>
<p>worry about 担心 be worried about</p>
<p>7.energetic adj. 有活力的 energy n. 活力</p>
<p>8.confident adj. 自信的 confidence n.</p>
<p>9.had better do sth 最好做sth</p>
<p>10.all kinds of 各种各样的 a kinds of 一种 kind of + adj 有几分</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语词汇</tag>
      </tags>
  </entry>
  <entry>
    <title>英语作文1</title>
    <url>/2022/11/29/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/%E8%8B%B1%E8%AF%AD%E4%BD%9C%E6%96%871/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="基本思路："><a href="#基本思路：" class="headerlink" title="基本思路："></a>基本思路：</h2><p>结构模式化，即三段式，每段约三四句话，每句话约十个词，重用过渡句，以保证较少的内容，保证字数等考试要求，从而快速写完作文。</p>
<h2 id="提纲类模板："><a href="#提纲类模板：" class="headerlink" title="提纲类模板："></a>提纲类模板：</h2><h3 id="现象阐释型："><a href="#现象阐释型：" class="headerlink" title="现象阐释型："></a>现象阐释型：</h3><p>描述现象————说明原因———-表明观点</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b4c5207dd062fabd90a4f34dfe85ad5.jpg"></p>
<h3 id="问题解决型："><a href="#问题解决型：" class="headerlink" title="问题解决型："></a>问题解决型：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/30fd95e4bf8fd2627a4f1cf1492757a.jpg"></p>
<h3 id="对比选择型："><a href="#对比选择型：" class="headerlink" title="对比选择型："></a>对比选择型：</h3><p>提出说明一种观点———提出说明另一种观点——–做出选择并总结观点</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/fa5e0fa6a251489a10708ded6304e7a.jpg"></p>
<blockquote>
<p>I am for the former &#x2F; latter choice .</p>
</blockquote>
<h3 id="观点论证型："><a href="#观点论证型：" class="headerlink" title="观点论证型："></a>观点论证型：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/42bf360ab8214c4a7781873c6153be4.jpg"></p>
<h3 id="利弊评述型："><a href="#利弊评述型：" class="headerlink" title="利弊评述型："></a>利弊评述型：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ceec5f50bbc54289c8a5f94b52397f3.jpg"></p>
<h2 id="图画类模板："><a href="#图画类模板：" class="headerlink" title="图画类模板："></a>图画类模板：</h2><p>图画描述与浅说含义——–意义说明（寓意与原因）———-提建议和措施</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/032fe2e54e019e32791654b4a88a66e.jpg"></p>
<h2 id="范文1（利弊评述型）："><a href="#范文1（利弊评述型）：" class="headerlink" title="范文1（利弊评述型）："></a>范文1（利弊评述型）：</h2><p>​                                                       Part-time Jobs</p>
<p>​        With the development of science and technology,part-time jobs  has aroused great concern among people around us ,As a matter of fact ,Different people hold different opinions about it.</p>
<p>​          Some people believe  part-time jobs has  a good effect on our life,On the one hand, It makes us richer, on the other hand, It can help us get a better understanding of life, What’s more , Part-time  jobs can not only broaden our horizons but also enrich our life experience. As saying goes, Just as every coin has two sides,Other people don’t agree with the above points, For one thing,  Sometimes it can be dangerous to be alone,for another, It may affect our study.</p>
<p>​           Weighing up there two arguments , I consider that both of the arguments have something reasonable and right ,As far as I am concerned ,I firmly believe that its advantages far outweigh its disadvantages,  Therefore ,As stated above,We should choose it reasonably according to our own conditions ,Only in this way can we make our world a better place.</p>
<h2 id="范文2（问题解决型）："><a href="#范文2（问题解决型）：" class="headerlink" title="范文2（问题解决型）："></a>范文2（问题解决型）：</h2><p>​                                                      Drunk Driving</p>
<p>​        There exists a social phenomenon, Which has aroused great concern among people around us,That’s drunk driving. As we all know  , It is important for us to found a safe, polite, and orderly traffic environment. </p>
<p>​         Therefore, We should take a series of effective measures  to cope with the situation. On the one hand,We should encourage drivers to develop good traffic safety awareness. On the other hand, We should improve public education. What’s more ,we should strengthen legal punishment against drunk driving.</p>
<p>​          Of course, Following these suggestions may not surely solve the problem, But it is worth trying. As the saying goes, Rome was not built in a day.  As stated above, We should keep in mind that it is everyone’s responsibility to keep ourselves and others safe. Only in this way can we make our world a better place.</p>
<h2 id="范文3（现象阐述型）："><a href="#范文3（现象阐述型）：" class="headerlink" title="范文3（现象阐述型）："></a>范文3（现象阐述型）：</h2><p>​     There exists a social phenomenon, Which has aroused great concern among people around us,That’s drunk driving. Up  to now  ,It has aroused social discussion form all walks of life.</p>
<p>​      Why does this phenomenon  take place? There are three basic reasons are responsible for it . On the one hand,Some people are short of the awareness and knowledge about drunk driving ,On the other hand ,The supervision is not powerful enough.</p>
<p>​       In my opinion, We should take a series of effective measures  to cope with the situation. On the one hand,We should encourage drivers to develop good traffic safety awareness. On the other hand, We should improve public education. What’s more ,we should strengthen legal punishment against drunk driving. Only in this way can we make our world a better place.</p>
<h2 id="句子："><a href="#句子：" class="headerlink" title="句子："></a>句子：</h2><p>in spite of the fact that …..</p>
<p>we should pay attention to……</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语词汇</tag>
      </tags>
  </entry>
  <entry>
    <title>英语作文2</title>
    <url>/2022/11/29/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/%E8%8B%B1%E8%AF%AD%E4%BD%9C%E6%96%872/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="基本思路："><a href="#基本思路：" class="headerlink" title="基本思路："></a>基本思路：</h2><p>结构模式化，即三段式，每段约三四句话，每句话约十个词，重用过渡句，以保证较少的内容，保证字数等考试要求，从而快速写完作文。</p>
<h2 id="提纲类模板："><a href="#提纲类模板：" class="headerlink" title="提纲类模板："></a>提纲类模板：</h2><h3 id="现象阐释型："><a href="#现象阐释型：" class="headerlink" title="现象阐释型："></a>现象阐释型：</h3><p>描述现象————说明原因———-表明观点</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b4c5207dd062fabd90a4f34dfe85ad5.jpg"></p>
<h3 id="问题解决型："><a href="#问题解决型：" class="headerlink" title="问题解决型："></a>问题解决型：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/30fd95e4bf8fd2627a4f1cf1492757a.jpg"></p>
<h3 id="对比选择型："><a href="#对比选择型：" class="headerlink" title="对比选择型："></a>对比选择型：</h3><p>提出说明一种观点———提出说明另一种观点——–做出选择并总结观点</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/fa5e0fa6a251489a10708ded6304e7a.jpg"></p>
<blockquote>
<p>I am for the former &#x2F; latter choice .</p>
</blockquote>
<h3 id="观点论证型："><a href="#观点论证型：" class="headerlink" title="观点论证型："></a>观点论证型：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/42bf360ab8214c4a7781873c6153be4.jpg"></p>
<h3 id="利弊评述型："><a href="#利弊评述型：" class="headerlink" title="利弊评述型："></a>利弊评述型：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ceec5f50bbc54289c8a5f94b52397f3.jpg"></p>
<h2 id="图画类模板："><a href="#图画类模板：" class="headerlink" title="图画类模板："></a>图画类模板：</h2><p>图画描述与浅说含义——–意义说明（寓意与原因）———-提建议和措施</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/032fe2e54e019e32791654b4a88a66e.jpg"></p>
<h2 id="范文1（利弊评述型）："><a href="#范文1（利弊评述型）：" class="headerlink" title="范文1（利弊评述型）："></a>范文1（利弊评述型）：</h2><p>​                                                       Part-time Jobs</p>
<p>​        With the development of science and technology,part-time jobs  has aroused great concern among people around us ,As a matter of fact ,Different people hold different opinions about it.</p>
<p>​          Some people believe  part-time jobs has  a good effect on our life,On the one hand, It makes us richer, on the other hand, It can help us get a better understanding of life, What’s more , Part-time  jobs can not only broaden our horizons but also enrich our life experience. As saying goes, Just as every coin has two sides,Other people don’t agree with the above points, For one thing,  Sometimes it can be dangerous to be alone,for another, It may affect our study.</p>
<p>​           Weighing up there two arguments , I consider that both of the arguments have something reasonable and right ,As far as I am concerned ,I firmly believe that its advantages far outweigh its disadvantages,  Therefore ,As stated above,We should choose it reasonably according to our own conditions ,Only in this way can we make our world a better place.</p>
<h2 id="范文2（问题解决型）："><a href="#范文2（问题解决型）：" class="headerlink" title="范文2（问题解决型）："></a>范文2（问题解决型）：</h2><p>​                                                      Drunk Driving</p>
<p>​        There exists a social phenomenon, Which has aroused great concern among people around us,That’s drunk driving. As we all know  , It is important for us to found a safe, polite, and orderly traffic environment. </p>
<p>​         Therefore, We should take a series of effective measures  to cope with the situation. On the one hand,We should encourage drivers to develop good traffic safety awareness. On the other hand, We should improve public education. What’s more ,we should strengthen legal punishment against drunk driving.</p>
<p>​          Of course, Following these suggestions may not surely solve the problem, But it is worth trying. As the saying goes, Rome was not built in a day.  As stated above, We should keep in mind that it is everyone’s responsibility to keep ourselves and others safe. Only in this way can we make our world a better place.</p>
<h2 id="范文3（现象阐述型）："><a href="#范文3（现象阐述型）：" class="headerlink" title="范文3（现象阐述型）："></a>范文3（现象阐述型）：</h2><p>​     There exists a social phenomenon, Which has aroused great concern among people around us,That’s drunk driving. Up  to now  ,It has aroused social discussion form all walks of life.</p>
<p>​      Why does this phenomenon  take place? There are three basic reasons are responsible for it . On the one hand,Some people are short of the awareness and knowledge about drunk driving ,On the other hand ,The supervision is not powerful enough.</p>
<p>​       In my opinion, We should take a series of effective measures  to cope with the situation. On the one hand,We should encourage drivers to develop good traffic safety awareness. On the other hand, We should improve public education. What’s more ,we should strengthen legal punishment against drunk driving. Only in this way can we make our world a better place.</p>
<h2 id="句子："><a href="#句子：" class="headerlink" title="句子："></a>句子：</h2><p>in spite of the fact that …..</p>
<p>we should pay attention to……</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语词汇</tag>
      </tags>
  </entry>
  <entry>
    <title>五大基本句型</title>
    <url>/2022/09/01/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-01-%E4%BA%94%E5%A4%A7%E5%9F%BA%E6%9C%AC%E5%8F%A5%E5%9E%8B/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h2><ul>
<li>主谓</li>
<li>主谓宾</li>
<li>主谓间宾直宾</li>
<li>主谓宾宾补</li>
<li>主系表</li>
</ul>
<h2 id="主谓，主谓宾："><a href="#主谓，主谓宾：" class="headerlink" title="主谓，主谓宾："></a>主谓，主谓宾：</h2><p><strong>主语</strong>：由<strong>名词</strong>或<strong>代词</strong>担当，在句首，</p>
<p><strong>谓语</strong>：由<strong>动词</strong>担当，在主语之后。（在主谓结构中，动词是不及物动词）</p>
<p>不及物动词不能直接跟宾语，需要先加介词 eg：you <strong>laugh at</strong> me 你嘲笑我</p>
<p>谓语动词后不能直接跟宾语，但可以跟状语（介词短语，副词）</p>
<p>eg：The sun rises <strong>in the east</strong>（介词短语）</p>
<p>The children are playing <strong>happily</strong>(副词）</p>
<p><strong>宾语</strong>：动作的作用对象，在谓语之后，由<strong>名词</strong>或<strong>代词</strong>充当</p>
<p>eg:I eat <strong>breakfast</strong></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8c53fdd7-3721-4fc0-be97-63b9ee5d7d7f.jpg"></p>
<h2 id="主谓宾宾补："><a href="#主谓宾宾补：" class="headerlink" title="主谓宾宾补："></a>主谓宾宾补：</h2><p><strong>宾补</strong>：是对宾语的补充说明，为<strong>形容词</strong>。</p>
<p>eg：The news makes him happy</p>
<h2 id="主系表："><a href="#主系表：" class="headerlink" title="主系表："></a>主系表：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d14cd9c4-b77a-4140-89a7-84ac6f1f9744.jpg"></p>
<p><strong>系动词</strong>：</p>
<p>1.be动词（am,is,are,was,were)</p>
<p>eg:Money <strong>is</strong> the root of crimes 钱是犯罪的根源</p>
<p>2.感官动词（sound,taste,look,smell,feel)(后加形容词）</p>
<p>eg:she <strong>looks</strong> happy</p>
<p>3.表象系动词（seem,appear)(后可跟to be)</p>
<p>eg:The maths problem <strong>seems</strong> (to be) difficult</p>
<p>she <strong>appears</strong> (to be) kind</p>
<p>4.持续系动词（stay,keep,remain)</p>
<p>eg:I <strong>keep</strong> silent 我保持沉默</p>
<p>5.变化系动词（become,come ,get,go,turn,grow,fall)(变得）</p>
<p>become+职业 成为….. eg:I <strong>become</strong> a teacher</p>
<p>come true 实现 eg：My deam <strong>comes true</strong>.</p>
<p>get warm&#x2F;cold 天气&#x2F;气温变化 eg：It is <strong>getting</strong> cold</p>
<p>go bad 变质 eg: The food <strong>goes</strong> bad</p>
<p>turn+green&#x2F;red 颜色变化 eg: The leaves <strong>turn</strong> yellow in autumn</p>
<p>grow up&#x2F;old 长大&#x2F;变老 eg: we <strong>grow up</strong></p>
<p>fall ill&#x2F;asleep 生病&#x2F;睡觉 eg: His son <strong>falls ill</strong></p>
<p>6.终止系动词（turn out&#x2F;prove)（结果是,被证明是）</p>
<p>eg: The news <strong>turns out</strong> to be false 这条消息被证明是假的</p>
<h2 id="主谓间宾直宾："><a href="#主谓间宾直宾：" class="headerlink" title="主谓间宾直宾："></a>主谓间宾直宾：</h2><p>常见的<strong>跟双宾</strong>的结果</p>
<p>1.give sb sth &#x3D;give sth to sb</p>
<p>2.lend sb sth &#x3D;lend sth to sb</p>
<p>3.tell sb sth &#x3D;tell sth to sb</p>
<p>4.show sb sth &#x3D;show sth to sb</p>
<p>5.offer sb sth &#x3D;offer sth to sb</p>
<p>6.pass sb sth &#x3D;pass sth to sb</p>
<p>7.send sb sth &#x3D;send sth to sb</p>
<p>8.bring sb sth &#x3D;bring sth to sb</p>
<p>9.read sb sth &#x3D;read sth to sb</p>
<p>10.buy&#x2F;make&#x2F;fetch取&#x2F;prepare sb sth &#x3D;buy&#x2F;make&#x2F;fetch&#x2F;prepare sth to sb</p>
<p>eg: My mother bought me a book &#x3D;My mother bought a book for me</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>动词</title>
    <url>/2022/09/03/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-03-%E5%8A%A8%E8%AF%8D/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="总体分类："><a href="#总体分类：" class="headerlink" title="总体分类："></a>总体分类：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/631c1e3fe73a915a1e2602c54e78787.jpg"></p>
<p>系动词（be动词，感官动词）</p>
<h2 id="情态动词："><a href="#情态动词：" class="headerlink" title="情态动词："></a>情态动词：</h2><p>特征：</p>
<ul>
<li>没有人称和数的变化（除了have to )</li>
<li>后面都跟动词原形</li>
</ul>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f58549bb-800d-427c-b2d8-fe8e078e43a8.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/fbf2db23-88d3-4ad5-93ea-ab628c9ede26.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b2005e67-b550-4031-8c5d-03e12bbe98ed.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/37310313-5b42-448c-a75a-973e269ffc8c.jpg"></td>
</tr>
</tbody></table>
<h2 id="助动词："><a href="#助动词：" class="headerlink" title="助动词："></a>助动词：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3ca5b250-2a4c-4c03-b408-2dc00f62de5d.jpg"></p>
<h2 id="实义动词："><a href="#实义动词：" class="headerlink" title="实义动词："></a>实义动词：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/84062f08-b683-4734-9803-8dc763b9e5cd.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5695beee-aba0-44d7-9d80-ad1acc058f60.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/07978314-7768-4c1e-9241-b4ee88143539.jpg"></td>
<td></td>
</tr>
</tbody></table>
<p>此表同时也是过去分词的形式，但仅限于规则动词</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>名词</title>
    <url>/2022/09/02/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-02-%E5%90%8D%E8%AF%8D/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="可数名词单数变复数的规则变化："><a href="#可数名词单数变复数的规则变化：" class="headerlink" title="可数名词单数变复数的规则变化："></a>可数名词单数变复数的规则变化：</h2><p>1.<strong>直接</strong>在词尾加s eg: book–books</p>
<p>2.以<strong>s,x,ch,sh</strong>结尾加es eg: bus—buses</p>
<p>3.以<strong>辅音+y</strong>结尾，变y为i加es eg: country—countries</p>
<p>以<strong>元音+y</strong>结尾，+s eg: toy—toys(玩具）</p>
<p>4.以<strong>字母o</strong>结尾：</p>
<p>a,<strong>这几个词+es</strong>（Negro—Negros, hero—heros, potato—potatoes, tomato—-tomatoes)</p>
<p>黑人 英雄 爱吃 土豆和 西红柿</p>
<p>b,<strong>其余+s</strong> eg：radio—radios bamboo—-bamboos</p>
<p>5.<img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c89fdf9e-83ae-4880-97e5-68001424b9ae.jpg"></p>
<h2 id="可数名词单数变复数的不规则变化："><a href="#可数名词单数变复数的不规则变化：" class="headerlink" title="可数名词单数变复数的不规则变化："></a>可数名词单数变复数的不规则变化：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/220e13ea-8eb7-4545-9e55-651fbfbffdb2.jpg"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5e17bd04-38c3-471d-8bd3-ff90d401e463.jpg"></p>
<h2 id="a-x2F-an的用法："><a href="#a-x2F-an的用法：" class="headerlink" title="a&#x2F;an的用法："></a>a&#x2F;an的用法：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5fefdf6f-e7a0-41e9-a50d-76715d1017b4.jpg"></p>
<h2 id="不可数名词："><a href="#不可数名词：" class="headerlink" title="不可数名词："></a>不可数名词：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ca425996-1246-49ca-9ff6-2860260931d3.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f2bf469d-effd-45a2-bf89-c10e03ad75e4.jpg"></th>
</tr>
</thead>
</table>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/53b1bf00-4bc0-4939-a589-32b22430c48e.png" style="zoom:150%;" /></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/98d5a2be-5ca5-4b2b-acfb-6916e8d90faa.jpg"></th>
</tr>
</thead>
</table>
<h2 id="名词的所有格："><a href="#名词的所有格：" class="headerlink" title="名词的所有格："></a>名词的所有格：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a8ee5ada-0249-4dbf-850f-be2383cda513.jpg"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/92b1df96-6ec2-463c-8c6f-b80ce9814031.jpg"></p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>英语作文3</title>
    <url>/2022/11/29/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/%E8%8B%B1%E8%AF%AD%E4%BD%9C%E6%96%873/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="范文1（利弊评述型）："><a href="#范文1（利弊评述型）：" class="headerlink" title="范文1（利弊评述型）："></a>范文1（利弊评述型）：</h2><p>Part-time Jobs</p>
<p>With the development of science and technology,part-time jobs has aroused great concern among people around us ,As a matter of fact ,Different people hold different opinions about it.</p>
<p>Some people believe part-time jobs has a good effect on our life,On the one hand, It makes us richer, on the other hand, It can help us get a better understanding of life, What’s more , Part-time jobs can not only broaden our horizons but also enrich our life experience. As saying goes, Just as every coin has two sides,Other people don’t agree with the above points, For one thing, Sometimes it can be dangerous to be alone,for another, It may affect our study.</p>
<p>Weighing up there two arguments , I consider that both of the arguments have something reasonable and right ,As far as I am concerned ,I firmly believe that its advantages far outweigh its disadvantages, Therefore ,As stated above,We should choose it reasonably according to our own conditions ,Only in this way can we make our world a better place.</p>
<h2 id="范文2（问题解决型）："><a href="#范文2（问题解决型）：" class="headerlink" title="范文2（问题解决型）："></a>范文2（问题解决型）：</h2><p>Drunk Driving</p>
<p>There exists a social phenomenon, Which has aroused great concern among people around us,That’s drunk driving. As we all know , It is important for us to found a safe, polite, and orderly traffic environment.</p>
<p>Therefore, We should take a series of effective measures to cope with the situation. On the one hand,We should encourage drivers to develop good traffic safety awareness. On the other hand, We should improve public education. What’s more ,we should strengthen legal punishment against drunk driving.Of course, Following these suggestions may not surely solve the problem, But it is worth trying. As the saying goes, Rome was not built in a day.</p>
<p>As stated above, We should keep in mind that it is everyone’s responsibility to keep ourselves and others safe. Only in this way can we make our world a better place.</p>
<h2 id="范文3（现象阐述型）："><a href="#范文3（现象阐述型）：" class="headerlink" title="范文3（现象阐述型）："></a>范文3（现象阐述型）：</h2><p>There exists a social phenomenon, Which has aroused great concern among people around us,That’s drunk driving. Up to now ,It has aroused social discussion form all walks of life.</p>
<p>Why does this phenomenon take place? There are three basic reasons responsible for it . For one thing,Some people are short of the awareness and knowledge about drunk driving ,for another ,The supervision is not powerful enough.In my opinion, We should take a series of effective measures to cope with the situation. On the one hand,We should encourage drivers to develop good traffic safety awareness. On the other hand, We should improve public education. What’s more ,we should strengthen legal punishment against drunk driving.</p>
<p>All in all .we should make full use of its positive aspects and avoid its negative aspects .Only in this way can we make our world a better place.</p>
<blockquote>
<p>兼职工作</p>
<p>随着科技的发展，兼职已经引起了我们周围人的极大关注，事实上，不同的人对此有不同的看法。</p>
<p>一些人认为兼职工作对我们的生活有很好的影响，一方面，它使我们更富有，另一方面，它可以帮助我们更好地理解生活，更重要的是，兼职工作不仅可以拓宽我们的视野，还可以丰富我们的生活经验。俗话说，就像每个硬币都有两面性，其他人不同意以上几点，一方面，有时独处是危险的，另一方面，它可能会影响我们的学习。</p>
<p>权衡这两种观点，我认为这两种观点都有合理和正确的地方，就我而言，我坚信它的优点远大于缺点，因此，如上所述，我们应该根据我们自己的条件合理地选择它，只有这样我们才能使我们的世界变得更美好。</p>
</blockquote>
<hr>
<hr>
<blockquote>
<p>酒后驾车</p>
<p>有一个社会现象，已经引起了我们周围人的高度关注，那就是酒驾。众所周知，对我们来说，建立一个安全、礼貌、有序的交通环境是很重要的。</p>
<p>因此，我们应该采取一系列有效的措施来应对这种情况。一方面，我们应该鼓励司机培养良好的交通安全意识。另一方面，我们应该改善公共教育。更重要的是，我们应该加强对酒驾的法律惩罚。</p>
<p>当然，按照这些建议不一定能解决问题，但值得一试。俗话说，罗马不是一天建成的。如上所述，我们应该记住，保护自己和他人的安全是每个人的责任。只有这样，我们才能使我们的世界变得更美好。</p>
</blockquote>
<hr>
<hr>
<blockquote>
<p>有一个社会现象，已经引起了我们周围人的高度关注，那就是酒驾。时至今日，已引起社会各界的广泛讨论。</p>
<p>为什么会出现这种现象?有三个基本原因。一方面，一些人缺乏对酒驾的认识和知识，另一方面，监管不够有力。</p>
<p>在我看来，我们应该采取一系列有效的措施来应对这种情况。一方面，我们应该鼓励司机培养良好的交通安全意识。另一方面，我们应该改善公共教育。更重要的是，我们应该加强对酒驾的法律惩罚。只有这样，我们才能使我们的世界变得更美好。</p>
</blockquote>
<hr>
<hr>
<h2 id="题目参考："><a href="#题目参考：" class="headerlink" title="题目参考："></a>题目参考：</h2><p>The importance of self-confidence</p>
<p>The effect of self-confidence</p>
<h2 id="引出："><a href="#引出：" class="headerlink" title="引出："></a>引出：</h2><p>up to now ,it has aroused social discussion from all walks of life .</p>
<p>as a matter of fact , different people hold different opinions about it .</p>
<h2 id="过渡："><a href="#过渡：" class="headerlink" title="过渡："></a>过渡：</h2><h3 id="正常过渡："><a href="#正常过渡：" class="headerlink" title="正常过渡："></a>正常过渡：</h3><p>some people believe it has a good effect on our life .</p>
<p>other people don’t agree with the above points .</p>
<p>we should take a series of effective measures to cope with the situation.</p>
<p>of course ,following these suggestions may not surely ,but it is worth trying.</p>
<p>why does this phenomenon take place ? There are three basic reasons responsible for it.</p>
<p>the arguments for this point of view can be listed as follows.</p>
<h3 id="谚语过渡："><a href="#谚语过渡：" class="headerlink" title="谚语过渡："></a>谚语过渡：</h3><p>as the saying goes ,every coin has two sides .</p>
<p>Rome was not built in a day .</p>
<p>no pain ,no gain.</p>
<p>failure is the mother of success .</p>
<p>a friend in need is a friend indeed.</p>
<p>stay hungry stay foolish</p>
<h2 id="正面论据："><a href="#正面论据：" class="headerlink" title="正面论据："></a>正面论据：</h2><p>it can bring you courage.</p>
<p>once we gain it ,we will strength to overcome difficulties,</p>
<p>we may finish something impossible .</p>
<p>It brings us closer together .</p>
<p>it can help us find a good job and have a bright future.</p>
<p>it can improve people’s living standards.</p>
<p>it is good for our environment.</p>
<p>we are able to make friends who come from different places.</p>
<p>it make us richer.</p>
<p>it can help us get a better understanding of life.</p>
<p>it can not only broaden our horizons but also enrich our life experience.</p>
<h2 id="反面论据："><a href="#反面论据：" class="headerlink" title="反面论据："></a>反面论据：</h2><p>It may disturb our normal</p>
<p>it can bring us a lot of pressure.</p>
<p>it can waste a lot of time.</p>
<p>it can prevent the social development.</p>
<p>It will make us lose heart.</p>
<p>sometimes it can be dangerous to be alone .</p>
<p>it may affect our study .</p>
<h2 id="现象why论据："><a href="#现象why论据：" class="headerlink" title="现象why论据："></a>现象why论据：</h2><p>The supervision is not powerful enough.</p>
<p>we are short of the awareness and knowledge about it .</p>
<h2 id="个人总结观点："><a href="#个人总结观点：" class="headerlink" title="个人总结观点："></a>个人总结观点：</h2><p>The harder we work ,the luckier we will be.</p>
<p>no one and nothing can stop you to success.</p>
<p>we should keep in mind that anything is possible .we should trust in ourselves.</p>
<p>we should keep in mind that it is everyone’s responsibility to keep ourselves and others safe.</p>
<p>we must make good use of our time and study hard when we are young.</p>
<p>Laziness makes a man poor , while diligence brings wealth.</p>
<p>I firmly believe that its advantages far outweigh its disadvantages ,</p>
<h2 id="模板："><a href="#模板：" class="headerlink" title="模板："></a>模板：</h2><p>观点论证</p>
<p>对比选择</p>
<p>现象阐述</p>
<p>问题解决</p>
<h2 id="其它："><a href="#其它：" class="headerlink" title="其它："></a>其它：</h2><p>as is shown in the picture .</p>
<p>紧凑，，圆润，，对齐，，肚子大尾巴小，，微微倾斜</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语词汇</tag>
      </tags>
  </entry>
  <entry>
    <title>数词</title>
    <url>/2022/09/05/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-05-%E6%95%B0%E8%AF%8D/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="基数词："><a href="#基数词：" class="headerlink" title="基数词："></a>基数词：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/60102539025f81c242149a4cc9e4d45.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b5c9565af5e3de11dd7445099209cdd.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/89d4f082096185b5d419ce0cd23df5d.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="序数词："><a href="#序数词：" class="headerlink" title="序数词："></a>序数词：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/86fbc80b6a0372a7bceedd57243d004.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e46ef58da9ee4742ff88a35c12c6498.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3cebdc494a84efc457918c971ab548d.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f607f1bf4781c138cec617ae7735e2a.jpg"></td>
</tr>
</tbody></table>
<blockquote>
<p>英语表达日期为月，日，年</p>
<p>月份前三个字母为缩写</p>
</blockquote>
<h2 id="分数与百分数："><a href="#分数与百分数：" class="headerlink" title="分数与百分数："></a>分数与百分数：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9e77c26b248a5d87f35d3421b6f637c.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9d140b14a66ff05cb16f24bce881daf.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5e192b2d8741427a4a07b9be856126e.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="确数与约数："><a href="#确数与约数：" class="headerlink" title="确数与约数："></a>确数与约数：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6fd0c89cc3682a2b467098c35771a2f.jpg"></p>
<blockquote>
<p><strong>确数无S，约数加S，S与of共存亡</strong></p>
</blockquote>
<h2 id="星期与月份："><a href="#星期与月份：" class="headerlink" title="星期与月份："></a>星期与月份：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/屏幕截图 2022-10-02 185630.jpg" style="zoom: 150%;" /></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/屏幕截图 2022-10-02 185556.jpg" style="zoom:150%;" /></th>
</tr>
</thead>
</table>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>形容词和副词</title>
    <url>/2022/09/04/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-04-%E5%BD%A2%E5%AE%B9%E8%AF%8D%E5%92%8C%E5%89%AF%E8%AF%8D/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="形容词的基本用法："><a href="#形容词的基本用法：" class="headerlink" title="形容词的基本用法："></a>形容词的基本用法：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f856c7ca-89bb-4387-8c53-f0086a672e38.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/281041cd-d842-4041-ba39-6f88209d50cf.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6c90fd50-8977-4ea7-8792-782907fbf005.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a97b90f7-b1e7-41f2-90b7-1deba3e6e5b8.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0ad0f3b3-21d6-4f83-838d-d325b6aeda4b.png" style="zoom: 150%;" /></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/18470489-1ad4-4b58-8f9c-6b6d631a838a.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b6c49f3e-39ba-4e59-8cf8-9429840e24b2.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/dbe79e4c-ad2c-4e82-a5f7-fcf38076ee4e.png"></td>
</tr>
</tbody></table>
<h2 id="副词的基本用法："><a href="#副词的基本用法：" class="headerlink" title="副词的基本用法："></a>副词的基本用法：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4d45da55-a016-4dcc-bb48-f186fb02ae6b.jpg"></p>
<h2 id="原级句型："><a href="#原级句型：" class="headerlink" title="原级句型："></a>原级句型：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f6c621eb-5a99-4a04-a141-7e629e85d526.png" style="zoom:150%;" /></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e888ccac-1f07-47e0-aa9f-0c97c78af96b.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7263bdab-45d0-474a-a381-745c756d22e9.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f07fb0f6-5e60-4857-8135-d8f9d24eb518.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6796adb1-bd11-41af-9109-4a59c9edabbe.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1e7d2cd3-9c46-4e77-a3af-abf1342c8478.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/87a07fbe-7857-4fb3-8dc5-9046573a1ad0.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1fab12b8-7a40-4a89-9b8e-6022e938516a.jpg"></td>
</tr>
</tbody></table>
<h2 id="形容词和副词比较级和最高级的变化规则："><a href="#形容词和副词比较级和最高级的变化规则：" class="headerlink" title="形容词和副词比较级和最高级的变化规则："></a>形容词和副词比较级和最高级的变化规则：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/983276a7-770c-475f-9ce1-3d4ed37ec09f.jpg"></p>
<h2 id="特殊的比较级和最高级："><a href="#特殊的比较级和最高级：" class="headerlink" title="特殊的比较级和最高级："></a>特殊的比较级和最高级：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4bbd01a7-d396-4bf0-a3f3-ed36bba7226b.jpg"></p>
<h2 id="比较级的用法："><a href="#比较级的用法：" class="headerlink" title="比较级的用法："></a>比较级的用法：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e5c5991d-4575-4a8a-9607-b24246f32a8f.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/75b45267-1029-4a45-98c4-e377d6f70630.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d6b6999b-a168-4413-b715-817e0dceee70.png" style="zoom:150%;" /></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f2c8bbb3-a7df-4d27-8468-356261f5946a.png" style="zoom:150%;" /></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cde437e5-8430-4dae-a037-1d15c379c2e0.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/fe71d99f-bad6-4323-8f8f-66f23716bd69.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2851d314-9ff2-42a9-bc78-0eac47007c8d.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/484376a1-4e20-4f3d-acb0-c12d4ceb7a2e.jpg"></td>
</tr>
</tbody></table>
<h2 id="最高级的用法："><a href="#最高级的用法：" class="headerlink" title="最高级的用法："></a>最高级的用法：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9acfc0b1-0960-4926-bf97-feda9d1a5908.png" style="zoom:150%;" /></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/89b82615-6928-4c65-9dc0-b864e8ff0ece.jpg"></th>
</tr>
</thead>
</table>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>代词</title>
    <url>/2022/09/06/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-06-%E4%BB%A3%E8%AF%8D/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1c6adbbb-2d54-4995-88cd-0502060c9412.png" style="zoom:200%;" />

<p>关于反身代词前半部分的拼写，表示他，他们的与第三人称（宾格）相一致。</p>
<h2 id="主格和宾格的区别："><a href="#主格和宾格的区别：" class="headerlink" title="主格和宾格的区别："></a>主格和宾格的区别：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/50cb81b7-8fbe-47ad-ac0a-0cf14605c5c0.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/139ce5ef-e0f7-4ca7-a2b2-67e7a4193ea2.png"></th>
</tr>
</thead>
</table>
<h2 id="反身代词："><a href="#反身代词：" class="headerlink" title="反身代词："></a>反身代词：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/56a5e3e0-d159-48cd-85e7-bf2cf24aa465.png" style="zoom:200%;" /></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/77f2c50b-8f69-4630-a0b8-af0cff3b5754.jpg"></th>
</tr>
</thead>
</table>
<h2 id="指示代词："><a href="#指示代词：" class="headerlink" title="指示代词："></a>指示代词：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e5ea5f05-56ae-439a-aa19-fab2a37806bb.png" style="zoom:200%;" /></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1455555.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5f0b2431-158a-4fdd-b024-d1f2f053f026.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="不定代词："><a href="#不定代词：" class="headerlink" title="不定代词："></a>不定代词：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3324f881-713d-4059-ae95-9f0e28397648.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/af95dc0b-bde8-42a2-93bf-41549a34334e.jpg"></th>
</tr>
</thead>
</table>
<h2 id="复合不定代词："><a href="#复合不定代词：" class="headerlink" title="复合不定代词："></a>复合不定代词：</h2><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b961c23d-1324-45da-b979-d4516dde849f.png" style="zoom:200%;" />

<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/80ba07fd-5790-49b0-a2b4-3ace4f4e9152.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/38a6203f-8657-4eb1-95af-c1bf5d3dc279.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4af986b4-c817-464c-b110-4b0e72719db8.jpg" style="zoom:150%;" /></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/93165d8c-cbd8-44fc-9667-0e894f4f370a.jpg"></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>现在/过去/将来完成时及其它</title>
    <url>/2022/09/09/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-09-%E5%AE%8C%E6%88%90%E6%97%B6/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="现在完成时及现在完成进行时："><a href="#现在完成时及现在完成进行时：" class="headerlink" title="现在完成时及现在完成进行时："></a>现在完成时及现在完成进行时：</h2><h3 id="基本概念："><a href="#基本概念：" class="headerlink" title="基本概念："></a>基本概念：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3e82d338-749d-4157-a6f4-4847dfb0eaca.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/23adf1b4-c890-4f49-8902-9d88b435b949.jpg"></th>
</tr>
</thead>
</table>
<h3 id="构成（怎么用）："><a href="#构成（怎么用）：" class="headerlink" title="构成（怎么用）："></a>构成（怎么用）：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ccb408aa-18b0-46fc-9017-6d2b0800390d.jpg"></p>
<h3 id="考点："><a href="#考点：" class="headerlink" title="考点："></a>考点：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4732c6db-e56d-45b0-a56e-78bf38bad489.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ad20d37d-396a-4776-86c8-f629d8f9d3f9.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9f3ae1b4-ef85-44b8-946e-febbeee47912.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/31faeb16-4538-4e4b-9300-9ad4274ce3d7.jpg"></td>
</tr>
</tbody></table>
<h3 id="现在完成进行时："><a href="#现在完成进行时：" class="headerlink" title="现在完成进行时："></a>现在完成进行时：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/87fdfa3c-0965-4719-8b8d-ca5056a04b24.jpg"></p>
<h2 id="过去完成时："><a href="#过去完成时：" class="headerlink" title="过去完成时："></a>过去完成时：</h2><h3 id="基本概念：-1"><a href="#基本概念：-1" class="headerlink" title="基本概念："></a>基本概念：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ef6216ae-37af-4a40-8da3-9ea76404c523.jpg"></p>
<h3 id="时标："><a href="#时标：" class="headerlink" title="时标："></a>时标：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/159c2d5f-d898-46b8-a9b8-793d6a7aeddb.jpg"></p>
<h3 id="怎么用："><a href="#怎么用：" class="headerlink" title="怎么用："></a>怎么用：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8f3ba735-d45c-4b75-b08a-2275e218ca53.jpg"></p>
<h3 id="固定句型："><a href="#固定句型：" class="headerlink" title="固定句型："></a>固定句型：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ae6d1788-8f78-490f-a280-3cab08618305.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7f162357-621c-4c3a-86eb-3f7df19a6aac.jpg"></th>
</tr>
</thead>
</table>
<h2 id="将来完成时："><a href="#将来完成时：" class="headerlink" title="将来完成时："></a>将来完成时：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ba000884-7283-4c20-b8c1-45344838e96e.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ee24daea-e73b-45ca-889e-df67240dc0ce.jpg"></th>
</tr>
</thead>
</table>
<h2 id="过去将来时："><a href="#过去将来时：" class="headerlink" title="过去将来时："></a>过去将来时：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2a79c4a0-deab-4a10-ad7b-b346bc6d52b2.jpg"></p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>现在/过去/将来进行时</title>
    <url>/2022/09/08/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-08-%E8%BF%9B%E8%A1%8C%E6%97%B6/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="基本概念："><a href="#基本概念：" class="headerlink" title="基本概念："></a>基本概念：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/72138ef4-d9e7-49e4-af88-4058dd0a0ca3.jpg"></p>
<h2 id="构成"><a href="#构成" class="headerlink" title="构成:"></a>构成:</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d4d4b063-2bf5-419b-b0c7-21f8d10a1f5d.jpg"></p>
<h2 id="考点"><a href="#考点" class="headerlink" title="考点:"></a>考点:</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f16e92d8-d8f4-4d10-b1c0-85a53a8a0d3d.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ed8b50ed-5db6-4ca0-92f0-92d6d5eed43e.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f1a454ac-823d-478b-b33d-80bc53dd9b54.jpg"></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>一般 现在/过去/将来 时</title>
    <url>/2022/09/07/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-07-%E4%B8%80%E8%88%AC%E6%97%B6%20/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="一般现在时："><a href="#一般现在时：" class="headerlink" title="一般现在时："></a>一般现在时：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6da77020-3038-45d2-95e9-7b39e6723749.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d20f108d-ced0-446f-b0ae-ff8cb7b09be0.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1021c516-acff-463c-bf76-48307078985d.jpg"></td>
<td></td>
</tr>
</tbody></table>
<blockquote>
<p>第三人称单数，可数名词单数，不可数名词</p>
</blockquote>
<blockquote>
<p>第一，第二人称单复数，可数名词复数</p>
</blockquote>
<blockquote>
<p>名词复数加s,动词单数加s(单三）。</p>
</blockquote>
<h2 id="一般过去时："><a href="#一般过去时：" class="headerlink" title="一般过去时："></a>一般过去时：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6da77020-3038-45d2-95e9-7b39e6723749.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cb7e3046-6f42-4b79-b6c9-a886e97a39cb.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2d8739cc-0e13-4f5b-9e41-c24313a39169.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="一般将来时："><a href="#一般将来时：" class="headerlink" title="一般将来时："></a>一般将来时：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f544eee3-eda1-44dd-b838-85581c159b98.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/887318ba-4b5a-4f25-b597-73984f99f36e.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6186f44e-158f-4772-9000-d2e80a069dd1.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/45d5d445-fb8c-4cdb-917e-c22b0db56dd4.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7fa79b9c-50f6-4a75-b480-447ff9465d59.jpg"></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>时态的辨别</title>
    <url>/2022/09/10/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-10-%E6%97%B6%E6%80%81%E7%9A%84%E8%BE%A8%E5%88%AB/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="一般现在时："><a href="#一般现在时：" class="headerlink" title="一般现在时："></a>一般现在时：</h2><blockquote>
<p>经常性，习惯性，规律性动作或目前存在的状态</p>
</blockquote>
<blockquote>
<p>主语 + am&#x2F;is&#x2F;are + 其它</p>
</blockquote>
<blockquote>
<p>主语 + V原形&#x2F;V单三 + 其它</p>
</blockquote>
<p>时标：</p>
<p>always,usually,often,sometimes,seldom,</p>
<p>hardly,never,every day&#x2F;week&#x2F;month&#x2F;year,</p>
<p>every morning&#x2F;evening,</p>
<p>there times a day,twice a week,once a week,</p>
<p>on weekdays, at weekends,on sundays</p>
<h2 id="一般过去时："><a href="#一般过去时：" class="headerlink" title="一般过去时："></a>一般过去时：</h2><blockquote>
<p>发生在过去的动作或存在的状态</p>
</blockquote>
<blockquote>
<p>主语 + was&#x2F;were + 其它</p>
</blockquote>
<blockquote>
<p>主语 + did(动词过去式） + 其它</p>
</blockquote>
<p>时标：</p>
<p>last night&#x2F;week&#x2F;month&#x2F;year,yesterday,</p>
<p>the day before yesterday,</p>
<p>时间段+ago… 多久以前 ，just now刚才</p>
<p>in+过去的年份，the other day前几天，</p>
<p>long before很久之前</p>
<h2 id="一般将来时："><a href="#一般将来时：" class="headerlink" title="一般将来时："></a>一般将来时：</h2><blockquote>
<p>将来发生的动作和状态</p>
</blockquote>
<blockquote>
<p>主语 + shall（主语为第一人称）&#x2F;will + V原 + 其它</p>
</blockquote>
<blockquote>
<p>主语 + am&#x2F;is&#x2F;are going to + V原 + 其它</p>
</blockquote>
<p>时标：</p>
<p>tomorrow,the day after tomorrow,</p>
<p>next week&#x2F;month&#x2F;year,</p>
<p>in the future,someday,before long,</p>
<p>in +将来的年份，in+时间段</p>
<h2 id="现在进行时："><a href="#现在进行时：" class="headerlink" title="现在进行时："></a>现在进行时：</h2><blockquote>
<p>现在此刻正在进行的动作</p>
</blockquote>
<blockquote>
<p>主语 + am&#x2F;is&#x2F;are + doing + 其它</p>
</blockquote>
<p>时标：</p>
<p>now,at present,at the moment,</p>
<p>for the time being</p>
<h2 id="过去进行时："><a href="#过去进行时：" class="headerlink" title="过去进行时："></a>过去进行时：</h2><blockquote>
<p>过去某个时刻正在进行的动作</p>
</blockquote>
<blockquote>
<p>主语 + was&#x2F;were + doing + 其它</p>
</blockquote>
<p>时标：</p>
<p>at this&#x2F;that time yesterday,</p>
<p>at this&#x2F;that moment yesterday,</p>
<p>at 8:00 yesterday,</p>
<p>from 8:00 to 10:00 yesterday,</p>
<h2 id="将来进行时："><a href="#将来进行时：" class="headerlink" title="将来进行时："></a>将来进行时：</h2><blockquote>
<p>将来某个时刻正在进行的动作</p>
</blockquote>
<blockquote>
<p>主语 + will be + doing + 其它</p>
</blockquote>
<p>时标：</p>
<p>at this&#x2F;that time tomorrow,</p>
<p>at this&#x2F;that moment tomorrow,</p>
<p>at 8:00 tomorrow,</p>
<h2 id="现在完成时："><a href="#现在完成时：" class="headerlink" title="现在完成时："></a>现在完成时：</h2><blockquote>
<p>表示发生在过去的动作对现在造成的影响</p>
</blockquote>
<blockquote>
<p>表示动作发生在过去一直持续到现在</p>
</blockquote>
<blockquote>
<p>主语 + have&#x2F;has done + 其它</p>
</blockquote>
<p>时标：</p>
<p>already 已经 ，yet 已经（用在问句）</p>
<p>not…yet还没有，ever曾经</p>
<p>never 从未，just刚刚</p>
<p>before以前（常用句尾）</p>
<h2 id="现在完成进行时："><a href="#现在完成进行时：" class="headerlink" title="现在完成进行时："></a>现在完成进行时：</h2><blockquote>
<p>表示动作或状态从过去持续到现在并且继续持续下去</p>
</blockquote>
<blockquote>
<p>主语 + have&#x2F;has been doing + 其它</p>
</blockquote>
<p>时标：</p>
<p>already 已经 ，yet 已经（用在问句）</p>
<p>not…yet还没有，ever曾经</p>
<p>never 从未，just刚刚</p>
<p>before以前（常用句尾）</p>
<h2 id="过去完成时："><a href="#过去完成时：" class="headerlink" title="过去完成时："></a>过去完成时：</h2><blockquote>
<p>动作发生在过去的过去</p>
</blockquote>
<blockquote>
<p>主语 + had done + 其它</p>
</blockquote>
<p>时标：</p>
<p>by&#x2F;till&#x2F;until +过去时间 （到。。。时）</p>
<p>by the end of +过去时间 （到。。。末）</p>
<p>by the time + 一般过去时句子 （到。。。时）</p>
<p>before + 过去时间&#x2F;一般过去时句子 （在。。。之前）</p>
<h2 id="将来完成时："><a href="#将来完成时：" class="headerlink" title="将来完成时："></a>将来完成时：</h2><blockquote>
<p>在将来的某个时间或动作之前已经完成的动作</p>
</blockquote>
<blockquote>
<p>主语 + will&#x2F;shall have done + 其它</p>
</blockquote>
<p>时标：</p>
<p>by&#x2F;till&#x2F;until +将来时间 （到。。。时）</p>
<p>by the end of +将来时间 （到。。。末）</p>
<p>by the time + 一般现在时句子 （到。。。时）</p>
<p>before + 将来时间&#x2F;一般现在时句子 （在。。。之前）</p>
<h2 id="过去将来时："><a href="#过去将来时：" class="headerlink" title="过去将来时："></a>过去将来时：</h2><blockquote>
<p>站在过去看将来</p>
</blockquote>
<blockquote>
<p>主语 + would do + 其它</p>
</blockquote>
<blockquote>
<p>主语 + was&#x2F;were going to do + 其它</p>
</blockquote>
<p>时标：</p>
<p>the next day&#x2F;week&#x2F;month&#x2F;year</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>被动语态</title>
    <url>/2022/09/11/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-11-%E8%A2%AB%E5%8A%A8%E8%AF%AD%E6%80%81/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/39373041-8cb5-444b-bb9f-909088932b7a.jpg"></p>
<h2 id="不同时态的主被动："><a href="#不同时态的主被动：" class="headerlink" title="不同时态的主被动："></a>不同时态的主被动：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1ad0a078-1b18-4184-be47-3210cec7facd.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0364ace2-43fa-4d07-bc43-b933ac9f6afb.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/94f7f559-ae65-4860-8d01-fcec2443dea5.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="情态动词的被动语态："><a href="#情态动词的被动语态：" class="headerlink" title="情态动词的被动语态："></a>情态动词的被动语态：</h2><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/03132424-5baf-4bc9-8d7a-61992abcd449.png" style="zoom:150%;" />

<h2 id="无被动的情况："><a href="#无被动的情况：" class="headerlink" title="无被动的情况："></a>无被动的情况：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7264d256-dd6b-4a8d-a2ed-62d3306ebe98.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0da5a158-e9fa-4403-a086-c7dad009b82d.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e438a612-578c-44bf-b413-70c9ee43b6d0.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4ae308e8-691a-4853-a953-b175be93f91c.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/61f45f08-fa59-402f-89bf-1c551471202a.png" style="zoom:150%;" /></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c34b8c97-82ab-45a7-b0d1-ec62244d87b2.jpg"></td>
</tr>
</tbody></table>
<h2 id="主动表被动："><a href="#主动表被动：" class="headerlink" title="主动表被动："></a>主动表被动：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f7a771d6-6e1f-41b6-91bf-9721f20e801a.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7dd6a923-e63a-4d70-9a55-4d633b6c12f6.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b4f29303-62ee-491e-bd1c-3c93b4993036.jpg"></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>倒装</title>
    <url>/2022/09/12/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-12-%E5%80%92%E8%A3%85/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="倒装基本概念："><a href="#倒装基本概念：" class="headerlink" title="倒装基本概念："></a>倒装基本概念：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3e2e41079ce308da5f0829ba24f7860.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/fbdff7f7c2e43b36fe589135e0c3d8d.jpg"></th>
</tr>
</thead>
</table>
<h2 id="全倒装："><a href="#全倒装：" class="headerlink" title="全倒装："></a>全倒装：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a8d1450995d2276056ffc4f69c76d0f.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/45ad3c9e277a1a061092e239af10485.jpg"></th>
</tr>
</thead>
</table>
<blockquote>
<p>什么时候倒，怎么倒</p>
</blockquote>
<h2 id="半倒装："><a href="#半倒装：" class="headerlink" title="半倒装："></a>半倒装：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/268c6fc5ab61ef2b26e1156217cd716.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3c38164dc61ac22a00507a952473f79.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ddbc8611440eaca954e29cef3171b37.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/fb5af70af86dd3a827f95c591517ba3.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3dac627422fe64adcdecc14aaea7060.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1a48180700891f796495978b2f070ab.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b10e9b5e64f66bf3d1f548e59313e31.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8149963ca6352c1fdd41789c94ddceb.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ce9c6995cc3868b06e5c13ff6308c58.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e06776dbece507ef77b55776ee299b9.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4cf9900a17b17ff5ebd07936ae296b5.jpg"></td>
<td></td>
</tr>
</tbody></table>
<ol>
<li><p>否定意义的副词或短语在句首</p>
</li>
<li><p>if引导的虚拟语气</p>
</li>
<li><p>固定搭配（三个前导，俩个后导）</p>
</li>
<li><p>be&#x2F;助&#x2F;情提到主语前</p>
</li>
<li><p>were&#x2F;should&#x2F;had提到主语前</p>
</li>
<li><p>同上，只是导的部分在句子不同位置</p>
</li>
</ol>
<h2 id="形式倒装："><a href="#形式倒装：" class="headerlink" title="形式倒装："></a>形式倒装：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/97278545ba3f3cf84fe875d0c099c21.jpg"></p>
<h2 id="用于回答的so-neither-x2F-nor的用法："><a href="#用于回答的so-neither-x2F-nor的用法：" class="headerlink" title="用于回答的so,neither&#x2F;nor的用法："></a>用于回答的so,neither&#x2F;nor的用法：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/41083347269523682afd662b86af286.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6e4a6c366d39dbab7dce5f38b762c70.jpg"></th>
</tr>
</thead>
</table>
<blockquote>
<p>第一个结构中，除了助动词外，be动词，情态动词也行</p>
</blockquote>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟语气</title>
    <url>/2022/09/13/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-13-%E8%99%9A%E6%8B%9F%E8%AF%AD%E6%B0%94/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8eddbbddfc53927d8c205dd198033cd.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/be17426d52bd68166894f170602ebf6.jpg"></th>
</tr>
</thead>
</table>
<blockquote>
<p>表示不可能发生的，要关注句子的动词，一般用过去时 </p>
</blockquote>
<h2 id="一，用过去式表虚拟："><a href="#一，用过去式表虚拟：" class="headerlink" title="一，用过去式表虚拟："></a>一，用过去式表虚拟：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a83b5a1b386dee2a98edb236075d8ad.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/364e369e927a34330dbe96470c53c60.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f210f0e890c8a965a7147deb306a53b.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/43b9ef63163e645fd37f032dd2e597c.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f8e4fe695383d44060c390bf784bb06.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/bb7f8fce30376a81d8e1ecddd68a068.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e4af977ae1fcac677049a5182d42cd8.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h3 id="含蓄虚拟语气"><a href="#含蓄虚拟语气" class="headerlink" title="含蓄虚拟语气"></a>含蓄虚拟语气</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7cde192cbc60aca801518b462aa6888.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8f82a2feda7c40ffd9b4db5c47a09cb.jpg"></th>
</tr>
</thead>
</table>
<h3 id="固定搭配"><a href="#固定搭配" class="headerlink" title="固定搭配"></a>固定搭配</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2cd11f9b97b8acef64e0bdce191144f.jpg" style="zoom: 33%;" /></th>
</tr>
</thead>
</table>
<h3 id="特殊句型-1"><a href="#特殊句型-1" class="headerlink" title="特殊句型-1"></a>特殊句型-1</h3><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4b439b3123c6aa6416a9a98cbd5a801.jpg" style="zoom:33%;" />



<h3 id="特殊句型-2"><a href="#特殊句型-2" class="headerlink" title="特殊句型-2"></a>特殊句型-2</h3><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8b12d97b0c8a35ee98d8e7ae1615254.jpg" style="zoom:33%;" />

<h2 id="二，用should-do-表虚拟："><a href="#二，用should-do-表虚拟：" class="headerlink" title="二，用should do 表虚拟："></a>二，用should do 表虚拟：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f7daecfcb9110d18e5b4d62baa12e5d.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/70a9df59c0a6a2d77c7c3e7609043e6.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/dac1f3db6f8428837dffebbbea52d2c.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9729e498e401fa42df273128d0e4de6.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e30c59d73270f0b90f4c27e7fdd7929.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8cfc18df355a2cc630996e3f1f60d0e.jpg"></td>
</tr>
</tbody></table>
<h2 id="三，用”情态动词-have-done-“表对过去的虚拟："><a href="#三，用”情态动词-have-done-“表对过去的虚拟：" class="headerlink" title="三，用”情态动词+have done “表对过去的虚拟："></a>三，用”情态动词+have done “表对过去的虚拟：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e6be1a582998f69cb30e06365c61f75.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/83ded547facc8de48ac451bcc1a3102.jpg"></th>
</tr>
</thead>
</table>
<blockquote>
<p>may&#x2F;minght 表可能性大小，may表可能性很小，minght表的可能性更小。（minght是may 的过去式}</p>
<p>should与ought to</p>
</blockquote>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>定语从句</title>
    <url>/2022/09/15/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-15-%E5%AE%9A%E8%AF%AD%E4%BB%8E%E5%8F%A5/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="基本概念："><a href="#基本概念：" class="headerlink" title="基本概念："></a>基本概念：</h2><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e26b1ad3-2d23-4ebd-b972-6fa4b6b41824.png" style="zoom:200%;" />

<h2 id="关系词："><a href="#关系词：" class="headerlink" title="关系词："></a>关系词：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/fe7ef94a-18ce-4805-99d7-0a268e788aad.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/dfa1535d-cdb4-4d4b-b7a1-99be140e4017.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3ce50676-2b67-4d12-bbe2-25ffa0346ea0.png" style="zoom:200%;" /></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/35fde886-9eb3-4afa-a8ce-d89c632a6323.jpg"></td>
</tr>
</tbody></table>
<p>判断从句缺不缺宾语，就在从句后加sth&#x2F;sb看合不合适。及物动词表示缺，不及物动词表示不缺。</p>
<h2 id="定语从句分类："><a href="#定语从句分类：" class="headerlink" title="定语从句分类："></a>定语从句分类：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b645a793-67cd-42a2-a425-7fd7ad604c47.jpg"></p>
<h2 id="关系词的特殊用法："><a href="#关系词的特殊用法：" class="headerlink" title="关系词的特殊用法："></a>关系词的特殊用法：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/79b62b41-807a-498f-9f94-13982b16b35b.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c231ddab-fa90-4429-925f-a5bc24ce6892.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/97964ddd-dd24-4cb1-a101-bb79ecef5a37.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e25f1069-700e-4906-8dca-3e902bdb8721.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7979f2fa-1395-43c3-9a5d-35f2d446ec80.png" style="zoom:150%;" /></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b859e3f9-8f70-468a-a419-f61a6d19ac08.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/30f2ff1d-70aa-4692-b70f-6b830298677e.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f342e274-07f6-44e3-8890-7effcf1b35c1.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/af0719e1-d79d-474d-9751-6f7a8ec061ab.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f6ac8829-c66b-48da-ab1d-78251d1b9d6f.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/71c03f50-b9cb-46c2-aa2b-85cb46e33d55.png" style="zoom:200%;" /></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ffd137f8-08a5-43b5-984e-ff135db35e0f.jpg"></td>
</tr>
</tbody></table>
<h2 id="定从中的特殊用法："><a href="#定从中的特殊用法：" class="headerlink" title="定从中的特殊用法："></a>定从中的特殊用法：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/06740ade-8224-4c14-968c-9a86c2763e8d.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a7d64687-3ffd-40b7-9f5c-72033ab0ea23.jpg"></th>
</tr>
</thead>
</table>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>名词性从句</title>
    <url>/2022/09/16/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-16-%E5%90%8D%E8%AF%8D%E6%80%A7%E4%BB%8E%E5%8F%A5/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="一，基本概念"><a href="#一，基本概念" class="headerlink" title="一，基本概念"></a>一，基本概念</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/709fa3c700d45f7f62a565cba512353.jpg" alt="0"></th>
<th></th>
</tr>
</thead>
</table>
<h2 id="二，连接词"><a href="#二，连接词" class="headerlink" title="二，连接词"></a>二，连接词</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d623fd7d36554e573cb3833e0cc8d9a.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c7d41448626479615536202ce299d64.jpg"></th>
</tr>
</thead>
</table>
<blockquote>
<p>在句首表是否只能用whether</p>
</blockquote>
<h2 id="三，主语从句"><a href="#三，主语从句" class="headerlink" title="三，主语从句"></a>三，主语从句</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f0baa22d3c2327278b5082dbbefe3ec.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a8c16990706cd89b5a6061b3af20637.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5a5b48f1397afdef3d80de8c2c2ebe0.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="四，宾语从句"><a href="#四，宾语从句" class="headerlink" title="四，宾语从句"></a>四，宾语从句</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8f2379ca309137a1bee8016ac2494a9.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5e943fafbf331cb0969774155084b34.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ec28e8ddd51ec587bfe8499edb9663d.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d9c5225f3cd5876977c438d441928d6.jpg"></td>
</tr>
</tbody></table>
<h2 id="五，表语从句"><a href="#五，表语从句" class="headerlink" title="五，表语从句"></a>五，表语从句</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/92cf46328bb09b326093594db526776.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c5ef32fa520aa71546297ff76fe1940.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/300681f3bfb9696fd30498edb8c94a8.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="六，同位语从句"><a href="#六，同位语从句" class="headerlink" title="六，同位语从句"></a>六，同位语从句</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/328fd083692cda1046aa17a25e687c0.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/761d3f7318774f2f967d88e762aaca0.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a0252f29c9a37df4c1739539a7c6451.jpg"></td>
<td></td>
</tr>
</tbody></table>
<blockquote>
<p>补充：suggestion 建议</p>
</blockquote>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>非谓语动词</title>
    <url>/2022/09/14/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-14-%E9%9D%9E%E8%B0%93%E8%AF%AD%E5%8A%A8%E8%AF%8D/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="非谓语动词基本概念"><a href="#非谓语动词基本概念" class="headerlink" title="非谓语动词基本概念"></a>非谓语动词基本概念</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/02868535131148163da7d78963006ae.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/67ada90be3a1f9328a395277e2f979b.jpg"></th>
</tr>
</thead>
</table>
<blockquote>
<p>to do 表目的，为了</p>
</blockquote>
<h2 id="作状语"><a href="#作状语" class="headerlink" title="作状语"></a>作状语</h2><h3 id="考点一——–空前没有名词和代词"><a href="#考点一——–空前没有名词和代词" class="headerlink" title="考点一——–空前没有名词和代词"></a>考点一——–空前没有名词和代词</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ac4d070321935a35d29fd3fe4478735.jpg"></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/08fc8cd4f45e5ba4e7c3580c4c87eb0.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/08c02af37f5657178b1cbff83b112ff.jpg"></td>
</tr>
</tbody></table>
<blockquote>
<p>非谓语动词与句子主语之间的关系</p>
</blockquote>
<h3 id="考点二——–空前有名词和代词"><a href="#考点二——–空前有名词和代词" class="headerlink" title="考点二——–空前有名词和代词"></a>考点二——–空前有名词和代词</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e964dac45a5ea9e2bc39abe0b47e582.jpg"></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b0244a43ced0c333b7ddc951473d61d.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3175a55999ce68a72363a15c0b51723.jpg"></td>
</tr>
</tbody></table>
<h3 id="考点三——–表主-x2F-被动时且句子完成（有先后顺序）"><a href="#考点三——–表主-x2F-被动时且句子完成（有先后顺序）" class="headerlink" title="考点三——–表主&#x2F;被动时且句子完成（有先后顺序）"></a>考点三——–表主&#x2F;被动时且句子完成（有先后顺序）</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cef15de776a8bdd1ca4db16b90891b8.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/df3e6a86d6cf4d42684685ba2757629.jpg"></th>
</tr>
</thead>
</table>
<h3 id="考点四——–否定形式"><a href="#考点四——–否定形式" class="headerlink" title="考点四——–否定形式"></a>考点四——–否定形式</h3><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ea7cefff7e4d417d4ecb730e8045974.jpg" style="zoom:33%;" />

<h3 id="考点五——–there-be的非谓语形式"><a href="#考点五——–there-be的非谓语形式" class="headerlink" title="考点五——–there be的非谓语形式"></a>考点五——–there be的非谓语形式</h3><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8f78c4d42b56806218b9ae74b494945.jpg" style="zoom: 25%;" />

<h3 id="考点六——–表出乎意料的结果"><a href="#考点六——–表出乎意料的结果" class="headerlink" title="考点六——–表出乎意料的结果"></a>考点六——–表出乎意料的结果</h3><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6aaa4d0208b5850e153bbd5e2aa06fb.jpg" style="zoom: 33%;" />

<h2 id="作主语"><a href="#作主语" class="headerlink" title="作主语"></a>作主语</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2bd3948adf660fc5c833ebecd9da364.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d7f99f3fb52cd90944d2cab1f2e0d4c.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8d0eb48b2131dc3e3a521e9b907bdf7.jpg"></td>
<td></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0c4f41aadc33edaf10ba37c344ae089.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/75b8441462fa12c5dfc9aea1ef7c2b3.jpg"></td>
</tr>
</tbody></table>
<h2 id="作表语"><a href="#作表语" class="headerlink" title="作表语"></a>作表语</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cf31b81f3c1f7a8605417fcf57f9021.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/535d5a3434b7535e1542a8cddf873ec.jpg"></th>
</tr>
</thead>
</table>
<h2 id="作宾语"><a href="#作宾语" class="headerlink" title="作宾语"></a>作宾语</h2><h3 id="作动宾"><a href="#作动宾" class="headerlink" title="作动宾"></a>作动宾</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b12a585c671345efa53e81e1de3e1cc.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ea9cdfe4bfae27948760bf22ef5cd93.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/27bbb0a03b8d6798e15c925e4f06978.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6d7299e1f0e3c185d45127ba70fbc3d.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9431fa0b1ee70c3466ba48ca484e950.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7bcd139c0412123a850bbbca8eb0d20.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/872d132ad42e8f956a79413358558a2.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2abf28201f57aaa89caa5bf3b17d766.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7ee10dc27cad20028f4ff5abdbe1a4b.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h3 id="作介宾"><a href="#作介宾" class="headerlink" title="作介宾"></a>作介宾</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/988ea72f5b82417169d80a061de720b.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3c4d79ba812ab4437828c2ba04ac579.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9341fdf7f2ad6429c54b9218dc206e4.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/aa14df23dd43e2a117ff354a435ca94.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/95288413890174750235164f7b68635.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="做补语"><a href="#做补语" class="headerlink" title="做补语"></a>做补语</h2><h3 id="宾语补足语"><a href="#宾语补足语" class="headerlink" title="宾语补足语"></a>宾语补足语</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1e2fabf04420c2fd0538d6d1919490e.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c3876079ddd256d49cedf6358041d98.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/55358c0c84d99e5cf90c76d1950e588.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/94f32d59dfabce09d66bba5f29e2a84.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/be5670ecbbf76909a377858e5a8bd56.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/572063cffd37ca4a1eaca3da06ef19e.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9bb5824c8553d29f46f97ac92b6a77b.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/105c84a2b29d07881cb5dc0db23fd3a.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9735d32b7094891d511a596a3c5662e.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h3 id="主语补足语"><a href="#主语补足语" class="headerlink" title="主语补足语"></a>主语补足语</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/471b51a6b04b4855e5718920a9f667c.jpg"></p>
<h2 id="做定语"><a href="#做定语" class="headerlink" title="做定语"></a>做定语</h2><h3 id="前置定语"><a href="#前置定语" class="headerlink" title="前置定语"></a>前置定语</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9d304f75c315511b642e2c3ecc23b58.jpg"></p>
<h3 id="后置定语"><a href="#后置定语" class="headerlink" title="后置定语"></a>后置定语</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1638f6d220921d34a5f8a984cac6468.jpg"></p>
<h3 id="特殊情况"><a href="#特殊情况" class="headerlink" title="特殊情况"></a>特殊情况</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f450f4cc23f17c0199ebee8acc3bb5a.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5270bc4015aa9d6e329c0c4ba7df7b5.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9fc7d2ca0892f0fe28ed8de11c7c1b8.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/25bc2f74a606c8cc586d57d0c52ae48.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b9e75e193c054054aa8cf16507ec376.jpg"></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>状语从句</title>
    <url>/2022/09/17/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-17-%E7%8A%B6%E8%AF%AD%E4%BB%8E%E5%8F%A5/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/231d2c258f20bd22febdf9c16ff71f8.jpg"></p>
<hr>
<h2 id="时间状语从句"><a href="#时间状语从句" class="headerlink" title="时间状语从句"></a>时间状语从句</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6e740660fa8111ed072b73cf5c704cb.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/585e500b2f52d304c41d8a10d497b97.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a019a2c50e0232570a53521db25e127.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/46d29353f02579c4f079561b13038a9.jpg"></td>
</tr>
</tbody></table>
<hr>
<h2 id="地点状语从句"><a href="#地点状语从句" class="headerlink" title="地点状语从句"></a>地点状语从句</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4dfa3012593798ed94e039b7b902b66.jpg"></p>
<blockquote>
<p>you should put things where you can find them again<br>你应该把东西放在你能再找到的地方</p>
</blockquote>
<hr>
<h2 id="条件状语从句"><a href="#条件状语从句" class="headerlink" title="条件状语从句"></a>条件状语从句</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c99e3302901b20013ef87ecfe15fe64.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0eea7ce9edf429b16af8116c326a584.jpg"></th>
</tr>
</thead>
</table>
<hr>
<h2 id="原因状语从句"><a href="#原因状语从句" class="headerlink" title="原因状语从句"></a>原因状语从句</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2f49a730c3afcb08f5e94d0b9422570.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d5ce66ebba1cdb2620ac361e31d2037.jpg"></th>
</tr>
</thead>
</table>
<hr>
<h2 id="目的状语从句"><a href="#目的状语从句" class="headerlink" title="目的状语从句"></a>目的状语从句</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5f0a2db7761e8280871d566c022d1e4.jpg"></p>
<hr>
<h2 id="结果状语从句"><a href="#结果状语从句" class="headerlink" title="结果状语从句"></a>结果状语从句</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3dfd1e55f3016ffa22e9142ae3c0ae8.jpg"></p>
<hr>
<h2 id="让步状语从句"><a href="#让步状语从句" class="headerlink" title="让步状语从句"></a>让步状语从句</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c76486b63b8f31d788322f0e408ec38.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/88964d71eea37198a84bb3975a3da84.jpg"></th>
</tr>
</thead>
</table>
<hr>
<h2 id="方式状语从句"><a href="#方式状语从句" class="headerlink" title="方式状语从句"></a>方式状语从句</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/656190d842c933bf45667ace1c69058.jpg"></p>
<hr>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0077a2d2899161ce9c72e522785060c.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b02ee1448c6148c90d71cd40926da85.jpg"></th>
</tr>
</thead>
</table>
<hr>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>反意疑问句</title>
    <url>/2022/09/18/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-18-%E5%8F%8D%E6%84%8F%E7%96%91%E9%97%AE%E5%8F%A5/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="反意疑问句基本概念："><a href="#反意疑问句基本概念：" class="headerlink" title="反意疑问句基本概念："></a>反意疑问句基本概念：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a7bb487ec1e99888fe263f8ced414b8.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e36a77bc8c4861aba5a88a4542fe7d5.jpg"></th>
</tr>
</thead>
</table>
<h2 id="祈使句的反意疑问句："><a href="#祈使句的反意疑问句：" class="headerlink" title="祈使句的反意疑问句："></a>祈使句的反意疑问句：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a5d30df392790bf62a87e5ed799f6fe.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f855432624fcea5f6a139dff2490653.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e9f1ad3dc585b3dc6c82ada3f0f282e.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="主从复合句的反意疑问句"><a href="#主从复合句的反意疑问句" class="headerlink" title="主从复合句的反意疑问句"></a>主从复合句的反意疑问句</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7c792097e646cf8cfd88e4d1b22d690.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/51f10faa0884e9b72294d2d877216ae.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0f0c2cc028019ade77d7cb1fb3ea5e1.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4df2ade2a5b41a7b05cda4675afcb3c.jpg"></td>
</tr>
</tbody></table>
<h2 id="陈述部分为否定时，反问部分用肯定"><a href="#陈述部分为否定时，反问部分用肯定" class="headerlink" title="陈述部分为否定时，反问部分用肯定"></a>陈述部分为否定时，反问部分用肯定</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f15f1ab03d000ce1a340e11709b1ab4.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3eb0ae209149b0ba3fa18122ad7d944.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7029e542cd80eea44fc18f1d51f5a9c.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="陈述部分为感叹句，反问部分用一般现在时，且动词用be动词"><a href="#陈述部分为感叹句，反问部分用一般现在时，且动词用be动词" class="headerlink" title="陈述部分为感叹句，反问部分用一般现在时，且动词用be动词"></a>陈述部分为感叹句，反问部分用一般现在时，且动词用be动词</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f184cdad9bb6fe70816aa52e98a6d8a.jpg"></p>
<h2 id="特殊的反意疑问句"><a href="#特殊的反意疑问句" class="headerlink" title="特殊的反意疑问句"></a>特殊的反意疑问句</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4c3eed158887764a8047f9a29b8fc2f.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7d32cf67ebaaee49acd75a28fcf3f3c.jpg"></th>
</tr>
</thead>
</table>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>主谓一致</title>
    <url>/2022/09/19/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-19-%E4%B8%BB%E8%B0%93%E4%B8%80%E8%87%B4/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<h2 id="三个原则："><a href="#三个原则：" class="headerlink" title="三个原则："></a>三个原则：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5cbca65237d8cf44259fc6f12b4453b.jpg"></p>
<h2 id="单一主语："><a href="#单一主语：" class="headerlink" title="单一主语："></a>单一主语：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c5097304ab57511ebb1ead5b4d1ccd1.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ed3d5d32c540279ff840f1b436519f1.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2bf70b96232250303415ef76850e5f5.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cc164d5e054316abc03adb0fefc17e1.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3b277c0e239dec422f343a3a153744b.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/77874f8e9c963f53528e80c1d52dfc6.jpg"></td>
</tr>
</tbody></table>
<h2 id="并列结构作主语："><a href="#并列结构作主语：" class="headerlink" title="并列结构作主语："></a>并列结构作主语：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/da3bfa42d784f5b41eaba8cedff7609.jpg"></p>
<h2 id="其它情况："><a href="#其它情况：" class="headerlink" title="其它情况："></a>其它情况：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5e3d5d9fb0c771cb3dd0333bb72d0d0.jpg"></p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>强调句型及it用法</title>
    <url>/2022/09/20/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/2022-09-20-%E5%BC%BA%E8%B0%83%E5%8F%A5%E5%9E%8B%E5%8F%8Ait%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<p>我的英语专升本笔记</p>
<span id="more"></span>

<p>如何判断是不是强调句：</p>
<blockquote>
<p>强调句结构去掉不影响句意</p>
</blockquote>
<p>啥是一般疑问句</p>
<blockquote>
<p>就是be动词放到主语前</p>
</blockquote>
<h2 id="强调句型："><a href="#强调句型：" class="headerlink" title="强调句型："></a>强调句型：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a4ca09ab88c7124ffac9be792a39557.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/01b4238c1983140114364e90d2b217a.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7c31574098816ada1873111d65c2d56.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/367099c75ffdfe0309dc901b3c58909.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/09a43d29ba61dd49ef7adbccc1065d2.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="强调句的一般疑问语形式："><a href="#强调句的一般疑问语形式：" class="headerlink" title="强调句的一般疑问语形式："></a>强调句的一般疑问语形式：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a3a082f8db8c3a9562b667fbd44d044.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/baf6bd1b1b5e2d2c15250ed8ac9adb8.jpg"></th>
</tr>
</thead>
</table>
<h2 id="it的基本用法："><a href="#it的基本用法：" class="headerlink" title="it的基本用法："></a>it的基本用法：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4a543fc6aa2031d1c819114d58174cb.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cb48b3834017eaca959b8c025d08a74.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b3a5ee4a73e6f8637814ef8500dd9e7.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/df4e8c4095b9057695991fb42990bed.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9c919ddd05de82a55949cc19afb3633.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/45d5580c0a3db2d2d08d97060826e26.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8d190fc344da627aea99ca995bd586d.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7281dda8d1d8241de1393d8aad2a445.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6edac375370b4f4bfba5cc7c2ecc271.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d208c60f86d8643e5b48d5d0b09563d.jpg"></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语语法</tag>
      </tags>
  </entry>
  <entry>
    <title>函数</title>
    <url>/2022/10/01/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-01-%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="大分类："><a href="#大分类：" class="headerlink" title="大分类："></a>大分类：</h2><p>1.具体函数</p>
<p>2.抽象函数（没有表达式的函数）</p>
<h2 id="小分类："><a href="#小分类：" class="headerlink" title="小分类："></a>小分类：</h2><h3 id="1-常函数："><a href="#1-常函数：" class="headerlink" title="1.常函数："></a>1.常函数：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2585a857-7b01-4b1c-83b2-0e932be498e9.jpg"></p>
<h3 id="2-幂函数："><a href="#2-幂函数：" class="headerlink" title="2.幂函数："></a>2.幂函数：</h3><p>分类：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5069981d-f3c2-4f90-87c0-ddba065bde5f.jpg"></p>
<p>性质：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/54183ae1-91b5-4547-b1a7-26714945e772.png"></p>
<h3 id="3-指数函数："><a href="#3-指数函数：" class="headerlink" title="3.指数函数："></a>3.指数函数：</h3><p>分类：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2e606b8e-d381-485f-a821-3c924a3c7e26.jpg"></p>
<p>性质：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/de193c0a-62ab-4cf6-846e-4b0736ef2033.jpg"></p>
<h3 id="4-对数函数："><a href="#4-对数函数：" class="headerlink" title="4.对数函数："></a>4.对数函数：</h3><p>分类：</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/10001.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5b6495ea-b44d-4a85-ba46-7484fcc8a372.jpg"></th>
</tr>
</thead>
</table>
<p>性质：</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/26990f95-f7b5-420f-9536-f87100f294f5.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/40acda9e-da90-4110-a695-5135df79029e.jpg"></th>
</tr>
</thead>
</table>
<h3 id="5-三角函数："><a href="#5-三角函数：" class="headerlink" title="5.三角函数："></a>5.三角函数：</h3><p>分类：</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/75e8bea2-adcb-43d6-9fdd-e9e3300035ca.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/230c623e-76ce-487d-8726-87e380678d09.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a659e666-1395-41d2-9e37-055b95f0606d.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9a313c11-ba2f-44bc-a783-665af41bc1c4.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0cbeeca3-8267-481f-8647-5ec4bb1a1296.jpg"></td>
<td></td>
</tr>
</tbody></table>
<p>性质：</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c1e0ccde-4f62-43b0-acb4-067f7d12477d.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/377f9a4a-606e-4dc9-942d-b487fbb8d587.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/44d65abd-b469-4427-a82b-f1a0260c2987.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ab189825-62bd-441c-a888-63a0caa0c644.jpg"></td>
</tr>
</tbody></table>
<h2 id="求具体函数定义域："><a href="#求具体函数定义域：" class="headerlink" title="求具体函数定义域："></a>求具体函数定义域：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9dfa238f-5e5f-4388-b83c-1cf0f0a4dc96.jpg"></p>
<h2 id="求抽象函数定义域："><a href="#求抽象函数定义域：" class="headerlink" title="求抽象函数定义域："></a>求抽象函数定义域：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4c49fe85-60ff-4307-9fc9-43b7c867d4f6.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/40a984ad-760b-40a3-a034-76a335024c49.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c305b276-869e-4511-bb18-5dbc86e430c7.jpg"></td>
<td></td>
</tr>
</tbody></table>
<p>情况2，函数最高次方为偶次方，要把所给的定义域正负分开代入，奇次方，直接代入</p>
<h2 id="求函数解析式："><a href="#求函数解析式：" class="headerlink" title="求函数解析式："></a>求函数解析式：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ff01ae9e-7520-4589-a92a-94aaec463817.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/12c33b36-0a1b-4087-a2c9-54537f8776be.jpg"></th>
</tr>
</thead>
</table>
<p>这是第四种情况，前几种直接用换元法和配凑法就可以了</p>
<h2 id="奇偶性："><a href="#奇偶性：" class="headerlink" title="奇偶性："></a>奇偶性：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ab1a5d63-0777-4582-988b-8158373edb4b.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3e3f29fa-d547-4088-a898-0c7b564d51ea.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f35d1e17-8a0a-4d8c-a052-10425e076f05.jpg"></td>
<td></td>
</tr>
</tbody></table>
<p>1.奇奇偶，异非异奇</p>
<p>2.内偶则偶，内奇则外</p>
<h2 id="反函数："><a href="#反函数：" class="headerlink" title="反函数："></a>反函数：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/22fc66d8-034f-4f79-ba50-e6c49cfbd1eb.jpg"></p>
<h2 id="判断俩函数是否为同一函数："><a href="#判断俩函数是否为同一函数：" class="headerlink" title="判断俩函数是否为同一函数："></a>判断俩函数是否为同一函数：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/15f1c297-2981-45c8-8ba2-dc3ad1c916ca.jpg"></p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>极限</title>
    <url>/2022/10/02/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-02-%E6%9E%81%E9%99%90/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="基本概念："><a href="#基本概念：" class="headerlink" title="基本概念："></a>基本概念：</h2><p>1.极限存在的充要条件：左右极限存在且相等。</p>
<p>2.极限值是一个确定的数。</p>
<p>3.f（x）在X0处有极限与f（x）在X0处有定义无关。</p>
<p>4.计算极限时，如果能代入，代入即是极限值。</p>
<p>5.谁在极限符号下方谁是变量，其它当作常数。</p>
<p>6.<img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0781b369-09e0-4ac6-939c-b47693cae06e.jpg"></p>
<p>7.求极限时只有指数和arctanx区分正负无穷</p>
<h2 id="无穷大量与无穷小量："><a href="#无穷大量与无穷小量：" class="headerlink" title="无穷大量与无穷小量："></a>无穷大量与无穷小量：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/85a129da-ace5-49af-a54a-57018e27ef71.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/be99e9ae-ebcb-4743-a9ae-b9c53c86c159.jpg"></th>
</tr>
</thead>
</table>
<p>a.无穷小量和无穷大量需指明方向</p>
<p>b.常数中只有0在任何趋势下都是无穷小量</p>
<p>c.sinx和cosx是常见的有界函数，只有sin后面的未知数趋于无穷才是有界函数。</p>
<h2 id="等价无穷小代换："><a href="#等价无穷小代换：" class="headerlink" title="等价无穷小代换："></a>等价无穷小代换：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d4d7fcee-aa93-4e03-929a-b124bbf2aa6f.jpg"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/bf8060ab-9266-4f43-a12f-25562cb471d3.jpg"></p>
<h2 id="第一重要极限："><a href="#第一重要极限：" class="headerlink" title="第一重要极限："></a>第一重要极限：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/415b8b24-6962-4bf1-8189-59b2916632f9.jpg"></p>
<h2 id="第二重要极限："><a href="#第二重要极限：" class="headerlink" title="第二重要极限："></a>第二重要极限：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4c1de9c1-298d-43a8-b876-ce0a5c1cd245.jpg"></p>
<p>注意：该极限适用于1适用于1的无穷次方，做题时先构造e，再代公式。</p>
<h2 id="做极限题的一般步骤："><a href="#做极限题的一般步骤：" class="headerlink" title="做极限题的一般步骤："></a>做极限题的一般步骤：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b8c54087-35f1-4de6-8ac9-6fdd363abc54.jpg"></p>
<h2 id="求极限的方法汇总："><a href="#求极限的方法汇总：" class="headerlink" title="求极限的方法汇总："></a>求极限的方法汇总：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e5b4ef40-8fe5-47e9-b0de-8ec714eba41d.jpg"></p>
<h2 id="无穷小阶的比较："><a href="#无穷小阶的比较：" class="headerlink" title="无穷小阶的比较："></a>无穷小阶的比较：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/89e8ed2a-392a-4591-b75e-7d3066ae7bc0.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/49e92f2c-37c8-4a78-af3a-94536d059468.jpg"></th>
</tr>
</thead>
</table>
<p>注意：系数不为0，则为不等价（分子是分母的低或高阶）</p>
<h2 id="极限的性质："><a href="#极限的性质：" class="headerlink" title="极限的性质："></a>极限的性质：</h2><p>1.唯一性：极限存在必唯一</p>
<p>2.有界性：极限存在必有界，反之不对</p>
<p>3.收敛数列及其子列：收敛数列的子列都收敛，且极限值相同</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9c0e38fd-494f-49c0-a5a0-faede0b6906a.jpg"></p>
<p>4.保号性：</p>
<p>5.保序性：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6e913a26-e81a-46d9-8d7a-c40599b1868b.jpg"></p>
<h2 id="俩个收敛准则："><a href="#俩个收敛准则：" class="headerlink" title="俩个收敛准则："></a>俩个收敛准则：</h2><p>1.单调有界无穷函数必有极限：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/95b2e924-2020-48ae-91f9-4174a891f6de.jpg"></p>
<p>2.夹逼定理：</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5700d8a7-8b0f-4666-855d-ccd246759f3b.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/890cf8ed-c297-4b86-badb-7e6de23c9e06.jpg"></th>
</tr>
</thead>
</table>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/31667b8b-103b-41a7-b200-39298da9b11a.jpg"></p>
<h2 id="洛必达法则："><a href="#洛必达法则：" class="headerlink" title="洛必达法则："></a>洛必达法则：</h2><p>1.基本概念：</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5aa4a1ef-0b2f-470d-8a13-b761eef23060.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/504bae68-d029-4d14-9f16-4a37204a3b79.jpg"></th>
</tr>
</thead>
</table>
<p>2.适用范围：零比零，无穷比无穷，零比无穷（可以化为前面俩种形式）</p>
<h3 id="3-求U的V次方极限："><a href="#3-求U的V次方极限：" class="headerlink" title="3.求U的V次方极限："></a>3.求U的V次方极限：</h3><p>思路：</p>
<p>a.指数化（这时注意指数化之后，简单的做分母）</p>
<p>b.用洛必达</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/73bcabd6-5ad3-4446-99c3-cc299bceddf9.jpg"></p>
<p>4.变限积分（一定使用洛必达）</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b97cb789-db76-42ef-a553-48443fb86502.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/98ccf731-6b2b-4efb-b549-e25cedce8c32.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6a8a0892-5a2a-4cc8-adc5-498f03e9ecfb.jpg"></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>连续及间断</title>
    <url>/2022/10/03/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-03-%E8%BF%9E%E7%BB%AD%E5%8F%8A%E9%97%B4%E6%96%AD/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="基本概念："><a href="#基本概念：" class="headerlink" title="基本概念："></a>基本概念：</h2><p>连续函数的图像是一笔画成的线。</p>
<h2 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/97a969a2-29cd-49bd-999e-f1b5bb5c7dfa.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b8822bbf-1318-442f-b1b3-2203709bc04d.jpg"></th>
</tr>
</thead>
</table>
<h2 id="分段函数连续的俩种形式："><a href="#分段函数连续的俩种形式：" class="headerlink" title="分段函数连续的俩种形式："></a>分段函数连续的俩种形式：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e536389c-e9ba-4314-92f8-8da8c8379741.jpg"></p>
<h2 id="间断点及其分类："><a href="#间断点及其分类：" class="headerlink" title="间断点及其分类："></a>间断点及其分类：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/539ac4c5-5070-4be0-88eb-12af29d70b4e.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f985ef48-38d2-431e-b1ff-c490cc172803.jpg"></th>
</tr>
</thead>
</table>
<p>注意：</p>
<p>1.间断点就是f(x)定义域以外的点</p>
<p>2.只有分成左右极限去求的时候，才有可能是跳跃间断点</p>
<p>3.可去间断点和跳跃间断点统称第一类间断点</p>
<h2 id="闭区间上连续函数函数的性质："><a href="#闭区间上连续函数函数的性质：" class="headerlink" title="闭区间上连续函数函数的性质："></a>闭区间上连续函数函数的性质：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4a800f39-50e9-43b4-bb8b-c145a32f1b7c.jpg"></p>
<p>零点定理：</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e105edfc-791d-42e1-bcf6-444656f96711.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a6bd405d-2eab-4323-ba1a-f0a396ac6919.jpg"></th>
</tr>
</thead>
</table>
<h2 id="罗尔定理："><a href="#罗尔定理：" class="headerlink" title="罗尔定理："></a>罗尔定理：</h2><p>对于选择题直接找条件就行，对于证明题如下（注意与零点定理比较一下区别，题目中有俩问，一般第一问考的都是零点定理）：</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3895d24f-c261-4968-985b-d0f940120bc0.jpg"></p>
<p>判断连续：</p>
<p>1.找函数值的定义域，若包含所给区间则连续，反之，不连续，（分段函数除外）</p>
<p>2.找极限值与函数值，若相等则连续。</p>
<p>判断可导：</p>
<p>1.找导数的定义域，若包含所给区间则可导，反之，不不可导，（分段函数，带绝对值的函数除外）</p>
<p>2.找左导和右导，若相等着可导</p>
<p>3.尖端不可导：使绝对值等于0的点不可导</p>
<h3 id="构造辅助函数："><a href="#构造辅助函数：" class="headerlink" title="构造辅助函数："></a>构造辅助函数：</h3><p><strong>出题类型</strong></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/71ffee72-5b8c-4844-9138-1e7c7a9bffba.jpg"></p>
<p><strong>还原法</strong></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4ab5bbbc-a566-4e18-a3c4-69763b9fc680.jpg"></p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3c52e385-d079-4cb9-b56d-251b26b8f584.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f00aae04-3568-434a-a565-4cd43493ddda.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/dade0e6c-e647-4038-a906-4d8dfaf6b677.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9a5ef56b-b2e1-4294-b925-fc45e0203a47.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/84adecce-8e3e-4f70-bcfa-51012eb0eeb7.jpg"></td>
<td></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f56ffff7-f4dc-432a-ba7a-fd0516439e82.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f51b6f02-f571-40e8-bd11-90aad5646eb4.jpg"></td>
</tr>
</tbody></table>
<h2 id="拉格朗日定理："><a href="#拉格朗日定理：" class="headerlink" title="拉格朗日定理："></a>拉格朗日定理：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d5572341-1527-44c8-8a67-8d3360db82e5.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/81086b78-60bb-4ed8-857e-708b91032c28.jpg"></th>
</tr>
</thead>
</table>
<p>适用范围：证明连体不等式（俩个及俩个以上的不等式）和含俩个不同字母的式子。</p>
<p>要判断原函数的单调性,就要去求其导数的正负，（正为增，负为减），要求其导数的单调性，就要找导导函数的正负。</p>
<p><strong>出题类型</strong>:</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/72498691-fd51-4465-af42-2b370ee850cc.jpg"></p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7e35e381-1c93-4fd2-bb39-2a8789c7255a.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2fb6879c-0c84-42cd-9571-82ef5af071cd.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/29dbff31-c25e-4e8c-b797-41e04ab3c903.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/49327a42-28ad-4d9f-a027-810c1d4c167e.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/306605fe-a392-43e8-be6d-58de7bc3d43c.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ba756014-e53f-4dcb-8f06-8828af435273.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e41092af-0ad6-45f7-8658-13efb46174c4%20(1).jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/bf2fea8e-5985-44ce-926a-d20a73890314.jpg"></td>
</tr>
</tbody></table>
<p>中间拆开除于俩边相同的部分,定分子，换分母</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3fe04c4b-fae4-447a-a5f9-01d68655b952.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6f2516d3-95e0-4013-a60c-e4086b7ae9c4.jpg"></th>
</tr>
</thead>
</table>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>不定积分</title>
    <url>/2022/10/05/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-05-%E4%B8%8D%E5%AE%9A%E7%A7%AF%E5%88%86/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote>
<p>求不定积分，本质就是求导的逆运算</p>
</blockquote>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/bc008a42056d0119a9fc7f00802b127.jpg"></p>
<h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><ol>
<li><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b792f9ce7d8a8a353e143b8cd993391.jpg"></li>
</ol>
<p>2.<img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/31ba77ad24474946a7c8fff319cbf06.jpg"></p>
<p>3.<img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/025a359f64e6ea4a7cfaae60bd7eda1.jpg"></p>
<p>4.判断俩个函数的原函数是否相同？</p>
<p>法一：求导，求导结果一样即为相同；</p>
<p>法二：作差，作差结果为常数即为相同。</p>
<h2 id="不定积分性质和基本积分公式及常见凑微分"><a href="#不定积分性质和基本积分公式及常见凑微分" class="headerlink" title="不定积分性质和基本积分公式及常见凑微分"></a>不定积分性质和基本积分公式及常见凑微分</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/954a516c63f3f8e6160a5d5cde4906e.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a8711e4bfc6742960b7cf3f30137863.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/af1df8f60b29e1a236f5fe391aaffe0.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/50c3190a50711f3cf5034a5b05cd84f.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6ee0427fafbf0f14f2a4a07b2583eb5.jpg"></td>
<td></td>
</tr>
</tbody></table>
<p>注：1、数学中的sec即secant，正割的意思，其英式读法是[‘siːkənt]；美式读法是[‘siːkənt]。</p>
<p>2、csc就是cosecant，余割的意思，其英式读法是[‘kəʊ’siːkənt]；美式读法是[‘koʊ’siːkənt]。 </p>
<p>3、sin全拼是sine，正弦，其英式读法是[saɪn]；美式读法是[saɪn]。　</p>
<p>4、cos全拼是cosine，余弦，其英式读法是[‘kəʊsaɪn]；美式读法是[‘koʊsaɪn]。</p>
<p>5、cot全拼是cotangent，余切，其英式读法是[‘kəʊ’tændʒənt]；美式读法是[‘koʊ’tændʒənt]。</p>
<p>6、tan全拼是tangent，正切，其英式读法是[‘tændʒənt]；美式读法是[‘tændʒənt]。</p>
<hr>
<h2 id="分部积分的U，v排列规则和公式"><a href="#分部积分的U，v排列规则和公式" class="headerlink" title="分部积分的U，v排列规则和公式"></a>分部积分的U，v排列规则和公式</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/39d133def165327909710c609e26944.jpg"></p>
<h2 id="三角代换公式"><a href="#三角代换公式" class="headerlink" title="三角代换公式"></a>三角代换公式</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/51a16e478fbe2c96a915c650f5e84d5.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/86f0e3ad962a6652e2d154a343cb026.jpg"></th>
</tr>
</thead>
</table>
<hr>
<h2 id="example—第一类换元法"><a href="#example—第一类换元法" class="headerlink" title="example—第一类换元法"></a>example—第一类换元法</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/32cff5b2d4861d29508c0b892e92210.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6034b162110c5ee20d5388d6a4063ca.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f3653bbf3c9bc0cfdf8354f7430560b.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a5e7d8e312df927517b2af996bb82f2.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/85bd2753e328484624601d4a7d4aaa3.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7480c55dd6291316e431eb01c9f8ea6.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7257275708c3585eb152681c0ad2fbe.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e60dbd90d494bb1563b8a2b4f6fe000.jpg"></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d284eb36e5906bc643b7cd7bf910620.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/190cdca8bd6fa40cadd600bbc2f36b6.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1c11d177d9bc13e7f37ad4c2ec6a627.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9f58012e7f36cf76c9426ca9ae0e92e.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/47e4b5cf91bbeaa26895ca5d86c8a18.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d5b2cc1bc8ca5b8a4b67a73d2d7f454.jpg"></td>
</tr>
</tbody></table>
<hr>
<h2 id="example—第二类换元法"><a href="#example—第二类换元法" class="headerlink" title="example—第二类换元法"></a>example—第二类换元法</h2><blockquote>
<p>第二类换元去根号，不见平方直接套，见到平方用三角</p>
</blockquote>
<h3 id="凑法："><a href="#凑法：" class="headerlink" title="凑法："></a>凑法：</h3><ol>
<li>无理函数化为有理函数</li>
<li>倒代换(倒着的三角形更容易被打破)</li>
<li>三角代换</li>
</ol>
<h3 id="适用情况"><a href="#适用情况" class="headerlink" title="适用情况"></a>适用情况</h3><ul>
<li>根号下x的一次方，一般用1</li>
<li>x的二次方，一般用3</li>
</ul>
<blockquote>
<p>一般先令式子的一部分为t,再由t求出x的等价式</p>
</blockquote>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/866594b5c4e312ad05f76abcece15f8.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d883bcfd69c360c57fa1406079c336d.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7dfefe8272194c7728e1180fe5df4fd.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0c25f374b8e87851eb8f75ecd1b9b71.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/48bcf68d6ffcd7f67252998070a8f44.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2021906e41b00fcf1953a721e6a61cc.jpg"></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/87bbf58271fbb3cecdc98b52acbd0e3.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/78605b6f1f1b3087b18fef0b849308d.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/be40194fa6f0d3a9946ec0434764cfb.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1f2e691984fc89947908ad4a503453b.jpg"></td>
</tr>
</tbody></table>
<hr>
<h2 id="example—分部积分法"><a href="#example—分部积分法" class="headerlink" title="example—分部积分法"></a>example—分部积分法</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/db1dcf5927e1e937f50543a455434c0.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/317c115ae82658250e90e249f2506f2.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f4985cfba19bf842011af2bfb9f8617.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9ba4793ae15a497c552d83bc396c30b.jpg"></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>导数</title>
    <url>/2022/10/04/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-04-%E5%AF%BC%E6%95%B0/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="基本概念："><a href="#基本概念：" class="headerlink" title="基本概念："></a>基本概念：</h2><p>1.可导函数的图像是一笔画成的光滑的线</p>
<p>2.可导的充要条件是左右导数存在且相等</p>
<p>3.导数的形式要求：a.分子极限 b.分母趋于0 c.上下改变量一致 d.一动一静</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ec6248b0-1270-4a35-8f22-c6972cebc7e1.jpg"></p>
<p>4.可导一定连续，连续不一定可导，不连续一定不可导</p>
<p><strong>5.尖端（折点）不可导，（绝对值为0的点）</strong></p>
<p>6.求导计算，奇偶互换</p>
<p>7.<img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d10f82e5-3415-4052-9f92-dd7a1ef9845f.jpg"></p>
<h2 id="第1定义及其推论："><a href="#第1定义及其推论：" class="headerlink" title="第1定义及其推论："></a>第1定义及其推论：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/fc620e09-d072-4738-bf50-64d952249640.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/16eda823-6f89-4262-a10f-81d9351d872b.jpg"></th>
</tr>
</thead>
</table>
<h2 id="第2定义："><a href="#第2定义：" class="headerlink" title="第2定义："></a>第2定义：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/519ab948-ee6f-4404-a3a9-8d67fe5d3f4e.jpg"></p>
<h2 id="求导基本公式："><a href="#求导基本公式：" class="headerlink" title="求导基本公式："></a>求导基本公式：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/806b398f-94af-4054-ab2f-61541a9f55cf.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/60277efe-9aa6-46f6-962a-42176afeee3f.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/66f0c1d7-b46c-408a-8f41-89cce7ddcf36.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/94579de2-a44e-4dc7-8be1-632195614a51.jpg"></td>
</tr>
</tbody></table>
<h2 id="参数方程求导"><a href="#参数方程求导" class="headerlink" title="参数方程求导:"></a>参数方程求导:</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ba302805-9594-449c-97f4-0cadae7510d5.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ea8cf087-ee25-451d-9b99-96a010301c0e.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/14146279-2b00-452d-8a75-247a77a39012.jpg"></td>
</tr>
</tbody></table>
<h2 id="隐函数求导"><a href="#隐函数求导" class="headerlink" title="隐函数求导:"></a>隐函数求导:</h2><p>隐函数定义：由方程F（x，y）&#x3D;0所确定的函数</p>
<p>方法：<img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c34957cd-9618-416c-bd8b-f28ba52a5c80.jpg"></p>
<p><strong>法一：直接求导法</strong></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e2b961e2-e3cb-43de-8742-f8ae916bc060.jpg"></p>
<p><strong>法二：公式法</strong></p>
<p>偏导：对谁求偏导，谁是变量，其它当作常数</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4300e2fb-8d7a-4981-a994-6c9290121489.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/034afc5f-8d85-47d2-9231-9f7f77ff1f3d.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/92e2da2e-4cc9-4fc5-8983-89b73c7ea9bb.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="对数求导法"><a href="#对数求导法" class="headerlink" title="对数求导法:"></a>对数求导法:</h2><p>适用范围：1.u的v次方 2.复杂的连乘或分式</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f2c0730d-74d1-46a6-8818-d066ea1860c7.jpg"></p>
<h2 id="分段函数求导"><a href="#分段函数求导" class="headerlink" title="分段函数求导:"></a>分段函数求导:</h2><p>注意：看在不在<strong>分段点</strong>（分界点就是指自变量从这一点起需要带入到新的表达式进行计算的临界点.一般是一个表达式的终点以及下一个表达式的起始点，表现在图像上,可能是折点或者单独一个点或者是没有定义.）上，要注意分开讨论，如果在分断点上用导数第二定义，不在，就先找函数表达式，再求导。</p>
<h2 id="高阶函数求导"><a href="#高阶函数求导" class="headerlink" title="高阶函数求导:"></a>高阶函数求导:</h2><p>注意：找规律</p>
<p>高阶函数的表示：</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/bd10715b-7914-4e60-910d-497e4b886636.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/561edaa0-ccfe-48f6-b5a0-a90deac8ed73.jpg"></th>
</tr>
</thead>
</table>
<h2 id="与切线方程结合："><a href="#与切线方程结合：" class="headerlink" title="与切线方程结合："></a>与切线方程结合：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/448b9343-96f8-4352-9dcf-433ae1576f29.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b3d7449d-fcdb-45df-b932-1f0f17f88407.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0f2a17c3-517d-454f-9e04-1b286b04075c.jpg"></td>
<td></td>
</tr>
</tbody></table>
<p>注意：</p>
<p>1.先求切点，再求斜率</p>
<p>2.法线：与切线垂直的线</p>
<h2 id="近似值计算："><a href="#近似值计算：" class="headerlink" title="近似值计算："></a>近似值计算：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/00ff393c-e0a4-419a-b205-8ba8bfd402ea.jpg"></p>
<p>方法：（注意近似值计算只有小数，没有分数。）</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3a645ecc-17bb-49ee-b641-ada1b26c5c10.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/843e0e2a-c566-4544-bfd6-5044491daedf.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/99d5ed14-ad2a-43d8-9a2b-7b991ae339f2.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/afafb3be-9552-4582-8d6a-1715cc39233e.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/680c66fc-55bf-420f-a7be-08efddc7abd5.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3d45b172-89cc-42f5-a1cc-0d862594bc4b.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2bfe26e5-0c3b-42e6-8cf3-9d2140fb5a0a.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1d461df6-be14-49c6-8a11-09906897359a.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3538e593-f9d0-4331-841c-8313c7a66f85.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5278643f-70da-4f72-be7d-fd3580a7cd9d.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3538e593-f9d0-4331-841c-8313c7a66f85.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/60734a4f-a3ff-4ac5-af3a-67cd2a5762a5.jpg"></td>
</tr>
<tr>
<td></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/220d787e-8aa6-4a49-bc63-ff3844f39a0e.jpg"></td>
</tr>
</tbody></table>
<h2 id="单调性-极值，最值拐点，凹凸区间和渐近线："><a href="#单调性-极值，最值拐点，凹凸区间和渐近线：" class="headerlink" title="单调性,极值，最值拐点，凹凸区间和渐近线："></a>单调性,极值，最值拐点，凹凸区间和渐近线：</h2><blockquote>
<p>解题的一般步骤：</p>
</blockquote>
<ul>
<li>求函数定义域</li>
<li>求导</li>
<li>找分割点（函数等于0的点或无定义点（函数值不存在的点））</li>
<li>分点分区间去求函数的单调性和极值，求拐点时要把使函数二次导为0的点代入原函数里。</li>
</ul>
<h3 id="1-单调性："><a href="#1-单调性：" class="headerlink" title="1.单调性："></a>1.单调性：</h3><blockquote>
<p>函数的导数大于0，函数单调递增，函数的导数小于0，函数单调递减。</p>
</blockquote>
<h3 id="2-极值（局部概念）："><a href="#2-极值（局部概念）：" class="headerlink" title="2.极值（局部概念）："></a>2.极值（局部概念）：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/45b6f17a-d015-431c-a663-cd234e36a764.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2977dc4d-89fe-4aaf-a3a8-3e120593c95e.jpg"></th>
</tr>
</thead>
</table>
<p>修正：极值点驻点的第3条：二阶导存在且非零的驻点一定是极值点。</p>
<h3 id="3-最值（整体概念）："><a href="#3-最值（整体概念）：" class="headerlink" title="3.最值（整体概念）："></a>3.最值（整体概念）：</h3><blockquote>
<p>解这类题要先判断函数单调性，再代入所给定义域的端点值，求出最值。</p>
</blockquote>
<h3 id="4-单调性证明不等式："><a href="#4-单调性证明不等式：" class="headerlink" title="4.单调性证明不等式："></a>4.单调性证明不等式：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/49c3dd8c-76ee-4608-b42e-e77556f35ab5.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/858025cb-a338-468a-8b2f-e8f02994fccd.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5c9bb03f-da61-4b49-9faf-425cc3eb7f3f.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5cbbe415-9f12-4394-b36e-3ef6d420efca.jpg"></td>
</tr>
</tbody></table>
<h3 id="5-拐点和凹凸区间："><a href="#5-拐点和凹凸区间：" class="headerlink" title="5.拐点和凹凸区间："></a>5.拐点和凹凸区间：</h3><p>拐点：连续曲线上凹弧与凸弧的分界点。</p>
<p>注：1.凹凸不分先后</p>
<p>2.拐点是曲线上的点，写作（x0，y0),极值点是定义域内的点，写作x&#x3D;x0.</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7604b61e-4dc8-489e-aacd-fa0517e9b78c.jpg"></p>
<p>3.一切可能的拐点：1.二阶导为0的点；2.二阶导无定义的点<br>一切可能的极值点：1.一阶导为0的点（驻点）；2.一阶导无定义的点<br>无意义的点：1.间断点2.取不到的端点</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e590b0a6-d36c-4ccd-a6bc-7c1116c5ea78.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e011363b-55bf-4d01-aa32-c081169ff27d.jpg"></th>
</tr>
</thead>
</table>
<h3 id="6-渐近线："><a href="#6-渐近线：" class="headerlink" title="6.渐近线："></a>6.渐近线：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9565d2cb-b6eb-401e-aa1e-9b686e75ce89.jpg"></p>
<p>单侧趋向，水平垂直都适用</p>
<p>x0是f（x）的无定义点</p>
<h2 id="最优化问题"><a href="#最优化问题" class="headerlink" title="最优化问题:"></a>最优化问题:</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/38e2bb3e-25a0-474f-b0f9-0856d30a4ee6.jpg"></p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d7bf17c5-a50a-4e64-b08a-5bedce6e9547.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/535fed24-94bc-467f-8877-a694f028504b.jpg"></th>
</tr>
</thead>
</table>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>定积分</title>
    <url>/2022/10/06/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-06-%E5%AE%9A%E7%A7%AF%E5%88%86/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3cd26595da525277af03391a8aa1c23.jpg" style="zoom: 50%;" />

<h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>对定积分换元时，会影响积分上下限的结果，记得要将上下限的值分别代入元中的x，以求出元的上下限。</p>
<blockquote>
<p>不定积分的f(x)代表的是全体原函数</p>
</blockquote>
<blockquote>
<p>定积分的f(x)代表的是一个数</p>
</blockquote>
<blockquote>
<p>变限积分的f(x)代表的是一个原函数</p>
</blockquote>
<h2 id="几何意义"><a href="#几何意义" class="headerlink" title="几何意义"></a>几何意义</h2><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ba154dbd8cad83066b529699266c83b.jpg" style="zoom: 50%;" />



<h2 id="变限积分"><a href="#变限积分" class="headerlink" title="变限积分"></a>变限积分</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c3d65742c6815ad77a364da3d10a07f.jpg" style="zoom: 33%;" /></th>
<th></th>
</tr>
</thead>
</table>
<img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/屏幕截图 2022-09-22 182420.jpg" style="zoom:150%;" />

<h2 id="定积分的性质："><a href="#定积分的性质：" class="headerlink" title="定积分的性质："></a>定积分的性质：</h2><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/屏幕截图 2022-09-22 182717.jpg" style="zoom:80%;" />

<h3 id="性质6的应用："><a href="#性质6的应用：" class="headerlink" title="性质6的应用："></a>性质6的应用：</h3><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a6bb69159ec47a8cd237062c4c7b781.jpg" style="zoom: 67%;" />

<h2 id="积分中值定理："><a href="#积分中值定理：" class="headerlink" title="积分中值定理："></a>积分中值定理：</h2><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f364ec782e26725ed2c28bbf78a350f.jpg" style="zoom:33%;" />



<h2 id="广义积分"><a href="#广义积分" class="headerlink" title="广义积分"></a>广义积分</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/bf7c49e015f0eef61edaa11d3d0d96b.jpg" style="zoom:33%;" /></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2de7825583f6b196119f91127860f51.jpg"></th>
</tr>
</thead>
</table>
<hr>
<p>1.p:分母与分子的最高次方之差；<br>2.积分上下限不一定是0到a，a到b适用规则也一样；<br>3.第一象限内，单增函数的无穷广义积分一定发散，单减函数的无穷广义积分未必收敛；<br>4.震荡函数的无穷广义积分一定发散；<br>5.否则，进行计算：能代则代，不能代单侧取极限；</p>
<h2 id="可积的条件"><a href="#可积的条件" class="headerlink" title="可积的条件"></a>可积的条件</h2><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f9c1792a64cfee1c5436f8c64c452fc.jpg" style="zoom: 33%;" />

<h3 id="牛顿-莱布尼茨公式"><a href="#牛顿-莱布尼茨公式" class="headerlink" title="牛顿-莱布尼茨公式"></a>牛顿-莱布尼茨公式</h3><blockquote>
<p>通常也被称为微积分基本定理，揭示了定积分与被积函数的原函数或者不定积分之间的联系。</p>
</blockquote>
<img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/屏幕截图 2022-09-22 184402.jpg" style="zoom:80%;" />

<h2 id="特殊积分："><a href="#特殊积分：" class="headerlink" title="特殊积分："></a>特殊积分：</h2><h3 id="偶倍奇零"><a href="#偶倍奇零" class="headerlink" title="偶倍奇零"></a>偶倍奇零</h3><blockquote>
<p>当被积函数有奇偶性时，直接用结论。没有奇偶性时，套公式。</p>
</blockquote>
<h4 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h4><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d5799ec26ad6df8a10fa827152d9498.jpg" style="zoom:33%;" />


<h4 id="公式（适用于对称区间的定积分）："><a href="#公式（适用于对称区间的定积分）：" class="headerlink" title="公式（适用于对称区间的定积分）："></a>公式（适用于对称区间的定积分）：</h4><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5274285386467cc265773aafccdc3fd.jpg" style="zoom:50%;" />



<h3 id="分段函数的定积分："><a href="#分段函数的定积分：" class="headerlink" title="分段函数的定积分："></a>分段函数的定积分：</h3><p>1.被积函数为f(x): 分段点插入，找到对应函数再积分。<br>2.被积函数为f[∅(x)]: 动前不动后</p>
<p>case:</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1f9c9cc2d8b53efc80841c167f17041.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d1c705bfb3243c2ff19f464f43a5be6.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a85137bfc197f091495e34a19bb8033.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h3 id="华里士公式"><a href="#华里士公式" class="headerlink" title="华里士公式"></a>华里士公式</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/v2-28fdb926e4ba3113da4b1ef7fbf8adbf_1440w.jpg"></p>
<h2 id="定积分的应用："><a href="#定积分的应用：" class="headerlink" title="定积分的应用："></a>定积分的应用：</h2><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f56d04fc971e8075baaecf2d82ad09f.jpg" style="zoom: 33%;" />



<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8ae16efa2b259f6b035603feca53be5.jpg"></p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/228ce586a8964ea655ae1bd68162777.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7db638a82674a5728418a0b5294c1d1.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/790a732a0baa263a24eff499314a270.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c7552aa6205a778e4928383c746481f.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d40e800ff90f1a7e3a0c0d05da1127a.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="一些定积分的计算："><a href="#一些定积分的计算：" class="headerlink" title="一些定积分的计算："></a>一些定积分的计算：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d6ea55e2948b4b6a3a7eca242826518.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b0c2a659bf835a1aa48a7f2ad818b10.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9bc4def4ff296eb1f56bdc3c495c95c.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/19926a2792d7fc97348874c4e9fa986.jpg"></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>多元函数微分</title>
    <url>/2022/10/07/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-07-%E5%A4%9A%E5%85%83%E5%87%BD%E6%95%B0%E5%BE%AE%E5%88%86/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="一，计算多元微分表达式的方法："><a href="#一，计算多元微分表达式的方法：" class="headerlink" title="一，计算多元微分表达式的方法："></a>一，计算多元微分表达式的方法：</h2><p>能凑则凑，不能凑用换元</p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c22527389d40fb7dcceb9e72248bfb9.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e5e3f47d574af6bccae82f1d5bfc912.jpg"></th>
</tr>
</thead>
</table>
<h2 id="二，（代数运算）计算多元极限的方法："><a href="#二，（代数运算）计算多元极限的方法：" class="headerlink" title="二，（代数运算）计算多元极限的方法："></a>二，（代数运算）计算多元极限的方法：</h2><ol>
<li>能代入，代入即是极限值；</li>
<li>化简之后能代入，代入也是极限值；</li>
<li>否则，转换为一元求极限；</li>
</ol>
<table>
<thead>
<tr>
<th></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4c60e8d7f29aa9284dfeb944ace10a7.jpg"></th>
</tr>
</thead>
</table>
<h2 id="二，偏导"><a href="#二，偏导" class="headerlink" title="二，偏导"></a>二，偏导</h2><h3 id="偏导数的求法："><a href="#偏导数的求法：" class="headerlink" title="偏导数的求法："></a>偏导数的求法：</h3><ol>
<li>对谁求偏导谁是变量，其它当作常数，求偏导数再代入；</li>
<li>对谁求偏导数，将其它量代入，转化为一元函数求导，再代入；</li>
<li>分段函数在分段点处，利用偏导定义求偏导；</li>
</ol>
<h3 id="性质："><a href="#性质：" class="headerlink" title="性质："></a>性质：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ce70d555ff940c40ad5b89155d74eac.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/be81fe5c10aef4a0206b004f9ab4416.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c04c2984707200429ee42531fc8b29c.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8c54eadf7911d023e7f6f5fd8740377.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/be81fe5c10aef4a0206b004f9ab4416.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d1c4af012e5e6a2ea0eb5db2d671099.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0f97dc7df3a7d1ba792ea3a85dbcbb6.jpg"></td>
<td></td>
</tr>
</tbody></table>
<p>全微分，显函数求偏导，隐函数求偏导</p>
<h3 id="复合函数求偏导："><a href="#复合函数求偏导：" class="headerlink" title="复合函数求偏导："></a>复合函数求偏导：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4bdfd66e3b9329f0da55d07f0a75199.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1fa8b37f6d367b8de4ae13d564cdc77.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f2fa9bcf4ba8155a5b3197ef56990d2.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4021a984d9c34986cf38f0e072537e9.jpg"></td>
</tr>
</tbody></table>
<h3 id="二阶混合偏导："><a href="#二阶混合偏导：" class="headerlink" title="二阶混合偏导："></a>二阶混合偏导：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/bb42a302b8590f361147abfdf1c506c.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7384812926fccd17daa58dd73934784.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e7f09e773bd37eb9fc42f54a310a2e5.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="多元函数的极值和条件极值"><a href="#多元函数的极值和条件极值" class="headerlink" title="多元函数的极值和条件极值"></a>多元函数的极值和条件极值</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cf2d493ce10176615b5d26261123770.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e6fcabfb92a0653c1c2958d577ad0d2.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3ba1ce85ae683ae7d9021f24e7d3f2b.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/419a73da07f17cbe24124bddfbb63b4.jpg"></td>
</tr>
</tbody></table>
<blockquote>
<p>求条件极值时，当有约束条件且约束条件简单，可以直接转换成一元最值问题。</p>
</blockquote>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8a83a2a3abe288d493501ba7e44345e.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b73c5105da3a5216c24ef287a2f8ace.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0b6523710aab23f46821532fcb7e187.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="多元微分的几何应用"><a href="#多元微分的几何应用" class="headerlink" title="多元微分的几何应用"></a>多元微分的几何应用</h2><h3 id="空间曲线"><a href="#空间曲线" class="headerlink" title="空间曲线"></a>空间曲线</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/bf7587ca71b53ca95044c7dfdc71817.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/35f9e673643420648a992ea9747fbdb.jpg"></th>
</tr>
</thead>
</table>
<h3 id="空间曲面"><a href="#空间曲面" class="headerlink" title="空间曲面"></a>空间曲面</h3><p>​      </p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/38daaa9ee2efc200d9a0667ff716b5e.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4f5f1c2ac93befcd9763b617b152c16.jpg"></th>
</tr>
</thead>
</table>
<p>​p>
<h3 id="方向导数"><a href="#方向导数" class="headerlink" title="方向导数"></a>方向导数</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f5d6353cee23ceb79a6efa8aa4def58.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9cffaceaa72889a7005d1d93e186e5d.jpg"></th>
</tr>
</thead>
</table>
<h3 id="梯度（本质是一个向量）"><a href="#梯度（本质是一个向量）" class="headerlink" title="梯度（本质是一个向量）"></a>梯度（本质是一个向量）</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cafd9069c494b82a481948589104966.jpg"></p>
<blockquote>
<p>方向导数的最大值就是梯度的模</p>
</blockquote>
<blockquote>
<p>方向导数的最小值就是梯度的模的相反数</p>
</blockquote>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>二重积分</title>
    <url>/2022/10/08/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-08-%E4%BA%8C%E9%87%8D%E7%A7%AF%E5%88%86/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="二重积分性质："><a href="#二重积分性质：" class="headerlink" title="二重积分性质："></a>二重积分性质：</h2><table>
<thead>
<tr>
<th>性质4</th>
<th>偶倍奇零</th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/db5f5055937af02b18356f0b27a8148.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/23821434bbd63522af52307084cf00e.jpg" style="zoom: 150%;" /></td>
</tr>
</tbody></table>
<h2 id="二重积分的计算"><a href="#二重积分的计算" class="headerlink" title="二重积分的计算"></a>二重积分的计算</h2><blockquote>
<p>后积先定限，限内划条线，先交写下限，后交写上限</p>
</blockquote>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a4772c3cb909cf93118b3e812069134.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cf1e51de8c282ba94c968d2f0573637.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6d8d3d1c2e70110f8dd8451933b018a.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0b5a609420ac45615c2f4dd5c670076.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0dcece517a58515c8cac49bd940d215.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="直角坐标系下x-y交换积分次序技巧："><a href="#直角坐标系下x-y交换积分次序技巧：" class="headerlink" title="直角坐标系下x-y交换积分次序技巧："></a>直角坐标系下x-y交换积分次序技巧：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e10edd9351dcbc2c4544c0d2982a5fb.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/702d664411a71ffe587b332c8f78188.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/962af595863946e0195e09bac688ff9.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/98393a909d32c005eb9132bc590c29e.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c1fce8563d532bdf1c2c850c6bf216d.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="极坐标系下计算二重积分："><a href="#极坐标系下计算二重积分：" class="headerlink" title="极坐标系下计算二重积分："></a>极坐标系下计算二重积分：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/96573a908a74bc0a29371a0e8339ec0.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/30a49c4134f900cfcb1d96f68f4832c.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c0ec7510e675ca7a5f7d025196d7547.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cb2747eb720ac70eb3260d9952cf14d.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a539fc000c2a4a9a119388b4f9c081e.jpg"></td>
<td></td>
</tr>
</tbody></table>
<p>角度由象限确定，半径由原式确定</p>
<h2 id="利用二重积分计算空间几何体体积："><a href="#利用二重积分计算空间几何体体积：" class="headerlink" title="利用二重积分计算空间几何体体积："></a>利用二重积分计算空间几何体体积：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/34671b17730b230ebff0d656f18e885.jpg"></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e42414c99bf3b321d8dc2949f4b42af.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5b9b2c8dd3975bef6f2b942e8855aa5.jpg"></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>微分方程</title>
    <url>/2022/10/11/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-11-%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="基本概念："><a href="#基本概念：" class="headerlink" title="基本概念："></a>基本概念：</h2><blockquote>
<p>微分方程就是含导数和微分的方程</p>
</blockquote>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1c4aacec7daff3f389896e9f4fbbcc1.jpg"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/73ecf306ef594f89b13440069408d4f.jpg"></p>
<blockquote>
<p>公式仅针对线性（线性符合在一个地方一次只能出现一个y及其导数）</p>
</blockquote>
<h2 id="求一阶微分方程的通解："><a href="#求一阶微分方程的通解：" class="headerlink" title="求一阶微分方程的通解："></a>求一阶微分方程的通解：</h2><h3 id="一阶线性齐次-x2F-可分离变量："><a href="#一阶线性齐次-x2F-可分离变量：" class="headerlink" title="一阶线性齐次&#x2F;可分离变量："></a>一阶线性齐次&#x2F;可分离变量：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b43893312dc880ac9a936a5c497e0f8.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/51e6c590be0a8fa900cf8f569ed0b9b.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/09dbd1a52359aa99eac2173b24c7a33.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e3c7d5f244b00bd81f100471dbdb45c.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f4260e2b571c742fce3ba9aff72315d.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b869202a711f3d8fa694bfd4d257190.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/bdd36f848adfc2ece9d4543cd3235bd.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h3 id="一阶线性非齐次："><a href="#一阶线性非齐次：" class="headerlink" title="一阶线性非齐次："></a>一阶线性非齐次：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/977cb2d6b0ca4ec9380ca35dbff0be0.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0131ed51a045af9ba3ce4ed80a49de7.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c45ff21aa65e7bf3bc83aaca07f430d.jpg"></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="一阶齐次："><a href="#一阶齐次：" class="headerlink" title="一阶齐次："></a>一阶齐次：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/77c56c78300d82a9e3f9e6d397381cd.jpg"></p>
<h2 id="二阶微分方程求通解："><a href="#二阶微分方程求通解：" class="headerlink" title="二阶微分方程求通解："></a>二阶微分方程求通解：</h2><h3 id="性质："><a href="#性质：" class="headerlink" title="性质："></a>性质：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/07b0824fe80cecc8d3f0fca345d878e.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/52edf1d983c6b0fff4989883d1b5a16.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="二阶常系数齐次线性微分方程求通解："><a href="#二阶常系数齐次线性微分方程求通解：" class="headerlink" title="二阶常系数齐次线性微分方程求通解："></a>二阶常系数齐次线性微分方程求通解：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/bb2f60725335337e124d80180676dc7.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d128fc61e048b1595b980960621d667.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cf4a600938093d4dd1313c75398a179.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/21a5f55b5be5290c8fd0cb37c7a711d.jpg"></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="二阶常系数非齐次线性微分方程求通解："><a href="#二阶常系数非齐次线性微分方程求通解：" class="headerlink" title="二阶常系数非齐次线性微分方程求通解："></a>二阶常系数非齐次线性微分方程求通解：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2b3e7898aa10fec2329a95221bcecac.jpg"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/fa732d1f050c9039fa132d3d84d791d.jpg"></p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/bbe79fe45a8d73fdb3b88546381add0.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/23d1851e9351c3a8d98e1a333258ff6.jpg"></th>
</tr>
</thead>
</table>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/477e7e1828f81b6a00dc519ba6bad9d.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/bdd36f848adfc2ece9d4543cd3235bd.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9e41272cb753558d588491c5bdf2918.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1cb3d04ebf0c859a0ddaaf4bfef0788.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d8a4a407232b43a8b640dfcdaa82b27.jpg"></td>
<td></td>
</tr>
</tbody></table>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/be1e1c440bdfb5d1859289a34f8c7de.jpg"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6c0ecf9ec43f933dc603c84def2adcd.jpg"></p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>曲线积分</title>
    <url>/2022/10/10/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-10-%E6%9B%B2%E7%BA%BF%E7%A7%AF%E5%88%86/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="第一类曲线积分："><a href="#第一类曲线积分：" class="headerlink" title="第一类曲线积分："></a>第一类曲线积分：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/210980fba0954c8efc3a399e2646c3b.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/caac178e2212d8b75d47e3f845eb8e1.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87%E7%BC%96%E8%BE%91_20221107194757.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h3 id="性质："><a href="#性质：" class="headerlink" title="性质："></a>性质：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2341e2dcf5f0ac8568a7aa1d4474052.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4e234bf4143e92cacb905e1bc8f23a4.jpg"></th>
</tr>
</thead>
</table>
<h2 id="第二类曲线积分："><a href="#第二类曲线积分：" class="headerlink" title="第二类曲线积分："></a>第二类曲线积分：</h2><h3 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h3><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3bfce4b1b9743cf28adaf4d22e8e0f7.jpg"></h3><h3 id="计算方法："><a href="#计算方法：" class="headerlink" title="计算方法："></a>计算方法：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3ca1a051e639773796e6bf715a74c55.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cabde2f350b9a13a2c3c12be78a062d.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a4d44a167635d141708d418dfb36868.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/92aa8cfdefc4efee5e429d3049e4486.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d22580808d60bbbc146e6ccfcab5915.jpg"></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4dfd7da67d9af2efb6e099c907ca0d9.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8a3fc111525e1aac95315efd65d870a.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a75db1c405b0659e899b9cd532a5c00.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0b5c053274f37608e4f9160168e94cd.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/65224f998010d15ae0b061caf8d6b3e.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/539951ffe7c3daed477d418f1c73a16.jpg"></td>
</tr>
</tbody></table>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f7937f93e867895d77a16253bd3bcf3.jpg"></p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>向量</title>
    <url>/2022/10/09/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-09-%E5%90%91%E9%87%8F/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="概念与公式："><a href="#概念与公式：" class="headerlink" title="概念与公式："></a>概念与公式：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c8dbc5469da84f2f23b25c401318068.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/71fc08b67820c614e49f231668ab8c7.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a71e8c2d32ac299f28e6aae5694feb6.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9f8ac98c85a42bd3ad1c528c5dfd152.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5651750857f499705dc7d3443d478fe.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3cec38ea9e889ab640660cd5c35fa81.jpg"></td>
</tr>
</tbody></table>
<h2 id="空间平面与空间直线"><a href="#空间平面与空间直线" class="headerlink" title="空间平面与空间直线"></a>空间平面与空间直线</h2><h3 id="向量对称点："><a href="#向量对称点：" class="headerlink" title="向量对称点："></a>向量对称点：</h3><p>某轴对称某不变；某面对称某不变；原点对称全相反；</p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f1f60a72971a78734fd147edf961b63.jpg"></p>
<h3 id="空间平面"><a href="#空间平面" class="headerlink" title="空间平面"></a>空间平面</h3><p>法向量：垂直于平面的非零向量。</p>
<h4 id="平面的点法式与一般式"><a href="#平面的点法式与一般式" class="headerlink" title="平面的点法式与一般式"></a>平面的点法式与一般式</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/80631aefddc44c91ffcd7481178f60b.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/33a40478ff872e97b8b851034c64480.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a4d1361c5add9e47248b19d058269fe.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ae79fec62410715314776ae50dd44c5.jpg"></td>
</tr>
</tbody></table>
<blockquote>
<p>对于一般式方程：平行于谁谁消失，过谁D也消失。</p>
</blockquote>
<h4 id="点到平面的距离公式与俩平行平面的距离公式"><a href="#点到平面的距离公式与俩平行平面的距离公式" class="headerlink" title="点到平面的距离公式与俩平行平面的距离公式"></a>点到平面的距离公式与俩平行平面的距离公式</h4><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/633aff5596a99bd9ac595334eb07f5c.jpg" style="zoom: 67%;" />

<h3 id="空间直线"><a href="#空间直线" class="headerlink" title="空间直线"></a>空间直线</h3><p>方向向量：平行于直线的非零向量。</p>
<h4 id="一般式与点向式"><a href="#一般式与点向式" class="headerlink" title="一般式与点向式"></a>一般式与点向式</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/996d8971250e408eb6008b6efd19d73.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/980c405c8c2d50de992ada8d0d05280.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/eb85c463a80b9015c819ea34ea30c4b.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h4 id="参数方程"><a href="#参数方程" class="headerlink" title="参数方程"></a>参数方程</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/785aa768cac3732619bae903adbc7cc.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/789b223e512fa6bbb651632bbfe9b0a.jpg"></th>
</tr>
</thead>
</table>
<h3 id="计算线与面的交点："><a href="#计算线与面的交点：" class="headerlink" title="计算线与面的交点："></a>计算线与面的交点：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ba83e581cc183733d0c12e6bdcdeda2.jpg"></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4023e32be09132c30f4256ed42f0ef5.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b23ab34ef90c8841c4341928c4059f4.jpg"></td>
</tr>
</tbody></table>
<h3 id="直线与平面的位置关系判断："><a href="#直线与平面的位置关系判断：" class="headerlink" title="直线与平面的位置关系判断："></a>直线与平面的位置关系判断：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e354de3882bb3f8c4ded2fbdc2246c5.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/be943f666df10c0a70177b8025eb44c.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/be8bee8a756d75582fb276159f43d5d.jpg"></td>
</tr>
</tbody></table>
<h2 id="空间曲线"><a href="#空间曲线" class="headerlink" title="空间曲线"></a>空间曲线</h2><h3 id="旋转曲面"><a href="#旋转曲面" class="headerlink" title="旋转曲面"></a>旋转曲面</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/717404c43900971eb214f8bf698249a.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e1a144d1e5b9e1715c35bfa37e2cae4.jpg"></th>
</tr>
</thead>
</table>
<h3 id="投影（柱面）方程"><a href="#投影（柱面）方程" class="headerlink" title="投影（柱面）方程"></a>投影（柱面）方程</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/92e5e4e2eaa6257ddd57662bc136ad9.jpg"></p>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c749d78bd6fda5ab310b2d5d776ad9b.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9782b42a0eb50c1f58eeb5ee9894992.jpg"></th>
</tr>
</thead>
</table>
<h2 id="二次曲面"><a href="#二次曲面" class="headerlink" title="二次曲面"></a>二次曲面</h2><h3 id="柱面"><a href="#柱面" class="headerlink" title="柱面"></a>柱面</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cf2ddf1450f0b776df45041aea314d8.jpg"></p>
<h3 id="抛物面"><a href="#抛物面" class="headerlink" title="抛物面"></a>抛物面</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/32f914d09d3aa6e6101ca50a1a767c0.jpg"></p>
<h3 id="其余类型"><a href="#其余类型" class="headerlink" title="其余类型"></a>其余类型</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/34d0dab6bff5995f9bac1b971d2e2eb.jpg"></p>
<p>锥面指的是单双叶双曲面的情况和</p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>高数证明题</title>
    <url>/2022/10/13/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-13-%E9%AB%98%E6%95%B0%E8%AF%81%E6%98%8E%E9%A2%98/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="总览："><a href="#总览：" class="headerlink" title="总览："></a>总览：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4cc53b9a57adf7322264f97b6ad3597.jpg"></p>
<h2 id="不等式："><a href="#不等式：" class="headerlink" title="不等式："></a>不等式：</h2><h3 id="连体："><a href="#连体：" class="headerlink" title="连体："></a>连体：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b89ac72fd652e11f4ce761de6d4e609.jpg"></p>
<h3 id="单体："><a href="#单体：" class="headerlink" title="单体："></a>单体：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9ff4d5f3708e592ae26b8e40285f81c.jpg"></p>
<h2 id="等式："><a href="#等式：" class="headerlink" title="等式："></a>等式：</h2><h3 id="不含柯西："><a href="#不含柯西：" class="headerlink" title="不含柯西："></a>不含柯西：</h3><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/200aa4b13ede8714ae8ace96421a360.jpg"></p>
<h3 id="含一个柯西："><a href="#含一个柯西：" class="headerlink" title="含一个柯西："></a>含一个柯西：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3e96fb7450002e03a7e5046417a1b4f.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/975362f19571565e92655f77950df19.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cb35420a84ab232653bbb81aa291713.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h3 id="含俩个柯西："><a href="#含俩个柯西：" class="headerlink" title="含俩个柯西："></a>含俩个柯西：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/999b5f619f68607c30bb577b4f4647f.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/27c3278e7501ae084caf47a0f430070.jpg"></th>
</tr>
</thead>
</table>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>常用数学公式</title>
    <url>/2022/10/14/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-14-%E5%B8%B8%E7%94%A8%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="球的体积与表面积："><a href="#球的体积与表面积：" class="headerlink" title="球的体积与表面积："></a>球的体积与表面积：</h2><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/屏幕截图 2022-10-18 181236.jpg" style="zoom: 80%;" />

<h2 id="立方差公式："><a href="#立方差公式：" class="headerlink" title="立方差公式："></a>立方差公式：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a98f88f7725be091e918260fe6fcbe9.jpg"></p>
<h2 id="拆项："><a href="#拆项：" class="headerlink" title="拆项："></a>拆项：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/fa32943aca2263cb32fd8d79ed5a5eb.jpg"></p>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/082f30f1455a0ebf50437fdcbaf251b.jpg"></p>
<h2 id="倍角公式："><a href="#倍角公式：" class="headerlink" title="倍角公式："></a>倍角公式：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b9491f010bb54c7fcd3830f9d89f6bb.jpg"><br>$$<br>i\hbar\frac{\partial}{\partial t}\psi&#x3D;-\frac{\hbar^2}{2m}\nabla^2\psi+V\psi<br>$$<br>行间公式$O(f(n))&#x3D;log_2^{n}$测试<br>$$<br>\begin{equation}<br>\begin{aligned}<br>&amp; \sin 2 \alpha&#x3D;2 \sin \alpha \cos \alpha \<br>&amp; \cos 2 \alpha&#x3D;\cos ^2 \alpha-\sin ^2 \alpha&#x3D;2 \cos ^2 \alpha-1&#x3D;1-2 \sin ^2 \alpha \<br>&amp; \tan 2 \alpha&#x3D;\frac{2 \tan \alpha}{1-\tan ^2 \alpha} \quad \cot 2 \alpha&#x3D;\frac{\cot ^2 \alpha-1}{2 \cot \alpha}<br>\end{aligned}<br>\end{equation}<br>$$</p>
<p>$$<br>\begin{equation}<br>\begin{aligned}<br>&amp; \sin 2 \alpha&#x3D;2 \sin \alpha \cos \alpha \<br>&amp; \cos 2 \alpha&#x3D;\cos ^2 \alpha-\sin ^2 \alpha&#x3D;2 \cos ^2 \alpha-1&#x3D;1-2 \sin ^2 \alpha \<br>&amp; \tan 2 \alpha&#x3D;\frac{2 \tan \alpha}{1-\tan ^2 \alpha} \quad \cot 2 \alpha&#x3D;\frac{\cot ^2 \alpha-1}{2 \cot \alpha}<br>\end{aligned}<br>\end{equation}<br>$$</p>
<img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/MommyTalk1675428671685.png"  />

<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/MommyTalk1675429316555.png"></p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>无穷级数</title>
    <url>/2022/10/12/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/2022-10-12-%E6%97%A0%E7%A9%B7%E7%BA%A7%E6%95%B0/</url>
    <content><![CDATA[<p>我的数学专升本笔记</p>
<span id="more"></span>

<h2 id="总览："><a href="#总览：" class="headerlink" title="总览："></a>总览：</h2><p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f44eb211393f450b42b8c18d832083c.jpg"></p>
<h2 id="基本概念："><a href="#基本概念：" class="headerlink" title="基本概念："></a>基本概念：</h2><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9915635792f7acd6ae1096bfa730834.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/724da3492be506a0252a2072276b0d3.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/83e85413e483bc25e03bc8ef2f06f42.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a5331cd8e3d1e3e8b45f9d2238f6e4d.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f9f0d5e69cfcd624b8c16d7d77dbf07.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f2784de696009ae64bf5fcbc8701dec.jpg"></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/52a9853b9b2ca3360d9c022875041a3.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0fc2db0e4a3cd8062f2f2bbad9bf1f0.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ccc2847012585b57feee22deb797e36.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e8e0bf4152148a91dd11b048d1de80d.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ec0e4c28b566587cc2bf3e866f1e2a0.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/a810b7686150c9a3ef08c19eb01ef11.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9e1d90f762787ae1a76cc99c20cb1d9.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="性质："><a href="#性质：" class="headerlink" title="性质："></a>性质：</h2><h2 id="常数项级数："><a href="#常数项级数：" class="headerlink" title="常数项级数："></a>常数项级数：</h2><h3 id="正向级数："><a href="#正向级数：" class="headerlink" title="正向级数："></a>正向级数：</h3><h4 id="比较审敛法："><a href="#比较审敛法：" class="headerlink" title="比较审敛法："></a>比较审敛法：</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4de7e88e95146acfa45e38c17563e32.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8162015b1d028dce5d937b2189560fb.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1c3724944be23e69e8ca06f48a15ffd.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/9f537fb3f3f141c330e573a0a3733c6.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/df8a9d258867c9dac7902cfee35cc39.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c9d04091528f250552ce9d13094c43a.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2870bb63b21821f76814f59536473b6.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7b2139c75af93e42eaa79389e03c4c5.jpg"></td>
</tr>
</tbody></table>
<h4 id="比值审敛法："><a href="#比值审敛法：" class="headerlink" title="比值审敛法："></a>比值审敛法：</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/587c1601e49e0d30dfeb7a316d1f0db.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/ddd5999646177a1abc79d54ddbe6bac.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e0078f6863d63f52df55ff3a7bed268.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/66f92f1086d4383ba8ce8669ecf6367.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2868fb67e8a2dd499bf5dbb1cc4d238.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/77c2e6dc68172018c55651f40209d24.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/24bf67322d262253031538401a57d2c.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h4 id="根值审敛法："><a href="#根值审敛法：" class="headerlink" title="根值审敛法："></a>根值审敛法：</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f44d48b12a157a1de652cc66cbc9185.jpg"></th>
<th></th>
</tr>
</thead>
</table>
<h3 id="交错级数："><a href="#交错级数：" class="headerlink" title="交错级数："></a>交错级数：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7e9149cc0c8300d9754e1bd8b4cad68.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3ffaf62f955c6531564898709134d3c.jpg"></th>
</tr>
</thead>
</table>
<h3 id="任意常数项级数："><a href="#任意常数项级数：" class="headerlink" title="任意常数项级数："></a>任意常数项级数：</h3><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/79187702330122f6d43fe819296157e.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/e8ce3b7fc24156e4a69c6c3bfa61386.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4f949806399a8a8c1782923bf9492d6.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3371cc1e0d63029a783520d4e761bfd.jpg"></td>
</tr>
</tbody></table>
<h2 id="函数项级数（幂函数）："><a href="#函数项级数（幂函数）：" class="headerlink" title="函数项级数（幂函数）："></a>函数项级数（幂函数）：</h2><h3 id="收敛（半径，区间，域）："><a href="#收敛（半径，区间，域）：" class="headerlink" title="收敛（半径，区间，域）："></a>收敛（半径，区间，域）：</h3><blockquote>
<p>中心点就是令框为0时x的取值</p>
</blockquote>
<blockquote>
<p>不标准就是框的n方里的框不止一项，标准就框里只有x一项。</p>
</blockquote>
<blockquote>
<p>缺项就是框的n方的n前有系数，不缺项就是n前没有系数。</p>
</blockquote>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d9028d91cff1f9dba4af060d8cab22e.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/35e3816c3d6d80142a17ffb9f55ee7d.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/7e2822fd3a449120cb52d1295c0b84e.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/291ebdcd6d5464ea2e808dcf15a89f7.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/30f51cc891abafc7e72a8b7224f391a.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2164b1c25e250e4c53ce649b6fb7c7a.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6d6c722873c5777d4c4b7fb1856229f.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/c0b9d467ebadb786a9dd5e56e287371.jpg"></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/60e031a6d8fbf77e4dac362c8ac6049.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/87887af64a8e75223e3378a38e6ffc7.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6e28fe4e5eba1584a5df02f4bd6445d.jpg"></td>
<td></td>
</tr>
</tbody></table>
<p><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/cbedf823cb30a303516405f03f9f729.jpg"></p>
<h4 id="标准不缺项"><a href="#标准不缺项" class="headerlink" title="标准不缺项"></a>标准不缺项</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f8ad2d9346ed00ecd4961e6151fad26.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4e845e883bf8c7d2423a3261d5af083.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h4 id="非标准不缺项"><a href="#非标准不缺项" class="headerlink" title="非标准不缺项"></a>非标准不缺项</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/1ba4d1686e2576831a06e06d09f6b62.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/570b1395072293ab52273bfb31c306c.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b67c57e2cc6ea13881c3be7bc62cda5.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h4 id="标准缺项"><a href="#标准缺项" class="headerlink" title="标准缺项"></a>标准缺项</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/402961a7d52d7e7a1cdca0fb8e31e37.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/fb38cc9ec09d2ce993dea9c7224c000.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/20764cdf86d81caeea59cf4bd92e29e.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h3 id="和函数："><a href="#和函数：" class="headerlink" title="和函数："></a>和函数：</h3><h4 id="麦克劳林级数："><a href="#麦克劳林级数：" class="headerlink" title="麦克劳林级数："></a>麦克劳林级数：</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/3dbfbdbc75c0485c151c3e1fac686aa.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d8a9faffe51fe074a20b9374204992d.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4df4e80e71ec51937b360579b01e5dd.jpg"></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h4 id="幂级数的性质："><a href="#幂级数的性质：" class="headerlink" title="幂级数的性质："></a>幂级数的性质：</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/fc063d04a75f18a80002e3284b6032a.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/8f42857f66dda31f49f9582abf46575.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d2e48a55c270fda05bfdd0c882226c7.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/05d6dd39da1d1710c9881227fc4185e.jpg"></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h4 id="标准展开："><a href="#标准展开：" class="headerlink" title="标准展开："></a>标准展开：</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/2824ce1f4af2d79bf1f381d3b72f077.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/39e5e5abaaef2692ba710b165f15a27.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/11c97d44f1e504fd84de124d898d286.jpg"></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h4 id="非标准展开："><a href="#非标准展开：" class="headerlink" title="非标准展开："></a>非标准展开：</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/68fb14316f37e981d96825ef254dc02.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/d92c52c50d03e85c7686c505cce4b40.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/6a0d370da0c56a30e4e10de2d44f3c0.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/808839956d3ca9795fba8c041e72848.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/012998a5a638ecab46587813d6d07f6.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/f3156eb9750ab91b6b18c50b7f4213b.jpg"></td>
</tr>
<tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/屏幕截图 2022-11-10 153110.jpg" style="zoom:80%;" /></td>
<td></td>
</tr>
</tbody></table>
<h4 id="和函数：-1"><a href="#和函数：-1" class="headerlink" title="和函数："></a>和函数：</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/屏幕截图 2022-11-10 150320.jpg" style="zoom:80%;" /></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/SharedScreenshot.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/5b58bab4e466584855d9fd5203637f3.jpg"></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/0e6ecd2d6335ec77f7c3dafa0eca856.jpg"></th>
</tr>
</thead>
</table>
<h4 id="收敛区间："><a href="#收敛区间：" class="headerlink" title="收敛区间："></a>收敛区间：</h4><table>
<thead>
<tr>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/屏幕截图 2022-11-10 164510.jpg" style="zoom:80%;" /></th>
<th><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4dad948fc6eea797d34b3fa812365af.jpg"></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/b6cfefc85a6ce1075e98b26f05bfaef.jpg"></td>
<td><img src="https://liuliutuku.oss-cn-hangzhou.aliyuncs.com/tupian0/4dd9a8af4b3205880ef98fe968664bd.jpg"></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
</search>
